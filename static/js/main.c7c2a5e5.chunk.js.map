{"version":3,"sources":["components/ListItem.js","components/ListMenu.js","components/AddList.js","components/Task.js","components/ToDoList.js","components/AddTask.js","components/Alert.js","components/SortMenu.js","components/ToolBar.js","App.js","FirestoreApp.js","index.js"],"names":["ListItem","props","className","value","listName","onChange","e","onListFieldChanged","listID","target","onKeyPress","key","preventDefault","onClick","onListSelected","showHomepage","onDeleteList","ListMenu","id","listData","map","list","currListID","currListName","homepage","AddTask","useState","currList","setCurrList","placeholder","onAddList","console","log","Task","type","checked","isCompleted","onTaskFieldChanged","taskId","taskLabel","disabled","priority","onChangePriority","repeat","onDeleteTask","ToDoList","taskList","task","AddList","currTask","setCurrTask","onAddTask","Alert","children","onOK","onClose","SortMenu","onSortByCreationDate","sortOption","onSortByName","onSortByPriority","ToolBar","showAlert","setShowAlert","showSortMenu","setSortMenu","toggleModal","toggleSortModal","onSortSelected","sortOptionText","describeSortOption","showCompleted","onSetShowCompleted","numCompleted","onDeleteTasks","App","setShowCompleted","filteredList","filter","length","handleAddList","handleListSelected","handleDeleteList","handleListFieldChanged","onSetTaskList","setTaskList","handleAddTask","handleDeleteTask","handleChangePriority","handleDeleteTasks","handleTaskFieldChanged","handleSortSelected","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","FirestoreApp","collectionName","queryAll","collection","useCollection","all_value","listIDs","docs","doc","data","currentList","setCurrentList","query","setSortOption","orderBy","loading","currentListName","newList","newId","generateUniqueID","set","delete","field","update","taskID","taskPriority","docRef","where","get","then","querySnapshot","forEach","ref","dateCreated","database","ServerValue","TIMESTAMP","option","ReactDOM","render","StrictMode","initialData","document","getElementById"],"mappings":"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","file":"static/js/main.c7c2a5e5.chunk.js","sourcesContent":["import TextareaAutosize from 'react-textarea-autosize';\nimport './ListItem.css';\nimport {useState} from \"react\";\n\nfunction ListItem(props) {\n    return (\n        <div className=\"list-item-container\">\n            <TextareaAutosize\n                className=\"list-item-label\"\n                value={props.listName}\n                onChange={(e) => {\n                    props.onListFieldChanged(props.listID, \"listName\", e.target.value)\n                }}\n                onKeyPress={e => {\n                    if (e.key === \"Enter\") {\n                        e.preventDefault();\n                    }\n                }}\n            />\n            <div>\n                <button className=\"view-list-button\"\n                        onClick={() => {\n                            props.onListSelected(props.listID);\n                            props.showHomepage(false);\n                        }}>\n                    View\n                </button>\n            </div>\n            <div>\n            <button className=\"delete-list-button\"\n                    onClick={() => {\n                        props.onDeleteList(props.listID);\n                    }}>\n                X\n            </button>\n            </div>\n        </div>\n    )\n}\n\nexport default ListItem;","import React from 'react';\nimport ListItem from './ListItem'\nimport './ListMenu.css';\n\nfunction ListMenu(props) {\n    return (\n        <div id=\"list-container\">\n            <div id=\"list-menu\">\n                {props.listData.map(list =>\n                    <ListItem\n                        listID={list.id}\n                        listName={list.listName}\n                        currListID={props.currListID}\n                        currListName={props.currListName}\n                        onListSelected={props.onListSelected}\n                        homepage={props.homepage}\n                        showHomepage={props.showHomepage}\n                        onDeleteList={props.onDeleteList}\n                        onListFieldChanged={props.onListFieldChanged}\n                    />)}\n            </div>\n        </div>);\n}\n\nexport default ListMenu;","import './AddList.css';\nimport {useState} from \"react\";\n\nfunction AddTask(props){\n    const [currList, setCurrList] = useState(\"\");\n\n    return (\n        <div>\n            <input\n                className=\"list-input\"\n                id=\"new-list-text\"\n                placeholder=\"Create a new list\"\n                value={currList}\n                onChange={e => {\n                    setCurrList(e.target.value);\n                }}\n                onKeyPress={e => {\n                    if (currList !== \"\") {\n                        if (e.key === \"Enter\") {\n                            props.onAddList(currList);\n                            console.log(\"adding new list with name \", currList)\n                            setCurrList(\"\");\n                        }\n                    }\n                }}\n            />\n            <button className={currList !== \"\" ? \"list-add-button\" : \"list-add-button-disabled\"}\n                    onClick={() => {\n                        if (currList !== \"\") {\n                            props.onAddList(currList);\n                            setCurrList(\"\");\n                        }\n                    }}>\n                Add\n            </button>\n        </div>\n    );\n}\n\nexport default AddTask;","import TextareaAutosize from 'react-textarea-autosize';\nimport './Task.css';\nimport {useState} from \"react\";\n\nfunction Task(props) {\n    return (\n        <div className=\"    task-container\">\n            <input type=\"checkbox\"\n                   className=\"checkbox\"\n                   checked={props.isCompleted}\n                   onChange={(e) => {\n                       props.onTaskFieldChanged(props.taskId, \"isCompleted\", e.target.checked)\n                   }}\n            />\n            <TextareaAutosize\n                className= {!props.isCompleted ? \"task-label\" : \"task-label-strikethrough\"}\n                value={props.taskLabel}\n                onChange={(e) => {\n                    props.onTaskFieldChanged(props.taskId, \"taskLabel\", e.target.value)\n                }}\n                onKeyPress={e => {\n                    if (e.key === \"Enter\") {\n                        e.preventDefault();\n                    }\n                }}\n                // don't allow user to edit a task if it's been marked completed\n                disabled={props.isCompleted}\n            />\n            <div className=\"priority-button-container\">\n                <button className=\"priority-button\"\n                        id={props.priority === 3 ? \"high\" : props.priority === 2 ? \"medium\" : \"low\"}\n                        onClick={() => {\n                            console.log(\"Priority is\", props.priority);\n                            props.onChangePriority(props.taskId, props.priority);\n                        }}>\n                    {\"!\".repeat(props.priority)}\n                </button>\n            </div>\n            <div>\n                <button className=\"delete-button\"\n                        onClick={() => {\n                            props.onDeleteTask(props.taskId);\n                        }}>\n                    X\n                </button>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Task;","import React from 'react';\nimport Task from \"./Task\";\nimport './ToDoList.css';\n\nfunction ToDoList(props) {\n    return (\n        <div id=\"list-container\">\n            <div id=\"checklist\">\n                {props.taskList.map(task =>\n                    <Task {...task}\n                          key={task.taskId}\n                          onDeleteTask={props.onDeleteTask}\n                          onTaskFieldChanged={props.onTaskFieldChanged}\n                          onChangePriority={props.onChangePriority}\n                    />)}\n            </div>\n        </div>);\n}\n\nexport default ToDoList;","import './AddTask.css';\nimport {useState} from \"react\";\n\nfunction AddList(props){\n    const [currTask, setCurrTask] = useState(\"\");\n\n    return (\n        <div className=\"add-task-container\">\n            <input\n                className=\"todo-input\"\n                id=\"new-todo-text\"\n                placeholder=\"Create a new task\"\n                value={currTask}\n                onChange={e => {\n                    setCurrTask(e.target.value);\n                }}\n                onKeyPress={e => {\n                    if (currTask !== \"\") {\n                        if (e.key === \"Enter\") {\n                            props.onAddTask(currTask);\n                            setCurrTask(\"\");\n                        }\n                    }\n                }}\n            />\n            <button className={currTask !== \"\" ? \"add-button\" : \"add-button-disabled\"}\n                    onClick={() => {\n                        if (currTask !== \"\") {\n                            props.onAddTask(currTask);\n                            setCurrTask(\"\");\n                        }\n                    }}>\n                Add\n            </button>\n        </div>\n    );\n}\n\nexport default AddList;","import './Alert.css';\n\nfunction Alert(props) {\n    return (\n        <div className={\"backdrop\"}>\n            <div className=\"modal\">\n                {props.children}\n                <div className=\"alert-buttons\">\n                    <button className={\"alert-button\"} id={\"alert-ok\"} type={\"button\"}\n                            onClick={() => {\n                                props.onOK();\n                                props.onClose()\n                            }}>\n                        OK\n                    </button>\n                    <button className={\"alert-button\"} id={\"alert-cancel\"} type={\"button\"}\n                            onClick={() => props.onClose()}>\n                        Cancel\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Alert;","import './SortMenu.css';\n\nfunction SortMenu(props) {\n    return (\n        <div className=\"sort-backdrop\">\n            <div className=\"sort-modal\">\n                {props.children}\n                <div className=\"alert-buttons\">\n                    <button className={\"alert-button\"} id={\"alert-sort-date\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByCreationDate();\n                                props.onClose()\n                            }}>\n                        {props.sortOption === \"dateCreated\" ? \"✓ Date Created\" : \"Date Created\"}\n                    </button>\n                    <button className={\"alert-button\"} id={\"alert-sort-name\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByName();\n                                props.onClose()\n                            }}>\n                        {props.sortOption === \"taskLabel\" ? \"✓ Name\" : \"Name\"}\n                    </button>\n                    <button className={\"alert-button\"} id={\"alert-sort-priority\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByPriority();\n                                props.onClose()\n                            }}>\n                        {props.sortOption === \"priority\" ? \"✓ Priority\" : \"Priority\"}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SortMenu;","import Alert from \"../components/Alert\"\nimport SortMenu from \"../components/SortMenu\"\nimport React, {useState} from \"react\";\nimport './ToolBar.css';\n\nfunction ToolBar(props) {\n    const [showAlert, setShowAlert] = useState(false);\n    const [showSortMenu, setSortMenu] = useState(false);\n\n    function handleSortByName() {\n        props.onSortSelected(\"taskLabel\");\n    }\n\n    function handleSortByPriority() {\n        props.onSortSelected(\"priority\");\n    }\n\n    function handleSortByCreationDate() {\n        props.onSortSelected(\"dateCreated\");\n    }\n\n    function describeSortOption() {\n        let sortOptionText = \"Date Created\";\n        if (props.sortOption === \"dateCreated\"){\n            sortOptionText = \"Date Created\";\n        }\n        else if (props.sortOption === \"priority\"){\n            sortOptionText = \"Priority\";\n        }\n        else if (props.sortOption === \"taskLabel\"){\n            sortOptionText = \"Name\";\n        }\n        return sortOptionText;\n    }\n\n    function handleAlertOK() {\n        props.onDeleteTasks();\n    }\n\n    function toggleModal() {\n        showAlert ? setShowAlert(false) : setShowAlert(true)\n    }\n\n    function toggleSortModal() {\n        showSortMenu ? setSortMenu(false) : setSortMenu(true)\n    }\n\n    function toggleShowCompleted() {\n        props.showCompleted ? props.onSetShowCompleted(false) : props.onSetShowCompleted(true)\n    }\n\n    return (\n        <div>\n            <div className=\"toolbar\">\n                <button\n                    id=\"sort-button\"\n                    className=\"toolbar-button\"\n                    onClick={toggleSortModal}>\n                    <i id=\"sort-icon\" className=\"las la-sort-amount-down\"></i>\n                    <br/>\n                    Sort\n                </button>\n                {showSortMenu &&\n                <SortMenu className=\"toolbar-button\"\n                          sortOption={props.sortOption}\n                          onClose={toggleSortModal}\n                          onSortByName={handleSortByName}\n                          onSortByPriority={handleSortByPriority}\n                          onSortByCreationDate={handleSortByCreationDate}>\n                    <div className=\"sort-modal-message\">\n                        Tasks are currently sorted by <b>{describeSortOption()}</b>.\n                        <br/>\n                        <br/>\n                        Sort by:\n                    </div>\n                </SortMenu>}\n                <button\n                    className=\"toolbar-button\"\n                    id=\"hide-button\"\n                    onClick={() => {toggleShowCompleted()}}>\n                    <i id=\"hide-icon\"\n                       className={props.showCompleted ? \"las la-eye-slash\": \"las la-eye\"}>\n                    </i>\n                    <br/>\n                    {props.showCompleted ? \"Hide Completed\" : \"Show All\"}\n                </button>\n                <button\n                    className=\"toolbar-button\"\n                    // only make button fully visible and support functionality if there are completed tasks\n                    id={props.numCompleted !== 0 ? \"delete-button\" : \"delete-completed-button-hidden\"}\n                    onClick={props.numCompleted !== 0 ? toggleModal : null}>\n                    <i id=\"delete-icon\" className=\"las la-trash\">\n                    </i>\n                    <br/>\n                    Delete Completed\n                </button>\n            </div>\n            {showAlert && <Alert onClose={toggleModal} onOK={handleAlertOK}>\n                <div>\n                    Are you sure you want to delete all {props.numCompleted} completed tasks?\n                </div>\n            </Alert>}\n        </div>\n    );\n}\n\nexport default ToolBar;","import './App.css';\nimport './index.js';\nimport ListMenu from \"./components/ListMenu\"\nimport AddList from \"./components/AddList\"\n\nimport ToDoList from \"./components/ToDoList\"\nimport AddTask from \"./components/AddTask\"\nimport ToolBar from \"./components/ToolBar\"\nimport React, {useState} from \"react\";\n\nfunction App(props) {\n    const[showCompleted, setShowCompleted] = useState(true);\n    const filteredList = props.taskList.filter(task => showCompleted || !task.isCompleted);\n    const numCompleted = props.taskList.filter(task => task.isCompleted).length;\n    const[homepage, showHomepage] = useState(true);\n\n    return (\n        homepage\n            ?\n            <div id=\"homepage\">\n                <div className=\"heading\">\n                    <h1>\n                        <div className=\"title\">\n                            Task Manager\n                        </div>\n                    </h1>\n                    <div className=\"header\">\n                        <h2>All Lists</h2>\n                    </div>\n                </div>\n                <div className=\"home-top-bar\">\n                    <div className=\"add-list\">\n                        <AddList\n                            onAddList={props.handleAddList}\n                            onListSelected={props.handleListSelected}\n                        />\n                    </div>\n                </div>\n                <div className=\"list-container\">\n                    <ListMenu\n                        listData={props.listData}\n                        currListID={props.currListID}\n                        currListName={props.currListName}\n                        onListSelected={props.handleListSelected}\n                        showHomepage={showHomepage}\n                        onDeleteList={props.handleDeleteList}\n                        onListFieldChanged={props.handleListFieldChanged}\n                    />\n                </div>\n            </div>\n            :\n            <div id=\"app-container\">\n                <div className=\"heading\">\n                    <h1>\n                        <button id=\"home-button\"\n                                onClick={() => {\n                                    showHomepage(true);\n                                }}>\n                            <i className=\"las la-angle-left\">\n                            </i>\n                            {/*<br/>*/}\n                            {/*Home*/}\n                        </button>\n                        <div className=\"title\">\n                             Task Manager\n                        </div>\n                    </h1>\n                    <div>\n                        <h2>{props.currListName}</h2>\n                    </div>\n                </div>\n                <div className=\"topButtonBar\">\n                    <div className=\"add-task\">\n                    <AddTask\n                        taskList={filteredList}\n                        onSetTaskList={props.setTaskList}\n                        onAddTask={props.handleAddTask}\n                    />\n                    </div>\n                </div>\n                <div className=\"taskList\">\n                    <ToDoList\n                        taskList={filteredList}\n                        onDeleteTask={props.handleDeleteTask}\n                        onChangePriority={props.handleChangePriority}\n                        onDeleteTasks={props.handleDeleteTasks}\n                        onTaskFieldChanged={props.handleTaskFieldChanged}\n                        numCompleted={numCompleted}\n                    />\n                </div>\n                <div className=\"bottomBar\">\n                    <ToolBar\n                        onDeleteTasks={props.handleDeleteTasks}\n                        showCompleted={showCompleted}\n                        onSetShowCompleted={setShowCompleted}\n                        numCompleted={numCompleted}\n                        onSortSelected={props.handleSortSelected}\n                        sortOption={props.sortOption}\n                    />\n                </div>\n            </div>\n        );\n    }\n\nexport default App;\n","import React, {useState} from \"react\";\nimport App from \"./App\"\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n// Firebase initialization config provided from lab docs\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n    authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n    projectId: \"hmc-cs124-fa21-labs\",\n    storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n    messagingSenderId: \"949410042946\",\n    appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction FirestoreApp(props) {\n    const collectionName = \"em-zhang-tasks-v6\"\n    let queryAll = db.collection(collectionName);\n\n    const [all_value, all_loading, all_error] = useCollection(queryAll);\n\n    let listIDs = [];\n    if (all_value) {\n        listIDs = all_value.docs.map((doc) => {\n            return {...doc.data()}});\n    }\n    const [currentList, setCurrentList] = useState(\"default-list\");\n\n    let query = db.collection(collectionName).doc(currentList).collection(\"list-items\");\n\n    const [sortOption, setSortOption] = useState(\"dateCreated\");\n    if (sortOption){\n        // sort in descending order by priority\n        if (sortOption === \"priority\"){\n            query = query.orderBy(sortOption, \"desc\");\n        } else {\n            query = query.orderBy(sortOption);\n        }\n    }\n    const [value, loading, error] = useCollection(query); // You can change the const used here\n    let taskList = [];\n    if (value) {\n        taskList = value.docs.map((doc) => {\n            return {...doc.data()}\n        });\n    }\n\n    // adds a task, generating new id each time\n    function handleAddTask(currTask) {\n        const newId = generateUniqueID();\n        db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(newId).set({\n            taskId: newId,\n            taskLabel: currTask,\n            isCompleted: false,\n            priority: 1,\n            dateCreated: firebase.database.ServerValue.TIMESTAMP\n        });\n        return newId;\n    }\n\n    // handles updating any field of a task\n    function handleTaskFieldChanged(taskId, field, value) {\n        const doc = db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(taskId);\n        doc.update({\n            [field]: value,\n        })\n    }\n\n    // delete a task based on taskID\n    function handleDeleteTask(taskID) {\n        db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(taskID).delete();\n    }\n\n    // change a task's priority among 1/2/3\n    function handleChangePriority(taskID, taskPriority) {\n        let docRef = db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(taskID);\n        if (taskPriority === 1) {\n            docRef.update({\n                priority: 2\n            })\n        } else if (taskPriority === 2) {\n            docRef.update({\n                priority: 3\n            })\n        } else if (taskPriority === 3) {\n            docRef.update({\n                priority: 1\n            })\n        }\n    }\n\n    // delete completed tasks in a list\n    function handleDeleteTasks() {\n        let delete_query = db.collection(collectionName).where('isCompleted', '==', true);\n        delete_query.get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n                doc.ref.delete();\n            });\n        });\n    }\n\n    // select a sort option\n    function handleSortSelected(option){\n        setSortOption(option);\n    }\n\n    // handles updating any field of a list\n    function handleListFieldChanged(listID, field, value) {\n        const doc = db.collection(collectionName).doc(listID);\n        doc.update({\n            [field]: value,\n        })\n    }\n\n    // add a new list\n    function handleAddList(newList){\n        const newId = generateUniqueID();\n        db.collection(collectionName).doc(newId).set({\n            id: newId,\n            listName: newList,\n        })\n        return newId;\n    }\n\n    // delete a list\n    function handleDeleteList(listID) {\n        db.collection(collectionName).doc(listID).delete();\n    }\n\n\n    // select and go into a list\n    function handleListSelected(list){\n        setCurrentList(list)\n    }\n\n    // determine what list name to display in the header of the app\n    let currentListName = \"\";\n    if (listIDs.length > 0){\n        // find the information of the current list that we are displaying\n        let currList = listIDs.filter((e) => e.id === currentList);\n        if (currList.length > 0) {\n            currentListName = listIDs.filter((e) => e.id === currentList)[0].listName;\n        }\n    }\n\n    return <div>\n        <App\n            listData={listIDs}\n            currListID={currentList}\n            currListName={currentListName}\n            handleAddList={handleAddList}\n            handleListSelected={handleListSelected}\n            handleDeleteList={handleDeleteList}\n            handleListFieldChanged={handleListFieldChanged}\n\n            taskList={taskList}\n            handleDeleteTask={handleDeleteTask}\n            handleChangePriority={handleChangePriority}\n            handleDeleteTasks={handleDeleteTasks}\n            handleAddTask={handleAddTask}\n            handleTaskFieldChanged={handleTaskFieldChanged}\n            handleSortSelected={handleSortSelected}\n            sortOption={sortOption}\n        />\n        {loading &&\n        <div className=\"loading-message\">\n            Loading...\n        </div>}\n    </div>\n}\n\nexport default FirestoreApp;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import InMemoryApp from './InMemoryApp';\nimport FirestoreApp from \"./FirestoreApp\";\n\nconst initialData = [\n    {\n        taskId: 0,\n        taskLabel: \"Get lunch at dining hall\",\n        isCompleted: true\n    },\n    {\n        taskId: 1,\n        taskLabel: \"Buy textbooks\",\n        isCompleted: false\n    },\n    {\n        taskId: 2,\n        taskLabel: \"Watch videos about React\",\n        isCompleted: true\n    },\n    {\n        taskId: 3,\n        taskLabel: \"Call Mom\",\n        isCompleted: false\n    },\n    {\n        taskId: 4,\n        taskLabel: \"Meet with Prof. Rhodes\",\n        isCompleted: false\n    },\n];\n\nReactDOM.render(\n  <React.StrictMode>\n      <FirestoreApp initialData={initialData}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}