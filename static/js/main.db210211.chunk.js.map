{"version":3,"sources":["components/ListItem.js","components/ListMenu.js","components/AddList.js","components/Task.js","components/ToDoList.js","components/AddTask.js","components/Alert.js","components/SortMenu.js","components/ToolBar.js","App.js","LoadingSymbol.gif","FirestoreApp.js","index.js"],"names":["ListItem","props","className","id","value","listName","onChange","e","onListFieldChanged","listID","target","onKeyPress","key","preventDefault","document","getElementById","blur","onClick","onListSelected","showHomepage","focus","onDeleteList","ListMenu","listData","map","list","currListID","currListName","homepage","AddTask","useState","currList","setCurrList","placeholder","onAddList","tabIndex","Task","taskLabel","itemName","setItemName","type","checked","isCompleted","onTaskFieldChanged","taskId","onBlur","disabled","priority","onChangePriority","repeat","onDeleteTask","ToDoList","taskList","task","AddList","currTask","setCurrTask","onAddTask","hasFocus","console","log","Alert","children","onOK","onClose","onKeyDown","keyCode","SortMenu","onSortByCreationDate","sortOption","onSortByName","onSortByPriority","ToolBar","showAlert","setShowAlert","showSortMenu","setSortMenu","describeSortOption","sortOptionText","toggleModal","toggleSortModal","onSortSelected","showCompleted","onSetShowCompleted","numCompleted","onDeleteTasks","App","setShowCompleted","filteredList","filter","length","handleAddList","handleListSelected","handleDeleteList","handleListFieldChanged","onSetTaskList","setTaskList","handleAddTask","handleDeleteTask","handleChangePriority","handleDeleteTasks","handleTaskFieldChanged","handleSortSelected","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","FirestoreApp","collectionName","queryAll","collection","useCollection","all_value","listIDs","docs","doc","data","currentList","setCurrentList","query","setSortOption","orderBy","loading","currentListName","newList","newId","generateUniqueID","set","delete","field","update","taskID","taskPriority","docRef","where","get","then","querySnapshot","forEach","ref","dateCreated","database","ServerValue","TIMESTAMP","option","src","loadingSymbol","alt","ReactDOM","render","StrictMode","initialData"],"mappings":"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","file":"static/js/main.db210211.chunk.js","sourcesContent":["import TextareaAutosize from 'react-textarea-autosize';\nimport './ListItem.css';\n\nfunction ListItem(props) {\n    return (\n        <div className=\"list-item-container\">\n            <TextareaAutosize\n                id=\"list-item-label\"\n                value={props.listName}\n                onChange={(e) => {\n                    props.onListFieldChanged(props.listID, \"listName\", e.target.value)\n                }}\n                onKeyPress={e => {\n                    if (e.key === \"Enter\") {\n                        e.preventDefault();\n                        if(document.getElementById('list-item-label')){\n                            document.getElementById('list-item-label').blur();\n                        }\n                    }\n                }}\n            />\n            <div className=\"button-container\">\n                <button className=\"view-list-button\"\n                        onClick={() => {\n                            props.onListSelected(props.listID);\n                            props.showHomepage(false);\n                            if(document.getElementById(\"home-button\")){\n                                document.getElementById(\"home-button\").focus();\n                            }\n\n                        }}>\n                    View\n                </button>\n            </div>\n            <div>\n            <button\n                aria-label=\"Delete list button\"\n                className=\"delete-list-button\"\n                    onClick={() => {\n                        props.onDeleteList(props.listID);\n                    }}>\n                X\n            </button>\n            </div>\n        </div>\n    )\n}\n\nexport default ListItem;","import React from 'react';\nimport ListItem from './ListItem'\nimport './ListMenu.css';\n\nfunction ListMenu(props) {\n    return (\n        <div id=\"list-container\">\n            <div className=\"checklist\">\n                {props.listData.map(list =>\n                    <ListItem\n                        listID={list.id}\n                        listName={list.listName}\n                        currListID={props.currListID}\n                        currListName={props.currListName}\n                        onListSelected={props.onListSelected}\n                        homepage={props.homepage}\n                        showHomepage={props.showHomepage}\n                        onDeleteList={props.onDeleteList}\n                        onListFieldChanged={props.onListFieldChanged}\n                    />)}\n            </div>\n        </div>);\n}\n\nexport default ListMenu;","import './AddList.css';\nimport {useState} from \"react\";\n\nfunction AddTask(props){\n    const [currList, setCurrList] = useState(\"\");\n\n    return (\n        <div className=\"add-task-container\">\n            <input\n                className=\"todo-input\"\n                id=\"new-todo-text\"\n                placeholder=\"Create a new list\"\n                value={currList}\n                onChange={e => {\n                    setCurrList(e.target.value);\n                }}\n                onKeyPress={e => {\n                    if (currList !== \"\") {\n                        if (e.key === \"Enter\") {\n                            props.onAddList(currList);\n                            setCurrList(\"\");\n                        }\n                    }\n                }}\n            />\n            <button id={currList !== \"\" ? \"list-add-button\" : \"list-add-button-disabled\"}\n                    tabIndex = {currList !== \"\" ? 0 : 1}\n                    onClick={() => {\n                        if (currList !== \"\") {\n                            props.onAddList(currList);\n                            setCurrList(\"\");\n                        }\n                    }}>\n                Add\n            </button>\n        </div>\n    );\n}\n\nexport default AddTask;","import TextareaAutosize from 'react-textarea-autosize';\nimport {useState} from 'react';\nimport './Task.css';\n\nfunction Task(props) {\n    const [itemName, setItemName] = useState(props.taskLabel);\n\n    return (\n        <div className=\"task-container\">\n            <input type=\"checkbox\"\n                   className=\"checkbox\"\n                   checked={props.isCompleted}\n                   onChange={(e) => {\n                       props.onTaskFieldChanged(props.taskId, \"isCompleted\", e.target.checked)\n                   }}\n\n                   onKeyPress={e => {\n                       if (e.key === \"Enter\") {\n                           props.onTaskFieldChanged(props.taskId, \"isCompleted\", !props.isCompleted)\n                       }\n                   }}\n            />\n            <TextareaAutosize\n                id= {!props.isCompleted ? \"task-label\" : \"task-label-strikethrough\"}\n                value={itemName}\n                onChange={(e) => setItemName(e.target.value)}\n                onBlur={(e) =>\n                    props.onTaskFieldChanged(props.taskId, \"taskLabel\", itemName)\n                }\n                onKeyPress={e => {\n                    if (e.key === \"Enter\") {\n                        if (document.getElementById('task-label')){\n                            e.preventDefault();\n                            document.getElementById('task-label').blur();\n                        }\n                    }\n                }}\n                // don't allow user to edit a task if it's been marked completed\n                disabled={props.isCompleted}\n            />\n            <div className=\"button-container\">\n                <button className=\"priority-button\"\n                        id={props.priority === 3 ? \"high\" : props.priority === 2 ? \"medium\" : \"low\"}\n                        aria-label= {(props.priority === 3 ? \"high\" : props.priority === 2 ? \"medium\" : \"low\") + \" priority\"}\n                        onClick={() => {\n                            props.onChangePriority(props.taskId, props.priority);\n                        }}>\n                    {\"!\".repeat(props.priority)}\n                </button>\n            </div>\n            <div>\n                <button\n                    className=\"delete-list-button\"\n                    aria-label=\"delete\"\n                        onClick={() => {\n                            props.onDeleteTask(props.taskId);\n                        }}>\n                    X\n                </button>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Task;","import React from 'react';\nimport Task from \"./Task\";\nimport './ToDoList.css';\n\nfunction ToDoList(props) {\n    return (\n        <div id=\"list-container\">\n            <div className=\"checklist\">\n                {props.taskList.map(task =>\n                    <Task {...task}\n                          key={task.taskId}\n                          onDeleteTask={props.onDeleteTask}\n                          onTaskFieldChanged={props.onTaskFieldChanged}\n                          onChangePriority={props.onChangePriority}\n                    />)}\n            </div>\n        </div>);\n}\n\nexport default ToDoList;","import './AddTask.css';\nimport {useState} from \"react\";\n\nfunction AddList(props){\n    const [currTask, setCurrTask] = useState(\"\");\n\n    return (\n        <div className=\"add-task-container\">\n            <input\n                className=\"todo-input\"\n                id=\"new-todo-text\"\n                placeholder=\"Create a new task\"\n                value={currTask}\n                onChange={e => {\n                    setCurrTask(e.target.value);\n                }}\n                onKeyPress={e => {\n                    if (currTask !== \"\") {\n                        if (e.key === \"Enter\") {\n                            props.onAddTask(currTask);\n                            setCurrTask(\"\");\n                        }\n                    }\n                }}\n            />\n            <button className={currTask !== \"\" ? \"add-button\" : \"add-button-disabled\"}\n                    tabIndex = {currTask !== \"\" ? 0 : 1}\n                    onClick={() => {\n                        if (currTask !== \"\") {\n                            props.onAddTask(currTask);\n                            setCurrTask(\"\");\n                        }\n                    }}>\n                Add\n            </button>\n        </div>\n    );\n}\n\nexport default AddList;","import './Alert.css';\n\nif ((document.getElementById('alert-cancel') && document.getElementById('alert-cancel').hasFocus())) {\n    console.log(\"on cancel\");\n}\n\nfunction Alert(props) {\n    return (\n        <div className={\"backdrop\"}>\n            <div id=\"modal\">\n                {props.children}\n                <div className=\"alert-buttons\">\n                    <button id=\"alert-ok\"\n                            onClick={() => {\n                                props.onOK();\n                                props.onClose();\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-cancel\").focus();\n                                }\n                            }}\n                    >\n                        OK\n                    </button>\n\n                    <button tabIndex=\"0\"\n                            className=\"alert-button\"\n                            id=\"alert-cancel\"\n                            onClick={() => props.onClose()}\n                            onKeyDown={e => {\n                                if(e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-ok\").focus();\n                                }\n                            }}\n                    >\n                        Cancel\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Alert;","import './SortMenu.css';\n\nfunction SortMenu(props) {\n    return (\n        <div className=\"sort-backdrop\">\n            <div className=\"sort-modal\">\n                {props.children}\n                <div className=\"sort-buttons\">\n                    <button className={\"alert-button\"} id={\"alert-sort-date\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByCreationDate();\n                                props.onClose()\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-sort-name\").focus();\n                                }\n                            }}\n                    >\n                        {props.sortOption === \"dateCreated\" ? \"✓ Date Created\" : \"Date Created\"}\n                    </button>\n                    <button className={\"alert-button\"} id={\"alert-sort-name\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByName();\n                                props.onClose()\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-sort-priority\").focus();\n                                }\n                            }}\n                    >\n                        {props.sortOption === \"taskLabel\" ? \"✓ Name\" : \"Name\"}\n                    </button>\n                    <button className={\"alert-button\"} id={\"alert-sort-priority\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByPriority();\n                                props.onClose()\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-sort-date\").focus();\n                                }\n                            }}\n                    >\n                        {props.sortOption === \"priority\" ? \"✓ Priority\" : \"Priority\"}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SortMenu;","import Alert from \"../components/Alert\"\nimport SortMenu from \"../components/SortMenu\"\nimport React, {useState} from \"react\";\nimport './ToolBar.css';\n\nfunction ToolBar(props) {\n    const [showAlert, setShowAlert] = useState(false);\n    const [showSortMenu, setSortMenu] = useState(false);\n\n    function handleSortByName() {\n        props.onSortSelected(\"taskLabel\");\n    }\n\n    function handleSortByPriority() {\n        props.onSortSelected(\"priority\");\n    }\n\n    function handleSortByCreationDate() {\n        props.onSortSelected(\"dateCreated\");\n    }\n\n    function describeSortOption() {\n        let sortOptionText = \"Date Created\";\n        if (props.sortOption === \"dateCreated\"){\n            sortOptionText = \"Date Created\";\n        }\n        else if (props.sortOption === \"priority\"){\n            sortOptionText = \"Priority\";\n        }\n        else if (props.sortOption === \"taskLabel\"){\n            sortOptionText = \"Name\";\n        }\n        return sortOptionText;\n    }\n\n    function handleAlertOK() {\n        props.onDeleteTasks();\n    }\n\n    function toggleModal() {\n        showAlert ? setShowAlert(false) : setShowAlert(true)\n    }\n\n    function toggleSortModal() {\n        showSortMenu ? setSortMenu(false) : setSortMenu(true)\n    }\n\n    function toggleShowCompleted() {\n        props.showCompleted ? props.onSetShowCompleted(false) : props.onSetShowCompleted(true)\n    }\n\n    return (\n        <div>\n            <div className=\"toolbar\">\n                <button\n                    id=\"sort-button\"\n                    className=\"toolbar-button\"\n                    onClick={toggleSortModal}>\n                    <i id=\"sort-icon\" className=\"las la-sort-amount-down\"></i>\n                    <br/>\n                    Sort\n                </button>\n                {showSortMenu &&\n                <SortMenu className=\"toolbar-button\"\n                          sortOption={props.sortOption}\n                          onClose={toggleSortModal}\n                          onSortByName={handleSortByName}\n                          onSortByPriority={handleSortByPriority}\n                          onSortByCreationDate={handleSortByCreationDate}>\n                    <div className=\"sort-modal-message\"\n                         aria-labelledby={\"Tasks are currently sorted by\" + describeSortOption()}\n                         >\n                        Tasks are currently sorted by <b>{describeSortOption()}</b>.\n                        <br/>\n                        <br/>\n                        Sort by:\n                    </div>\n                </SortMenu>}\n                <button\n                    className=\"toolbar-button\"\n                    id=\"hide-button\"\n                    onClick={() => {toggleShowCompleted()}}>\n                    <i id=\"hide-icon\"\n                       className={props.showCompleted ? \"las la-eye-slash\": \"las la-eye\"}>\n                    </i>\n                    <br/>\n                    {props.showCompleted ? \"Hide Completed\" : \"Show All\"}\n                </button>\n                <button\n                    className=\"toolbar-button\"\n                    id={props.numCompleted !== 0 ? \"delete-button\" : \"delete-completed-button-hidden\"}\n                    disabled={props.numCompleted === 0}\n                    onClick={toggleModal}\n                    >\n                    <i id=\"delete-icon\" className=\"las la-trash\">\n                    </i>\n                    <br/>\n                    Delete Completed\n                </button>\n            </div>\n            {showAlert && <Alert onClose={toggleModal} onOK={handleAlertOK}>\n                <div>\n                    Are you sure you want to delete all {props.numCompleted} completed tasks?\n                </div>\n            </Alert>}\n        </div>\n    );\n}\n\nexport default ToolBar;","import './App.css';\nimport './index.js';\nimport ListMenu from \"./components/ListMenu\"\nimport AddList from \"./components/AddList\"\n\nimport ToDoList from \"./components/ToDoList\"\nimport AddTask from \"./components/AddTask\"\nimport ToolBar from \"./components/ToolBar\"\nimport React, {useState} from \"react\";\n\nfunction App(props) {\n    const[showCompleted, setShowCompleted] = useState(true);\n    const filteredList = props.taskList.filter(task => showCompleted || !task.isCompleted);\n    const numCompleted = props.taskList.filter(task => task.isCompleted).length;\n    const[homepage, showHomepage] = useState(true);\n\n    return (\n        homepage\n            ?\n            <div className=\"app-container\">\n                <div className=\"heading\">\n                    <h1>\n                        <div\n                            aria-label=\"Task Manager\"\n                            className=\"title\">\n                            Task Manager\n                        </div>\n                    </h1>\n                    <div className=\"header\">\n                        <h2>All Lists</h2>\n                    </div>\n                </div>\n                <div className=\"top-button-bar\">\n                    <div className=\"add-task\">\n                        <AddList\n                            onAddList={props.handleAddList}\n                            onListSelected={props.handleListSelected}\n                        />\n                    </div>\n                </div>\n                <div className=\"taskList\">\n                    <ListMenu\n                        listData={props.listData}\n                        currListID={props.currListID}\n                        currListName={props.currListName}\n                        onListSelected={props.handleListSelected}\n                        showHomepage={showHomepage}\n                        onDeleteList={props.handleDeleteList}\n                        onListFieldChanged={props.handleListFieldChanged}\n                    />\n                </div>\n            </div>\n            :\n            <div className=\"app-container\">\n                <div className=\"heading\">\n                    <h1>\n                        <button id=\"home-button\"\n                                aria-label=\"Home Button\"\n                                onClick={() => {\n                                    showHomepage(true);\n                                }}>\n                            <i className=\"las la-angle-left\">\n                            </i>\n                        </button>\n                        <div className=\"title\">\n                             Task Manager\n                        </div>\n                    </h1>\n                    <div>\n                        <h2>{props.currListName}</h2>\n                    </div>\n                </div>\n                <div className=\"top-button-bar\">\n                    <div className=\"add-task\">\n                        <AddTask\n                            taskList={filteredList}\n                            onSetTaskList={props.setTaskList}\n                            onAddTask={props.handleAddTask}\n                        />\n                    </div>\n                </div>\n                <div className=\"taskList\">\n                    <ToDoList\n                        taskList={filteredList}\n                        onDeleteTask={props.handleDeleteTask}\n                        onChangePriority={props.handleChangePriority}\n                        onDeleteTasks={props.handleDeleteTasks}\n                        onTaskFieldChanged={props.handleTaskFieldChanged}\n                        numCompleted={numCompleted}\n                    />\n                </div>\n                <div className=\"bottomBar\">\n                    <ToolBar\n                        onDeleteTasks={props.handleDeleteTasks}\n                        showCompleted={showCompleted}\n                        onSetShowCompleted={setShowCompleted}\n                        numCompleted={numCompleted}\n                        onSortSelected={props.handleSortSelected}\n                        sortOption={props.sortOption}\n                    />\n                </div>\n            </div>\n        );\n    }\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/LoadingSymbol.e9f28dc7.gif\";","import React, {useState} from \"react\";\nimport App from \"./App\"\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport loadingSymbol from '../src/LoadingSymbol.gif'\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n// Firebase initialization config provided from lab docs\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n    authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n    projectId: \"hmc-cs124-fa21-labs\",\n    storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n    messagingSenderId: \"949410042946\",\n    appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction FirestoreApp(props) {\n    const collectionName = \"em-zhang-tasks-v6\"\n    let queryAll = db.collection(collectionName);\n\n    const [all_value] = useCollection(queryAll);\n\n    let listIDs = [];\n    if (all_value) {\n        listIDs = all_value.docs.map((doc) => {\n            return {...doc.data()}});\n    }\n    const [currentList, setCurrentList] = useState(\"default-list\");\n\n    let query = db.collection(collectionName).doc(currentList).collection(\"list-items\");\n\n    const [sortOption, setSortOption] = useState(\"dateCreated\");\n    if (sortOption){\n        // sort in descending order by priority\n        if (sortOption === \"priority\"){\n            query = query.orderBy(sortOption, \"desc\");\n        } else {\n            query = query.orderBy(sortOption);\n        }\n    }\n    const [value, loading, error] = useCollection(query); // You can change the const used here\n    let taskList = [];\n    if (value) {\n        taskList = value.docs.map((doc) => {\n            return {...doc.data()}\n        });\n    }\n\n    // adds a task, generating new id each time\n    function handleAddTask(currTask) {\n        const newId = generateUniqueID();\n        db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(newId).set({\n            taskId: newId,\n            taskLabel: currTask,\n            isCompleted: false,\n            priority: 1,\n            dateCreated: firebase.database.ServerValue.TIMESTAMP\n        });\n        return newId;\n    }\n\n    // handles updating any field of a task\n    function handleTaskFieldChanged(taskId, field, value) {\n        const doc = db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(taskId);\n        doc.update({\n            [field]: value,\n        })\n    }\n\n    // delete a task based on taskID\n    function handleDeleteTask(taskID) {\n        db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(taskID).delete();\n    }\n\n    // change a task's priority among 1/2/3\n    function handleChangePriority(taskID, taskPriority) {\n        let docRef = db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(taskID);\n        if (taskPriority === 1) {\n            docRef.update({\n                priority: 2\n            })\n        } else if (taskPriority === 2) {\n            docRef.update({\n                priority: 3\n            })\n        } else if (taskPriority === 3) {\n            docRef.update({\n                priority: 1\n            })\n        }\n    }\n\n    // delete completed tasks in a list\n    function handleDeleteTasks() {\n        let delete_query = db.collection(collectionName).doc(currentList).collection(\"list-items\").where('isCompleted', '==', true);\n        delete_query.get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n                doc.ref.delete();\n            });\n        });\n    }\n\n    // select a sort option\n    function handleSortSelected(option){\n        setSortOption(option);\n    }\n\n    // handles updating any field of a list\n    function handleListFieldChanged(listID, field, value) {\n        const doc = db.collection(collectionName).doc(listID);\n        doc.update({\n            [field]: value,\n        })\n    }\n\n    // add a new list\n    function handleAddList(newList){\n        const newId = generateUniqueID();\n        db.collection(collectionName).doc(newId).set({\n            id: newId,\n            listName: newList,\n        })\n        return newId;\n    }\n\n    // delete a list\n    function handleDeleteList(listID) {\n        db.collection(collectionName).doc(listID).delete();\n    }\n\n\n    // select and go into a list\n    function handleListSelected(list){\n        setCurrentList(list)\n    }\n\n    // determine what list name to display in the header of the app\n    let currentListName = \"\";\n    if (listIDs.length > 0){\n        // find the information of the current list that we are displaying\n        let currList = listIDs.filter((e) => e.id === currentList);\n        if (currList.length > 0) {\n            currentListName = listIDs.filter((e) => e.id === currentList)[0].listName;\n        }\n    }\n\n    return <div>\n        <App\n            listData={listIDs}\n            currListID={currentList}\n            currListName={currentListName}\n            handleAddList={handleAddList}\n            handleListSelected={handleListSelected}\n            handleDeleteList={handleDeleteList}\n            handleListFieldChanged={handleListFieldChanged}\n\n            taskList={taskList}\n            handleDeleteTask={handleDeleteTask}\n            handleChangePriority={handleChangePriority}\n            handleDeleteTasks={handleDeleteTasks}\n            handleAddTask={handleAddTask}\n            handleTaskFieldChanged={handleTaskFieldChanged}\n            handleSortSelected={handleSortSelected}\n            sortOption={sortOption}\n        />\n        {loading &&\n        <div className=\"loading-message\">\n            <img src={loadingSymbol} alt=\"Loading...\" />\n        </div>}\n    </div>\n}\n\nexport default FirestoreApp;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import InMemoryApp from './InMemoryApp';\nimport FirestoreApp from \"./FirestoreApp\";\n\nconst initialData = [\n    {\n        taskId: 0,\n        taskLabel: \"Get lunch at dining hall\",\n        isCompleted: true\n    },\n    {\n        taskId: 1,\n        taskLabel: \"Buy textbooks\",\n        isCompleted: false\n    },\n    {\n        taskId: 2,\n        taskLabel: \"Watch videos about React\",\n        isCompleted: true\n    },\n    {\n        taskId: 3,\n        taskLabel: \"Call Mom\",\n        isCompleted: false\n    },\n    {\n        taskId: 4,\n        taskLabel: \"Meet with Prof. Rhodes\",\n        isCompleted: false\n    },\n];\n\nReactDOM.render(\n  <React.StrictMode>\n      <FirestoreApp initialData={initialData}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}