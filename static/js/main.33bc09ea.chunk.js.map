{"version":3,"sources":["components/SelectionMaintainingInput.js","components/ListView/ListItem.js","components/ListView/AddList.js","components/ListView/ListMenu.js","components/TaskView/Task.js","components/TaskView/ToDoList.js","components/TaskView/AddTask.js","components/TaskView/Alert.js","components/TaskView/SortMenu.js","components/TaskView/ToolBar.js","components/TaskView/AddEditor.js","components/TaskView/Editor.js","components/TaskView/EditorsList.js","components/TaskView/ShareModal.js","components/ListView/SharedListItem.js","components/ListView/SharedLists.js","components/Tab.js","components/TabList.js","App.js","components/ResetPassword.js","components/SignIn.js","components/SignUp.js","components/AuthPage.js","LoadingSymbol.gif","InMemoryApp.js","index.js"],"names":["SelectionMaintainingInput","props","value","onChange","rest","useState","cursor","setCursor","ref","useRef","useEffect","input","current","setSelectionRange","e","target","selectionStart","ListItem","className","id","listName","onListFieldChanged","listID","onKeyPress","key","preventDefault","document","getElementById","blur","editors","length","onClick","onListSelected","showHomepage","focus","onDeleteList","AddTask","currList","setCurrList","placeholder","onAddList","tabIndex","ListMenu","listData","map","list","isOwner","currListID","currListName","homepage","Task","taskLabel","itemName","setItemName","type","checked","isCompleted","onTaskFieldChanged","taskId","onBlur","disabled","priority","onChangePriority","repeat","onDeleteTask","ToDoList","taskList","task","AddList","currTask","setCurrTask","onAddTask","hasFocus","console","log","Alert","children","onOK","onClose","onKeyDown","keyCode","SortMenu","onSortByCreationDate","sortOption","onSortByName","onSortByPriority","ToolBar","showAlert","setShowAlert","showSortMenu","setShowSortMenu","toggleModal","toggleSortModal","onSortSelected","showCompleted","onSetShowCompleted","numCompleted","onDeleteTasks","AddEditor","currEditor","setCurrEditor","onAddEditor","Editor","editor","onDeleteEditor","EditorsList","slice","ShareModal","owner","user","email","SharedListItem","SharedLists","currentListName","sharedListData","verified","handleVerifyEmail","Tab","classNames","activeTab","label","push","join","onClickTab","TabList","setActiveTab","child","find","App","setShowCompleted","filteredList","filter","listsIOwn","listsSharedWithMe","showShareModal","setShowShareModal","toggleShareModal","classname","handleListSelected","handleAddList","handleDeleteList","handleListFieldChanged","handleAddEditor","handleDeleteEditor","onSetTaskList","setTaskList","handleAddTask","handleDeleteTask","handleChangePriority","handleDeleteTasks","handleTaskFieldChanged","handleSortSelected","ResetPassword","resetEmail","setResetEmail","resetEmailSuccess","setResetEmailSuccess","err","setErr","onFocus","sendPasswordResetEmail","auth","then","catch","error","googleProvider","firebase","GoogleAuthProvider","githubProvider","GithubAuthProvider","SignIn","setEmail","password","setPassword","signIn","useSignInWithEmailAndPassword","signInWithEmailAndPassword","loading","providerError","setProviderError","showResetModal","setShowResetModal","toggleResetModal","onSubmit","signInWithPopup","alt","src","code","SignUp","retypePassword","setRetypePassword","passwordMatchError","setPasswordMatchError","useCreateUserWithEmailAndPassword","createUserWithEmailAndPassword","AuthPage","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","collectionName","SignedInApp","queryAll","collection","where","useCollection","all_value","listIDs","docs","doc","data","currentList","setCurrentList","query","setSortOption","orderBy","listOwner","listEditors","editorEmail","update","FieldValue","arrayUnion","arrayRemove","newList","newId","generateUniqueID","set","delete","field","taskID","taskPriority","docRef","get","querySnapshot","forEach","dateCreated","database","ServerValue","TIMESTAMP","option","InMemoryApp","useAuthState","verifyEmail","currentUser","sendEmailVerification","loadingSymbol","emailVerified","signOut","message","ReactDOM","render","StrictMode"],"mappings":"irBAqBeA,MAlBf,SAAmCC,GAC/B,IAAQC,EAA6BD,EAA7BC,MAAOC,EAAsBF,EAAtBE,SAAaC,EAA5B,YAAqCH,EAArC,GACA,EAA4BI,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAMC,iBAAO,MAYnB,OAVAC,qBAAU,WACN,IAAMC,EAAQH,EAAII,QACdD,GAAOA,EAAME,kBAAkBP,EAAQA,KAC5C,CAACE,EAAKF,EAAQJ,IAOV,cAAC,IAAD,aAAkBM,IAAKA,EAAKN,MAAOA,EAAOC,SAL5B,SAACW,GAClBP,EAAUO,EAAEC,OAAOC,gBACnBb,GAAYA,EAASW,KAGoDV,KC+BlEa,MA9Cf,SAAkBhB,GACd,OACI,sBAAKiB,UAAU,sBAAf,UACI,cAAC,EAAD,CACIC,GAAG,kBACHjB,MAAOD,EAAMmB,SACbjB,SAAU,SAACW,GACPb,EAAMoB,mBAAmBpB,EAAMqB,OAAQ,WAAYR,EAAEC,OAAOb,QAEhEqB,WAAY,SAAAT,GACM,UAAVA,EAAEU,MACFV,EAAEW,iBACCC,SAASC,eAAe,oBACvBD,SAASC,eAAe,mBAAmBC,WAK3D,qBAAKV,UAAU,cAAf,SACI,mBAAGA,UAAWjB,EAAM4B,QAAQC,OAAS,EAAI,sBAAwB,SAErE,qBAAKZ,UAAU,mBAAf,SACI,wBAAQA,UAAU,mBACVa,QAAS,WACL9B,EAAM+B,eAAe/B,EAAMqB,QAC3BrB,EAAMgC,cAAa,GAChBP,SAASC,eAAe,gBACvBD,SAASC,eAAe,eAAeO,SALvD,oBAYJ,wBACI,aAAW,qBACXhB,UAAU,qBACVa,QAAS,WACL9B,EAAMkC,aAAalC,EAAMqB,SAJjC,mB,YCEGc,MApCf,SAAiBnC,GACb,MAAgCI,mBAAS,IAAzC,mBAAOgC,EAAP,KAAiBC,EAAjB,KAEA,OACI,sBAAKpB,UAAU,qBAAf,UACI,uBACIA,UAAU,aACVC,GAAG,gBACHoB,YAAY,oBACZrC,MAAOmC,EACPlC,SAAU,SAAAW,GACNwB,EAAYxB,EAAEC,OAAOb,QAEzBqB,WAAY,SAAAT,GACS,KAAbuB,GACc,UAAVvB,EAAEU,MACFvB,EAAMuC,UAAUH,GAChBC,EAAY,QAK5B,wBAAQnB,GAAiB,KAAbkB,EAAkB,kBAAoB,2BAC1CI,SAAyB,KAAbJ,EAAkB,EAAI,EAClCN,QAAS,WACY,KAAbM,IACApC,EAAMuC,UAAUH,GAChBC,EAAY,MAL5B,qBCcGI,MAlCf,SAAkBzC,GACd,OACI,sBAAKiB,UAAU,YAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIsB,UAAWvC,EAAMuC,UACjBR,eAAgB/B,EAAM+B,qBAIlC,qBAAKb,GAAG,iBAAR,SACI,sBAAKD,UAAU,YAAf,UAC+B,IAA1BjB,EAAM0C,SAASb,OAAe,oBAAsB,KACpD7B,EAAM0C,SAASC,KAAI,SAAAC,GAAI,OACpB,cAAC,EAAD,CACIC,QAAS7C,EAAM6C,QACfjB,QAASgB,EAAKhB,QACdP,OAAQuB,EAAK1B,GACbC,SAAUyB,EAAKzB,SACf2B,WAAY9C,EAAM8C,WAClBC,aAAc/C,EAAM+C,aACpBhB,eAAgB/B,EAAM+B,eACtBiB,SAAUhD,EAAMgD,SAChBhB,aAAchC,EAAMgC,aACpBE,aAAclC,EAAMkC,aACpBd,mBAAoBpB,EAAMoB,iC,MCkCvC6B,MA7Df,SAAcjD,GACV,MAAgCI,mBAASJ,EAAMkD,WAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,OACI,sBAAKnC,UAAU,iBAAf,UACI,uBAAOoC,KAAK,WACLpC,UAAU,WACVqC,QAAStD,EAAMuD,YACfrD,SAAU,SAACW,GACPb,EAAMwD,mBAAmBxD,EAAMyD,OAAQ,cAAe5C,EAAEC,OAAOwC,UAGnEhC,WAAY,SAAAT,GACM,UAAVA,EAAEU,KACFvB,EAAMwD,mBAAmBxD,EAAMyD,OAAQ,eAAgBzD,EAAMuD,gBAI5E,cAAC,IAAD,CACIrC,GAAMlB,EAAMuD,YAA6B,2BAAf,aAC1BtD,MAAOkD,EACPjD,SAAU,SAACW,GAAD,OAAOuC,EAAYvC,EAAEC,OAAOb,QACtCyD,OAAQ,SAAC7C,GAAD,OACJb,EAAMwD,mBAAmBxD,EAAMyD,OAAQ,YAAaN,IAExD7B,WAAY,SAAAT,GACM,UAAVA,EAAEU,KACEE,SAASC,eAAe,gBACxBb,EAAEW,iBACFC,SAASC,eAAe,cAAcC,SAKlDgC,SAAU3D,EAAMuD,cAEpB,qBAAKtC,UAAU,mBAAf,SACI,wBAAQA,UAAU,kBACVC,GAAuB,IAAnBlB,EAAM4D,SAAiB,OAA4B,IAAnB5D,EAAM4D,SAAiB,SAAW,MACtE,cAAiC,IAAnB5D,EAAM4D,SAAiB,OAA4B,IAAnB5D,EAAM4D,SAAiB,SAAW,OAAS,YACzF9B,QAAS,WACL9B,EAAM6D,iBAAiB7D,EAAMyD,OAAQzD,EAAM4D,WAJvD,SAMK,IAAIE,OAAO9D,EAAM4D,cAG1B,8BACI,wBACI3C,UAAU,qBACV,aAAW,SACPa,QAAS,WACL9B,EAAM+D,aAAa/D,EAAMyD,SAJrC,qB,MC/BDO,MAhBf,SAAkBhE,GACd,OACI,qBAAKkB,GAAG,iBAAR,SACI,sBAAKD,UAAU,YAAf,UAC+B,IAA1BjB,EAAMiE,SAASpC,OAAe,oBAAsB,KACpD7B,EAAMiE,SAAStB,KAAI,SAAAuB,GAAI,OACpB,wBAAC,EAAD,2BAAUA,GAAV,IACM3C,IAAK2C,EAAKT,OACVM,aAAc/D,EAAM+D,aACpBP,mBAAoBxD,EAAMwD,mBAC1BK,iBAAkB7D,EAAM6D,6B,MCyBnCM,MApCf,SAAiBnE,GACb,MAAgCI,mBAAS,IAAzC,mBAAOgE,EAAP,KAAiBC,EAAjB,KAEA,OACI,sBAAKpD,UAAU,qBAAf,UACI,uBACIA,UAAU,aACVC,GAAG,gBACHoB,YAAY,oBACZrC,MAAOmE,EACPlE,SAAU,SAAAW,GACNwD,EAAYxD,EAAEC,OAAOb,QAEzBqB,WAAY,SAAAT,GACS,KAAbuD,GACc,UAAVvD,EAAEU,MACFvB,EAAMsE,UAAUF,GAChBC,EAAY,QAK5B,wBAAQpD,UAAwB,KAAbmD,EAAkB,aAAe,sBAC5C5B,SAAyB,KAAb4B,EAAkB,EAAI,EAClCtC,QAAS,WACY,KAAbsC,IACApE,EAAMsE,UAAUF,GAChBC,EAAY,MAL5B,qB,MCvBP5C,SAASC,eAAe,iBAAmBD,SAASC,eAAe,gBAAgB6C,YACpFC,QAAQC,IAAI,aA2CDC,MAxCf,SAAe1E,GACX,OACI,qBAAKiB,UAAW,WAAhB,SACI,sBAAKC,GAAG,QAAR,UACKlB,EAAM2E,SACP,sBAAK1D,UAAU,gBAAf,UACI,wBAAQC,GAAG,WACHY,QAAS,WACL9B,EAAM4E,OACN5E,EAAM6E,WAEVC,UAAW,SAAAjE,GACW,IAAdA,EAAEkE,UACFlE,EAAEW,iBACFC,SAASC,eAAe,gBAAgBO,UARxD,gBAeA,wBAAQO,SAAS,IACTvB,UAAU,eACVC,GAAG,eACHY,QAAS,kBAAM9B,EAAM6E,WACrBC,UAAW,SAAAjE,GACU,IAAdA,EAAEkE,UACDlE,EAAEW,iBACFC,SAASC,eAAe,YAAYO,UAPpD,6B,MCgCL+C,MAzDf,SAAkBhF,GACd,OACI,qBAAKiB,UAAU,gBAAf,SACI,sBAAKA,UAAU,aAAf,UACKjB,EAAM2E,SACP,sBAAK1D,UAAU,eAAf,UACI,qBAAKC,GAAG,UAAR,sBAGA,wBAAQD,UAAW,eAAgBC,GAAI,kBAAmBmC,KAAM,SACxDvB,QAAS,WACL9B,EAAMiF,uBACNjF,EAAM6E,WAEVC,UAAW,SAAAjE,GACW,IAAdA,EAAEkE,UACFlE,EAAEW,iBACFC,SAASC,eAAe,mBAAmBO,UAR3D,SAY0B,gBAArBjC,EAAMkF,WAA+B,sBAAmB,iBAE7D,wBAAQjE,UAAW,eAAgBC,GAAI,kBAAmBmC,KAAM,SACxDvB,QAAS,WACL9B,EAAMmF,eACNnF,EAAM6E,WAEVC,UAAW,SAAAjE,GACW,IAAdA,EAAEkE,UACFlE,EAAEW,iBACFC,SAASC,eAAe,uBAAuBO,UAR/D,SAY0B,cAArBjC,EAAMkF,WAA6B,cAAW,SAEnD,wBAAQjE,UAAW,eAAgBC,GAAI,sBAAuBmC,KAAM,SAC5DvB,QAAS,WACL9B,EAAMoF,mBACNpF,EAAM6E,WAEVC,UAAW,SAAAjE,GACW,IAAdA,EAAEkE,UACFlE,EAAEW,iBACFC,SAASC,eAAe,mBAAmBO,UAR3D,SAY0B,aAArBjC,EAAMkF,WAA4B,kBAAe,sB,MCuC3DG,MArFf,SAAiBrF,GACb,MAAkCI,oBAAS,GAA3C,mBAAOkF,EAAP,KAAkBC,EAAlB,KACA,EAAwCnF,oBAAS,GAAjD,mBAAOoF,EAAP,KAAqBC,EAArB,KAkBA,SAASC,IACLH,GAAcD,GAGlB,SAASK,IACLF,GAAiBD,GAOrB,OACI,gCACI,sBAAKvE,UAAU,UAAf,UACI,yBACIC,GAAG,cACHD,UAAU,iBACVa,QAAS6D,EAHb,UAII,mBAAGzE,GAAG,YAAYD,UAAU,4BAC5B,uBALJ,UAQCuE,GACD,cAAC,EAAD,CAAUvE,UAAU,iBACViE,WAAYlF,EAAMkF,WAClBL,QAASc,EACTR,aA3CtB,WACInF,EAAM4F,eAAe,cA2CHR,iBAxCtB,WACIpF,EAAM4F,eAAe,aAwCHX,qBArCtB,WACIjF,EAAM4F,eAAe,kBAsCb,yBACI3E,UAAU,iBACVC,GAAG,cACHY,QAAS,WAzBrB9B,EAAM6F,cAAgB7F,EAAM8F,oBAAmB,GAAS9F,EAAM8F,oBAAmB,IAsBzE,UAMI,mBAAG5E,GAAG,YACHD,UAAWjB,EAAM6F,cAAgB,mBAAqB,eAEzD,uBACC7F,EAAM6F,cAAgB,iBAAmB,cAE9C,yBACI5E,UAAU,iBACVC,GAA2B,IAAvBlB,EAAM+F,aAAqB,gBAAkB,iCACjDpC,SAAiC,IAAvB3D,EAAM+F,aAChBjE,QAAS4D,EAJb,UAMI,mBAAGxE,GAAG,cAAcD,UAAU,iBAE9B,uBARJ,yBAaHqE,GAAa,cAAC,EAAD,CAAOT,QAASa,EAAad,KA5DnD,WACI5E,EAAMgG,iBA2DY,SACV,uEACyChG,EAAM+F,aAD/C,6B,YC1CDE,MArCf,SAAmBjG,GACf,MAAoCI,mBAAS,IAA7C,mBAAO8F,EAAP,KAAmBC,EAAnB,KAEA,OACI,sBAAKlF,UAAU,uBAAf,UACI,uBACIA,UAAU,eACVoC,KAAK,QACLnC,GAAG,gBACHoB,YAAY,qBACZrC,MAAOiG,EACPhG,SAAU,SAAAW,GACNsF,EAActF,EAAEC,OAAOb,QAE3BqB,WAAY,SAAAT,GACW,KAAfqF,GACc,UAAVrF,EAAEU,MACFvB,EAAMoG,YAAYF,GAClBC,EAAc,QAK9B,wBAAQlF,UAA0B,KAAfiF,EAAoB,aAAe,sBAC9C1D,SAA2B,KAAf0D,EAAoB,EAAI,EACpCpE,QAAS,WACc,KAAfoE,IACAlG,EAAMoG,YAAYF,GAClBC,EAAc,MAL9B,qB,YCEGE,MAzBf,SAAgBrG,GACZ,OACI,sBAAKiB,UAAU,mBAAf,UACI,cAAC,IAAD,CACIC,GAAG,eACHyC,UAAU,EACV1D,MAAOD,EAAMsG,SAGhBtG,EAAM6C,SACP,wBACI5B,UAAU,uBACV,aAAW,SACXa,QAAS,WACL9B,EAAMuG,eAAevG,EAAMsG,SAJnC,mBCKGE,MAff,SAAqBxG,GACjB,OACI,sBAAKiB,UAAU,wBAAf,UACCjB,EAAM4B,QAAQ6E,MAAM,GAAG9D,KAAI,SAAA2D,GAAM,OAC1B,wBAAC,EAAD,2BAAYA,GAAZ,IACQ/E,IAAK+E,EACLA,OAAQA,EACRC,eAAgBvG,EAAMuG,eACtB1D,QAAS7C,EAAM6C,cAE3B,sBAAK3B,GAAG,qBAAR,cAAwD,IAAzBlB,EAAM4B,QAAQC,OAAe,2FACI,GADhE,WC4CG6E,MArDf,SAAoB1G,GAChB,IAAM6C,EAAU7C,EAAM2G,QAAU3G,EAAM4G,KAAKC,MAE3C,OACI,qBAAK5F,UAAU,iBAAf,SACI,sBAAKA,UAAU,cAAf,UACKjB,EAAM2E,SACP,sBAAK1D,UAAU,gBAAf,UACI,sBAAKC,GAAG,gBAAR,2BAEI,wBAAQsB,SAAS,IACTvB,UAAU,sBACVC,GAAG,eACHY,QAAS,kBAAM9B,EAAM6E,WACrBC,UAAW,SAAAjE,GACU,IAAdA,EAAEkE,UACDlE,EAAEW,iBACEC,SAASC,eAAe,gBACxBD,SAASC,eAAe,eAAeO,UAR3D,kBAgBJ,sBAAKf,GAAG,gBAAR,oBACYlB,EAAM2G,SAElB,cAAC,EAAD,CACIzF,GAAG,cACH4B,WAAY9C,EAAM8C,WAClBsD,YAAapG,EAAMoG,YACnBG,eAAgBvG,EAAMuG,iBAG1B,qBAAKrF,GAAG,gBAAR,qBAGA,cAAC,EAAD,CACIA,GAAG,eACHyF,MAAO3G,EAAM2G,MACb/E,QAAS5B,EAAM4B,QACf2E,eAAgBvG,EAAMuG,eACtB1D,QAASA,a,MCNlBiE,MAvCf,SAAwB9G,GAEpB,OADAwE,QAAQC,IAAI,eAAgBzE,EAAMqB,OAAQrB,EAAMmB,UAE5C,sBAAKF,UAAU,6BAAf,UACI,cAAC,EAAD,CACIC,GAAG,kBACHjB,MAAOD,EAAMmB,SACbjB,SAAU,SAACW,GACPb,EAAMoB,mBAAmBpB,EAAMqB,OAAQ,WAAYR,EAAEC,OAAOb,QAEhEqB,WAAY,SAAAT,GACM,UAAVA,EAAEU,MACFV,EAAEW,iBACCC,SAASC,eAAe,oBACvBD,SAASC,eAAe,mBAAmBC,WAK3D,qBAAKV,UAAU,cAAf,SACI,mBAAGA,UAAWjB,EAAM4B,QAAQC,OAAS,EAAI,sBAAwB,SAErE,qBAAKZ,UAAU,mBAAf,SACI,wBAAQA,UAAU,0BACVa,QAAS,WACL9B,EAAM+B,eAAe/B,EAAMqB,QAC3BrB,EAAMgC,cAAa,GAChBP,SAASC,eAAe,gBACvBD,SAASC,eAAe,eAAeO,SALvD,wBCeD8E,MArCf,SAAqB/G,GACjB,IAAMgH,EAAkBhH,EAAMmB,SAE9B,OACI,qBAAKD,GAAG,iBAAR,SACI,sBAAKD,UAAU,YAAf,UACqC,IAAhCjB,EAAMiH,eAAepF,OAAe,sCAAwC,KAC5E7B,EAAMkH,SACPlH,EAAMiH,eAAetE,KAAI,SAAAC,GAAI,OACzB,cAAC,EAAD,CACIvB,OAAQuB,EAAK1B,GACbC,SAAUyB,EAAKzB,SACfS,QAASgB,EAAKhB,QACdkB,WAAY9C,EAAM8C,WAClBC,aAAciE,EACdjF,eAAgB/B,EAAM+B,eACtBiB,SAAUhD,EAAMgD,SAChBhB,aAAchC,EAAMgC,aACpBE,aAAclC,EAAMkC,aACpBd,mBAAoBpB,EAAMoB,wBAG9B,gCACI,iHACA,wBACIF,GAAG,wBACHmC,KAAK,SACLvB,QAAS9B,EAAMmH,kBAHnB,8C,MCfTC,MAXf,SAAapH,GACT,IAAMqH,EAAa,CAAC,iBAIpB,OAHIrH,EAAMsH,YAActH,EAAMuH,OAC1BF,EAAWG,KAAK,mBAEb,oBAAIvG,UAAWoG,EAAWI,KAAK,KAC3B3F,QAAS,kBAAM9B,EAAM0H,WAAW1H,EAAMuH,QAD1C,SAEFvH,EAAMuH,S,MCWAI,MAhBf,SAAiB3H,GACb,MAAkCI,mBAASJ,EAAM2E,SAAS,GAAGpD,KAA7D,mBAAO+F,EAAP,KAAkBM,EAAlB,KACA,OACI,sBAAK3G,UAAU,OAAf,UACI,qBAAKA,UAAU,WAAf,SACKjB,EAAM2E,SAAShC,KAAI,SAAAkF,GAAK,OACrB,cAAC,EAAD,CACKN,MAAOM,EAAMtG,IACb+F,UAAWA,EACXI,WAAY,SAACH,GAAD,OAAWK,EAAaL,KAH/BM,EAAMtG,UAKvBvB,EAAM2E,SAASmD,MAAK,SAACD,GAAD,OAAWA,EAAMtG,MAAQ+F,SC6H3CS,MAjIf,SAAa/H,GACT,MAAyCI,oBAAS,GAAlD,mBAAMyF,EAAN,KAAqBmC,EAArB,KACMC,EAAejI,EAAMiE,SAASiE,QAAO,SAAAhE,GAAI,OAAI2B,IAAkB3B,EAAKX,eACpE4E,EAAYnI,EAAM0C,SAASwF,QAAO,SAAAtF,GAAI,OAAIA,EAAK+D,QAAU3G,EAAM4G,KAAKC,SACpEuB,EAAoBpI,EAAM0C,SAASwF,QAAO,SAAAtF,GAAI,OAAIA,EAAK+D,QAAU3G,EAAM4G,KAAKC,SAE5Ed,EAAe/F,EAAMiE,SAASiE,QAAO,SAAAhE,GAAI,OAAIA,EAAKX,eAAa1B,OACrE,EAAgCzB,oBAAS,GAAzC,mBAAM4C,EAAN,KAAgBhB,EAAhB,KACA,EAA4C5B,oBAAS,GAArD,mBAAOiI,EAAP,KAAuBC,EAAvB,KAEA,SAASC,IACLD,GAAmBD,GAGvB,OACIrF,EAEI,sBAAK/B,UAAU,gBAAf,UACI,qBAAKA,UAAU,UAAf,SACI,6BACI,qBACI,aAAW,eACXA,UAAU,QAFd,8BAOR,eAAC,EAAD,CAASuH,UAAU,OAAnB,UACI,cAAC,EAAD,CAEIvH,UAAU,WACV4B,QAAS7C,EAAM6C,QACfH,SAAUyF,EACVvG,QAAS5B,EAAM4B,QACfkB,WAAY9C,EAAM8C,WAClBC,aAAc/C,EAAM+C,aACpBhB,eAAgB/B,EAAMyI,mBACtBzG,aAAcA,EACdO,UAAWvC,EAAM0I,cACjBxG,aAAclC,EAAM2I,iBACpBvH,mBAAoBpB,EAAM4I,wBAXtB,YAaR,cAAC,EAAD,CAEI3H,UAAU,WACViG,SAAUlH,EAAMkH,SAChBC,kBAAmBnH,EAAMmH,kBACzBtE,QAAS7C,EAAM6C,QACfoE,eAAgBmB,EAChBtF,WAAY9C,EAAM8C,WAClBC,aAAc/C,EAAM+C,aACpBhB,eAAgB/B,EAAMyI,mBACtBzG,aAAcA,EACdE,aAAclC,EAAM2I,iBACpBvH,mBAAoBpB,EAAM4I,wBAXtB,wBAiBhB,sBAAK3H,UAAU,gBAAf,UACI,sBAAKA,UAAU,UAAf,UACI,+BACI,wBAAQC,GAAG,cACH,aAAW,cACXY,QAAS,WACLE,GAAa,IAHzB,SAKI,mBAAGf,UAAU,wBAGjB,qBAAKA,UAAU,QAAf,0BAGA,wBAAQC,GAAG,eACH,aAAW,eACXY,QAASyG,EAFjB,SAGI,mBAAGtH,UAAU,uBAGhBoH,GACD,cAAC,EAAD,CACIxD,QAAS0D,EACTzF,WAAY9C,EAAM8C,WAClB6D,MAAO3G,EAAM2G,MACbC,KAAM5G,EAAM4G,KACZhF,QAAS5B,EAAM4B,QACfwE,YAAapG,EAAM6I,gBACnBtC,eAAgBvG,EAAM8I,wBAI9B,8BACI,6BAAK9I,EAAM+C,oBAGnB,qBAAK9B,UAAU,iBAAf,SACI,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIgD,SAAUgE,EACVc,cAAe/I,EAAMgJ,YACrB1E,UAAWtE,EAAMiJ,oBAI7B,qBAAKhI,UAAU,WAAf,SACI,cAAC,EAAD,CACIgD,SAAUgE,EACVlE,aAAc/D,EAAMkJ,iBACpBrF,iBAAkB7D,EAAMmJ,qBACxBnD,cAAehG,EAAMoJ,kBACrB5F,mBAAoBxD,EAAMqJ,uBAC1BtD,aAAcA,MAGtB,qBAAK9E,UAAU,YAAf,SACI,cAAC,EAAD,CACI+E,cAAehG,EAAMoJ,kBACrBvD,cAAeA,EACfC,mBAAoBkC,EACpBjC,aAAcA,EACdH,eAAgB5F,EAAMsJ,mBACtBpE,WAAYlF,EAAMkF,mB,sCC3C3BqE,MAtFf,SAAuBvJ,GACnB,MAAoCI,mBAAS,IAA7C,mBAAOoJ,EAAP,KAAmBC,EAAnB,KACA,EAAkDrJ,oBAAS,GAA3D,mBAAOsJ,EAAP,KAA0BC,EAA1B,KACA,EAAsBvJ,mBAAS,MAA/B,mBAAOwJ,EAAP,KAAYC,EAAZ,KAMA,OACI,8BACI,qBAAK5I,UAAU,iBAAf,SACI,sBAAKA,UAAU,cAAf,UACKjB,EAAM2E,SACP,sBAAKzD,GAAG,iBAAR,UACI,qBAAKA,GAAG,mBAAR,4BACA,8BACI,wBAAQsB,SAAS,IACTvB,UAAU,sBACVa,QAAS,kBAAM9B,EAAM6E,WAF7B,oBAQR,qBAAK3D,GAAG,aAAR,mEAIA,8BACI,uBACID,UAAU,oBACVhB,MAAOuJ,EACPtJ,SAAU,SAAAW,GAAC,OAAI4I,EAAc5I,EAAEC,OAAOb,QACtC6J,QAAS,kBA5B7BH,GAAqB,QACrBE,EAAO,OA4BavH,YAAY,QACZe,KAAK,QACL/B,WAAY,SAAAT,GACW,KAAf2I,GACc,UAAV3I,EAAEU,KACFwI,YAAuB/J,EAAMgK,KAAMR,GAC9BS,MAAK,WACFN,GAAqB,MAExBO,OAAM,SAACC,GACJR,GAAqB,GACrBE,EAAOM,WAQnC,8BACI,wBACIlJ,UAAU,wBACVa,QAAS,kBAAMiI,YAAuB/J,EAAMgK,KAAMR,GAC7CS,MAAK,WACNN,GAAqB,MAEpBO,OAAM,SAACC,GACRR,GAAqB,GACrBE,EAAOM,OARf,oBAcJ,uBACCT,EACG,qBAAKzI,UAAU,cAAf,4CAGF,KACD2I,EACG,qBAAK3I,UAAU,cAAf,yCAGE,aC7EpBmJ,EAAiB,IAAIC,IAASL,KAAKM,mBACnCC,EAAiB,IAAIF,IAASL,KAAKQ,mBAuH1BC,MArHf,SAAgBzK,GACZ,MAA0BI,mBAAS,IAAnC,mBAAOyG,EAAP,KAAc6D,EAAd,KACA,EAAgCtK,mBAAS,IAAzC,mBAAOuK,EAAP,KAAiBC,EAAjB,KACMC,EAASC,YAA8B9K,EAAMgK,MACnD,EAAqD,CAACa,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAA5EE,EAAP,KAAmCC,EAAnC,KAA4Cb,EAA5C,KACA,EAA0C/J,oBAAS,GAAnD,mBAAO6K,EAAP,KAAsBC,EAAtB,KACA,EAA4C9K,oBAAS,GAArD,mBAAO+K,EAAP,KAAuBC,EAAvB,KAEA,SAASC,IACLD,GAAmBD,GAGvB,OACI,gCACI,uBAAMG,SAAU,SAACzK,GAAD,OAAOA,EAAEW,kBAAzB,UACI,uBACIP,UAAU,eACVoC,KAAK,QACLpD,MAAO4G,EACP3G,SAAU,SAAAW,GAAC,OAAI6J,EAAS7J,EAAEC,OAAOb,QACjCqC,YAAY,UAEhB,uBACIrB,UAAU,eACVoC,KAAK,WACLpD,MAAO0K,EACPzK,SAAU,SAAAW,GAAC,OAAI+J,EAAY/J,EAAEC,OAAOb,QACpCqC,YAAY,gBAGpB,wBACIe,KAAK,SACLvB,QAAS,kBAAMiJ,EAA2BlE,EAAO8D,IACjD1J,UAAU,gBAHd,qBAMA,qBAAKA,UAAU,gBAAf,SACI,yBACIA,UAAU,iBACVa,QAAS,kBAAM9B,EAAMgK,KAAKuB,gBAAgBnB,GACrCH,MAAK,WACFiB,GAAiB,MAGpBhB,OAAM,SAACC,GACJe,GAAiB,OAR7B,UAYI,qBACIjK,UAAU,cACVuK,IAAI,cACJC,IAAI,wHAfZ,2BAoBJ,qBAAKxK,UAAU,gBAAf,SACI,yBACIA,UAAU,iBACVa,QAAS,kBAAM9B,EAAMgK,KAAKuB,gBAAgBhB,GACrCN,MAAK,WACFiB,GAAiB,MAEpBhB,OAAM,SAACC,GACJe,GAAiB,OAP7B,UASI,qBACIjK,UAAU,cACVuK,IAAI,cACJC,IAAI,iFAZZ,2BAiBJ,gCACI,wBAAQvK,GAAG,qBACH,aAAW,wBACXY,QAASuJ,EAFjB,8BAKCF,GACG,cAAC,EAAD,CAEInB,KAAMhK,EAAMgK,KACZnF,QAASwG,GAFL,sBAKdL,GAAYb,GACd,qBAAKlJ,UAAU,eAAf,SACoB,uBAAfkJ,EAAMuB,KACD,+CACe,uBAAfvB,EAAMuB,KACF,wCACe,8BAAfvB,EAAMuB,KACF,oFACe,wBAAfvB,EAAMuB,KACF,8CACmB,kDAAfvB,EAAMuB,KACF,6CACe,wBAAfvB,EAAMuB,KACF,6DACA,8DAIhCV,GAAYC,GACd,qBAAKhK,UAAU,iBAAf,SAEQ,2G,MCxCL0K,MA1Ef,SAAgB3L,GACZ,MAA0BI,mBAAS,IAAnC,mBAAOyG,EAAP,KAAc6D,EAAd,KACA,EAAgCtK,mBAAS,IAAzC,mBAAOuK,EAAP,KAAiBC,EAAjB,KACA,EAA4CxK,mBAAS,IAArD,mBAAOwL,EAAP,KAAuBC,EAAvB,KACA,EAAoDzL,oBAAS,GAA7D,mBAAO0L,EAAP,KAA2BC,EAA3B,KACMlB,EAASmB,YAAkChM,EAAMgK,MACvD,EAAyD,CAACa,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAAhFoB,EAAP,KAAuCjB,EAAvC,KAAgDb,EAAhD,KAaA,OACI,sBAAKlJ,UAAU,cAAf,UACI,sBAAKC,GAAG,cAAR,UACA,uBAAMD,UAAU,cACZqK,SAAU,SAACzK,GAAD,OAAOA,EAAEW,kBADvB,UAEI,uBACIP,UAAU,eACVhB,MAAO4G,EACP3G,SAAU,SAAAW,GAAC,OAAI6J,EAAS7J,EAAEC,OAAOb,QACjCqC,YAAY,QACZe,KAAK,UAET,uBACIpC,UAAU,eACVhB,MAAO0K,EACPzK,SAAU,SAAAW,GAAC,OAAI+J,EAAY/J,EAAEC,OAAOb,QACpCqC,YAAY,WACZe,KAAK,aAET,uBACIpD,MAAO2L,EACP1L,SAAU,SAAAW,GAAC,OAAIgL,EAAkBhL,EAAEC,OAAOb,QAC1CqC,YAAY,kBACZe,KAAK,WACLpC,UAAU,oBAGlB,wBACIA,UAAU,4BACVa,QAAS,WAvCb6I,IAAaiB,GACbG,GAAsB,GACtBvH,QAAQC,IAAI,0BAGZsH,GAAsB,GACtBE,EAA+BpF,EAAO8D,KA+BtC,qBAKA,2BAEEK,IAAYb,GAAS2B,IACvB,qBAAK7K,UAAU,eAAf,SAEQ6K,EACM,0BACe,uBAAf3B,EAAMuB,KACF,+CACe,uBAAfvB,EAAMuB,KACF,wCACe,8BAAfvB,EAAMuB,KACF,oFACe,wBAAfvB,EAAMuB,KACF,8CACA,+CCrC3BQ,MA5Bf,SAAkBlM,GACd,OACI,qBAAKiB,UAAU,gBAAf,SACI,sBAAKA,UAAU,UAAf,UACI,6BACI,qBACI,aAAW,eACXA,UAAU,QAFd,4BAMJ,qBAAKA,UAAU,cAAf,SACI,eAAC,EAAD,CAASA,UAAU,OAAnB,UACI,cAAC,EAAD,CAEI+I,KAAMhK,EAAMgK,KACZpD,KAAM5G,EAAM4G,MAFR,WAIR,cAAC,EAAD,CAEIoD,KAAMhK,EAAMgK,MADR,sBCxBjB,MAA0B,0C,wBC0BzCK,IAAS8B,cAXc,CACnBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKnB,IAAMC,EAAKtC,IAASuC,YACd5C,EAAOK,IAASL,OA0DtB,IAAM6C,EAAiB,aAEvB,SAASC,EAAY9M,GACjB,IAAI+M,EAAWJ,EAAGK,WAAWH,GAAgBI,MAAM,UAAW,iBAAkBjN,EAAM6G,OACtF,EAAoBqG,YAAcH,GAA3BI,EAAP,oBAEIC,EAAU,GACVD,IACAC,EAAUD,EAAUE,KAAK1K,KAAI,SAAC2K,GAC1B,OAAO,eAAIA,EAAIC,YAKvB,MAAsCnN,mBAAS,gBAA/C,mBAAOoN,EAAP,KAAoBC,EAApB,KAEIC,EAAQf,EAAGK,WAAWH,GAAgBS,IAAIE,GAAaR,WAAW,SAGtE,EAAoC5M,mBAAS,eAA7C,mBAAO8E,EAAP,KAAmByI,EAAnB,KACAD,EAAQA,EAAME,QAAQ1I,EAA2B,aAAfA,EAA4B,OAAS,OAGvE,MAAgCgI,YAAcQ,GAA9C,mBAAOzN,EAAP,KACIgE,GADJ,UACe,IACXhE,IACAgE,EAAWhE,EAAMoN,KAAK1K,KAAI,SAAC2K,GACvB,OAAO,eAAIA,EAAIC,YAKvB,IAAIvG,EAAkB,GAClB6G,EAAY,KACZC,EAAc,KAEdV,EAAQvL,OAAS,IAEFuL,EAAQlF,QAAO,SAACrH,GAAD,OAAOA,EAAEK,KAAOsM,KACjC3L,OAAS,IAClBmF,EAAkBoG,EAAQlF,QAAO,SAACrH,GAAD,OAAOA,EAAEK,KAAOsM,KAAa,GAAGrM,SACjE0M,EAAYT,EAAQlF,QAAO,SAACrH,GAAD,OAAOA,EAAEK,KAAOsM,KAAa,GAAG7G,MAC3DmH,EAAcV,EAAQlF,QAAO,SAACrH,GAAD,OAAOA,EAAEK,KAAOsM,KAAa,GAAG5L,UAIrE,IAAMiB,EAAU7C,EAAM4G,KAAKC,QAAUgH,EAiHrC,OAAO,8BACH,cAAC,EAAD,CACIjH,KAAM5G,EAAM4G,KACZlE,SAAU0K,EACVtK,WAAY0K,EACZzK,aAAciE,EACdL,MAAOkH,EACPhL,QAASA,EACTjB,QAASkM,EACT5G,SAAUlH,EAAMkH,SAChBC,kBAAmBnH,EAAMmH,kBAEzB0B,gBA3BR,SAAyBkF,GACrBvJ,QAAQC,IAAI,sBACAkI,EAAGK,WAAWH,GAAgBS,IAAIE,GAC1CQ,OAAO,CACPpM,QAASyI,IAASuC,UAAUqB,WAAWC,WAAWH,MAwBlDjF,mBApBR,SAA4BiF,GACZpB,EAAGK,WAAWH,GAAgBS,IAAIE,GAC1CQ,OAAO,CACPpM,QAASyI,IAASuC,UAAUqB,WAAWE,YAAYJ,MAmBnDrF,cAnDR,SAAuB0F,GACnB,IAAMC,EAAQC,cAOd,OANA3B,EAAGK,WAAWH,GAAgBS,IAAIe,GAAOE,IAAI,CACzCrN,GAAImN,EACJlN,SAAUiN,EACVzH,MAAO3G,EAAM6G,MACbjF,QAAS,CAAC5B,EAAM6G,SAEbwH,GA4CH5F,mBAnCR,SAA4B7F,GACxB6K,EAAe7K,IAmCX+F,iBAzCR,SAA0BtH,GACtBsL,EAAGK,WAAWH,GAAgBS,IAAIjM,GAAQmN,UAyCtC5F,uBA9DR,SAAgCvH,EAAQoN,EAAOxO,GAC/B0M,EAAGK,WAAWH,GAAgBS,IAAIjM,GAC1C2M,OAAJ,eACKS,EAAQxO,KA6DTgE,SAAUA,EACViF,iBAnIR,SAA0BwF,GACtB/B,EAAGK,WAAWH,GAAgBS,IAAIE,GAAaR,WAAW,SAASM,IAAIoB,GAAQF,SAC1EtE,OAAM,SAACC,GACJ3F,QAAQ2F,MAAM,4BAA6BA,OAiI/ChB,qBAnGR,SAA8BuF,EAAQC,GAClC,IAAIC,EAASjC,EAAGK,WAAWH,GAAgBS,IAAIE,GAAaR,WAAW,SAASM,IAAIoB,GAC/D,IAAjBC,EACAC,EAAOZ,OAAO,CACVpK,SAAU,IAEU,IAAjB+K,EACPC,EAAOZ,OAAO,CACVpK,SAAU,IAEU,IAAjB+K,GACPC,EAAOZ,OAAO,CACVpK,SAAU,KAwFdwF,kBAlFR,WACuBuD,EAAGK,WAAWH,GAAgBS,IAAIE,GAAaR,WAAW,SAASC,MAAM,cAAe,MAAM,GACpG4B,MAAM5E,MAAK,SAAU6E,GAC9BA,EAAcC,SAAQ,SAAUzB,GAC5BA,EAAI/M,IAAIiO,gBA+EZvF,cA9HR,SAAuB7E,GACnB,IAAMiK,EAAQC,cAUd,OATA3B,EAAGK,WAAWH,GAAgBS,IAAIE,GAAaR,WAAW,SAASM,IAAIe,GAAOE,IAAI,CAC9E9K,OAAQ4K,EACRnL,UAAWkB,EACXb,aAAa,EACbK,SAAU,EACVoL,YAAa3E,IAAS4E,SAASC,YAAYC,YAC5CjF,OAAM,SAACC,GACN3F,QAAQ2F,MAAM,2BAA4BA,MAEvCkE,GAoHHhF,uBAhHR,SAAgC5F,EAAQgL,EAAOxO,GAC/B0M,EAAGK,WAAWH,GAAgBS,IAAIE,GAAaR,WAAW,SAASM,IAAI7J,GAC/EuK,OAAJ,eACKS,EAAQxO,IACViK,OAAM,SAACC,GACN3F,QAAQ2F,MAAM,4BAA6BA,OA4G3Cb,mBA3ER,SAA4B8F,GACxBzB,EAAcyB,IA2EVlK,WAAYA,MAKTmK,MAvPf,SAAqBrP,GACjB,MAA+BsP,YAAatF,GAA5C,mBAAOpD,EAAP,KAAaoE,EAAb,KAAsBb,EAAtB,KACA,SAASoF,IACLvF,EAAKwF,YAAYC,wBAGrB,OAAIzE,EAEA,qBAAK/J,UAAU,kBAAf,SACI,qBAAKwK,IAAKiE,EAAelE,IAAI,iBAG5B5E,EACE,gCACH,sBAAK3F,UAAU,UAAf,UACI,sBAAKC,GAAG,UAAR,UACI,8BACI,mBAAGA,GAAG,eACHD,UAAW2F,EAAK+I,cAAgB,oBAAsB,kBAG7D,qBAAKzO,GAAG,QAAR,SAAiB0F,EAAKC,WAE1B,qBAAK3F,GAAG,iBAAR,SACI,wBAAQA,GAAG,gBAAgBmC,KAAK,SAASvB,QAAS,kBAAMkI,EAAK4F,WAA7D,SACI,mBAAG1O,GAAG,cAAcD,UAAU,6BAGpC2F,EAAK+I,eACP,wBACIzO,GAAG,sBACHmC,KAAK,SACLvB,QAASyN,EAHb,uBAOJ,cAACzC,EAAD,2BACQ9M,GADR,IAEI4G,KAAMA,EACNC,MAAOD,EAAKC,MACZK,SAAUN,EAAK+I,cACfxI,kBAAmBoI,QAKpB,qCACFpF,GAAS,4CAAeA,EAAM0F,WAC/B,cAAC,EAAD,CACI7F,KAAMA,EACNpD,KAAMA,QC3EtBkJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJvO,SAASC,eAAe,W","file":"static/js/main.33bc09ea.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nfunction SelectionMaintainingInput(props) {\n    const { value, onChange, ...rest } = props;\n    const [cursor, setCursor] = useState(null);\n    const ref = useRef(null);\n\n    useEffect(() => {\n        const input = ref.current;\n        if (input) input.setSelectionRange(cursor, cursor);\n    }, [ref, cursor, value]);\n\n    const handleChange = (e) => {\n        setCursor(e.target.selectionStart);\n        onChange && onChange(e);\n    };\n\n    return <TextareaAutosize ref={ref} value={value} onChange={handleChange} {...rest} />;\n}\n\nexport default SelectionMaintainingInput;","import './ListItem.css';\nimport SelectionMaintainingInput from \"../SelectionMaintainingInput\";\n\nfunction ListItem(props) {\n    return (\n        <div className=\"list-item-container\">\n            <SelectionMaintainingInput\n                id=\"list-item-label\"\n                value={props.listName}\n                onChange={(e) => {\n                    props.onListFieldChanged(props.listID, \"listName\", e.target.value)\n                }}\n                onKeyPress={e => {\n                    if (e.key === \"Enter\") {\n                        e.preventDefault();\n                        if(document.getElementById('list-item-label')){\n                            document.getElementById('list-item-label').blur();\n                        }\n                    }\n                }}\n            />\n            <div className=\"collab-icon\">\n                <i className={props.editors.length > 1 ? \"las la-user-friends\" : null }></i>\n            </div>\n            <div className=\"button-container\">\n                <button className=\"view-list-button\"\n                        onClick={() => {\n                            props.onListSelected(props.listID);\n                            props.showHomepage(false);\n                            if(document.getElementById(\"home-button\")){\n                                document.getElementById(\"home-button\").focus();\n                            }\n\n                        }}>\n                    View\n                </button>\n            </div>\n            <button\n                aria-label=\"Delete list button\"\n                className=\"delete-list-button\"\n                onClick={() => {\n                    props.onDeleteList(props.listID);\n                }}>\n                X\n            </button>\n        </div>\n    )\n}\n\nexport default ListItem;","import './AddList.css';\nimport {useState} from \"react\";\n\nfunction AddTask(props){\n    const [currList, setCurrList] = useState(\"\");\n\n    return (\n        <div className=\"add-task-container\">\n            <input\n                className=\"todo-input\"\n                id=\"new-todo-text\"\n                placeholder=\"Create a new list\"\n                value={currList}\n                onChange={e => {\n                    setCurrList(e.target.value);\n                }}\n                onKeyPress={e => {\n                    if (currList !== \"\") {\n                        if (e.key === \"Enter\") {\n                            props.onAddList(currList);\n                            setCurrList(\"\");\n                        }\n                    }\n                }}\n            />\n            <button id={currList !== \"\" ? \"list-add-button\" : \"list-add-button-disabled\"}\n                    tabIndex = {currList !== \"\" ? 0 : 1}\n                    onClick={() => {\n                        if (currList !== \"\") {\n                            props.onAddList(currList);\n                            setCurrList(\"\");\n                        }\n                    }}>\n                Add\n            </button>\n        </div>\n    );\n}\n\nexport default AddTask;","import React from 'react';\nimport ListItem from './ListItem'\nimport './ListMenu.css';\nimport AddList from \"./AddList\";\n\nfunction ListMenu(props) {\n    return (\n        <div className=\"list-page\">\n            <div className=\"top-button-bar\">\n                <div className=\"add-task\">\n                    <AddList\n                        onAddList={props.onAddList}\n                        onListSelected={props.onListSelected}\n                    />\n                </div>\n            </div>\n            <div id=\"list-container\">\n                <div className=\"checklist\">\n                    {props.listData.length === 0 ? \"No current lists.\" : null}\n                    {props.listData.map(list =>\n                        <ListItem\n                            isOwner={props.isOwner}\n                            editors={list.editors}\n                            listID={list.id}\n                            listName={list.listName}\n                            currListID={props.currListID}\n                            currListName={props.currListName}\n                            onListSelected={props.onListSelected}\n                            homepage={props.homepage}\n                            showHomepage={props.showHomepage}\n                            onDeleteList={props.onDeleteList}\n                            onListFieldChanged={props.onListFieldChanged}\n                        />)}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ListMenu;","import TextareaAutosize from 'react-textarea-autosize';\nimport {useState} from 'react';\nimport './Task.css';\n\nfunction Task(props) {\n    const [itemName, setItemName] = useState(props.taskLabel);\n\n    return (\n        <div className=\"task-container\">\n            <input type=\"checkbox\"\n                   className=\"checkbox\"\n                   checked={props.isCompleted}\n                   onChange={(e) => {\n                       props.onTaskFieldChanged(props.taskId, \"isCompleted\", e.target.checked)\n                   }}\n\n                   onKeyPress={e => {\n                       if (e.key === \"Enter\") {\n                           props.onTaskFieldChanged(props.taskId, \"isCompleted\", !props.isCompleted)\n                       }\n                   }}\n            />\n            <TextareaAutosize\n                id= {!props.isCompleted ? \"task-label\" : \"task-label-strikethrough\"}\n                value={itemName}\n                onChange={(e) => setItemName(e.target.value)}\n                onBlur={(e) =>\n                    props.onTaskFieldChanged(props.taskId, \"taskLabel\", itemName)\n                }\n                onKeyPress={e => {\n                    if (e.key === \"Enter\") {\n                        if (document.getElementById('task-label')){\n                            e.preventDefault();\n                            document.getElementById('task-label').blur();\n                        }\n                    }\n                }}\n                // don't allow user to edit a task if it's been marked completed\n                disabled={props.isCompleted}\n            />\n            <div className=\"button-container\">\n                <button className=\"priority-button\"\n                        id={props.priority === 3 ? \"high\" : props.priority === 2 ? \"medium\" : \"low\"}\n                        aria-label= {(props.priority === 3 ? \"high\" : props.priority === 2 ? \"medium\" : \"low\") + \" priority\"}\n                        onClick={() => {\n                            props.onChangePriority(props.taskId, props.priority);\n                        }}>\n                    {\"!\".repeat(props.priority)}\n                </button>\n            </div>\n            <div>\n                <button\n                    className=\"delete-list-button\"\n                    aria-label=\"delete\"\n                        onClick={() => {\n                            props.onDeleteTask(props.taskId);\n                        }}>\n                    X\n                </button>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Task;","import React from 'react';\nimport Task from \"./Task\";\nimport './ToDoList.css';\n\nfunction ToDoList(props) {\n    return (\n        <div id=\"list-container\">\n            <div className=\"checklist\">\n                {props.taskList.length === 0 ? \"No current tasks.\" : null}\n                {props.taskList.map(task =>\n                    <Task {...task}\n                          key={task.taskId}\n                          onDeleteTask={props.onDeleteTask}\n                          onTaskFieldChanged={props.onTaskFieldChanged}\n                          onChangePriority={props.onChangePriority}\n                    />)}\n            </div>\n        </div>);\n}\n\nexport default ToDoList;","import './AddTask.css';\nimport {useState} from \"react\";\n\nfunction AddList(props){\n    const [currTask, setCurrTask] = useState(\"\");\n\n    return (\n        <div className=\"add-task-container\">\n            <input\n                className=\"todo-input\"\n                id=\"new-todo-text\"\n                placeholder=\"Create a new task\"\n                value={currTask}\n                onChange={e => {\n                    setCurrTask(e.target.value);\n                }}\n                onKeyPress={e => {\n                    if (currTask !== \"\") {\n                        if (e.key === \"Enter\") {\n                            props.onAddTask(currTask);\n                            setCurrTask(\"\");\n                        }\n                    }\n                }}\n            />\n            <button className={currTask !== \"\" ? \"add-button\" : \"add-button-disabled\"}\n                    tabIndex = {currTask !== \"\" ? 0 : 1}\n                    onClick={() => {\n                        if (currTask !== \"\") {\n                            props.onAddTask(currTask);\n                            setCurrTask(\"\");\n                        }\n                    }}>\n                Add\n            </button>\n        </div>\n    );\n}\n\nexport default AddList;","import './Alert.css';\n\nif ((document.getElementById('alert-cancel') && document.getElementById('alert-cancel').hasFocus())) {\n    console.log(\"on cancel\");\n}\n\nfunction Alert(props) {\n    return (\n        <div className={\"backdrop\"}>\n            <div id=\"modal\">\n                {props.children}\n                <div className=\"alert-buttons\">\n                    <button id=\"alert-ok\"\n                            onClick={() => {\n                                props.onOK();\n                                props.onClose();\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-cancel\").focus();\n                                }\n                            }}\n                    >\n                        OK\n                    </button>\n\n                    <button tabIndex=\"0\"\n                            className=\"alert-button\"\n                            id=\"alert-cancel\"\n                            onClick={() => props.onClose()}\n                            onKeyDown={e => {\n                                if(e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-ok\").focus();\n                                }\n                            }}\n                    >\n                        Cancel\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Alert;","import './SortMenu.css';\n\nfunction SortMenu(props) {\n    return (\n        <div className=\"sort-backdrop\">\n            <div className=\"sort-modal\">\n                {props.children}\n                <div className=\"sort-buttons\">\n                    <div id=\"sort-by\">\n                        Sort by:\n                    </div>\n                    <button className={\"alert-button\"} id={\"alert-sort-date\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByCreationDate();\n                                props.onClose()\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-sort-name\").focus();\n                                }\n                            }}\n                    >\n                        {props.sortOption === \"dateCreated\" ? \"✓ Date Created\" : \"Date Created\"}\n                    </button>\n                    <button className={\"alert-button\"} id={\"alert-sort-name\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByName();\n                                props.onClose()\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-sort-priority\").focus();\n                                }\n                            }}\n                    >\n                        {props.sortOption === \"taskLabel\" ? \"✓ Name\" : \"Name\"}\n                    </button>\n                    <button className={\"alert-button\"} id={\"alert-sort-priority\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByPriority();\n                                props.onClose()\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-sort-date\").focus();\n                                }\n                            }}\n                    >\n                        {props.sortOption === \"priority\" ? \"✓ Priority\" : \"Priority\"}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SortMenu;","import Alert from \"./Alert\"\nimport SortMenu from \"./SortMenu\"\nimport React, {useState} from \"react\";\nimport './ToolBar.css';\n\nfunction ToolBar(props) {\n    const [showAlert, setShowAlert] = useState(false);\n    const [showSortMenu, setShowSortMenu] = useState(false);\n\n    function handleSortByName() {\n        props.onSortSelected(\"taskLabel\");\n    }\n\n    function handleSortByPriority() {\n        props.onSortSelected(\"priority\");\n    }\n\n    function handleSortByCreationDate() {\n        props.onSortSelected(\"dateCreated\");\n    }\n\n    function handleAlertOK() {\n        props.onDeleteTasks();\n    }\n\n    function toggleModal() {\n        setShowAlert(!showAlert)\n    }\n\n    function toggleSortModal() {\n        setShowSortMenu(!showSortMenu)\n    }\n\n    function toggleShowCompleted() {\n        props.showCompleted ? props.onSetShowCompleted(false) : props.onSetShowCompleted(true)\n    }\n\n    return (\n        <div>\n            <div className=\"toolbar\">\n                <button\n                    id=\"sort-button\"\n                    className=\"toolbar-button\"\n                    onClick={toggleSortModal}>\n                    <i id=\"sort-icon\" className=\"las la-sort-amount-down\"></i>\n                    <br/>\n                    Sort\n                </button>\n                {showSortMenu &&\n                <SortMenu className=\"toolbar-button\"\n                          sortOption={props.sortOption}\n                          onClose={toggleSortModal}\n                          onSortByName={handleSortByName}\n                          onSortByPriority={handleSortByPriority}\n                          onSortByCreationDate={handleSortByCreationDate}>\n                </SortMenu>}\n                <button\n                    className=\"toolbar-button\"\n                    id=\"hide-button\"\n                    onClick={() => {\n                        toggleShowCompleted()\n                    }}>\n                    <i id=\"hide-icon\"\n                       className={props.showCompleted ? \"las la-eye-slash\" : \"las la-eye\"}>\n                    </i>\n                    <br/>\n                    {props.showCompleted ? \"Hide Completed\" : \"Show All\"}\n                </button>\n                <button\n                    className=\"toolbar-button\"\n                    id={props.numCompleted !== 0 ? \"delete-button\" : \"delete-completed-button-hidden\"}\n                    disabled={props.numCompleted === 0}\n                    onClick={toggleModal}\n                >\n                    <i id=\"delete-icon\" className=\"las la-trash\">\n                    </i>\n                    <br/>\n                    Delete Completed\n                </button>\n\n            </div>\n            {showAlert && <Alert onClose={toggleModal} onOK={handleAlertOK}>\n                <div>\n                    Are you sure you want to delete all {props.numCompleted} completed tasks?\n                </div>\n            </Alert>}\n        </div>\n    );\n}\n\nexport default ToolBar;","import './AddEditor.css';\nimport {useState} from \"react\";\n\nfunction AddEditor(props){\n    const [currEditor, setCurrEditor] = useState(\"\");\n\n    return (\n        <div className=\"add-editor-container\">\n            <input\n                className=\"editor-input\"\n                type=\"email\"\n                id=\"new-todo-text\"\n                placeholder=\"editor@example.com\"\n                value={currEditor}\n                onChange={e => {\n                    setCurrEditor(e.target.value);\n                }}\n                onKeyPress={e => {\n                    if (currEditor !== \"\") {\n                        if (e.key === \"Enter\") {\n                            props.onAddEditor(currEditor);\n                            setCurrEditor(\"\");\n                        }\n                    }\n                }}\n            />\n            <button className={currEditor !== \"\" ? \"add-button\" : \"add-button-disabled\"}\n                    tabIndex = {currEditor !== \"\" ? 0 : 1}\n                    onClick={() => {\n                        if (currEditor !== \"\") {\n                            props.onAddEditor(currEditor);\n                            setCurrEditor(\"\");\n                        }\n                    }}>\n                Add\n            </button>\n        </div>\n    );\n}\n\nexport default AddEditor;","import './Editor.css';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nfunction Editor(props) {\n    return (\n        <div className=\"editor-container\">\n            <TextareaAutosize\n                id=\"editor-label\"\n                disabled={true}\n                value={props.editor}\n            >\n            </TextareaAutosize>\n            {props.isOwner &&\n            <button\n                className=\"delete-editor-button\"\n                aria-label=\"delete\"\n                onClick={() => {\n                    props.onDeleteEditor(props.editor);\n                }}\n            >\n                X\n            </button>\n            }\n\n        </div>\n    )\n}\n\nexport default Editor;","import './EditorsList.css';\nimport Editor from \"./Editor\";\n\nfunction EditorsList(props) {\n    return (\n        <div className=\"editor-list-container\">\n        {props.editors.slice(1).map(editor =>\n                <Editor {...editor}\n                        key={editor}\n                        editor={editor}\n                        onDeleteEditor={props.onDeleteEditor}\n                        isOwner={props.isOwner}\n                />)}\n            <div id=\"no-editors-message\"> {props.editors.length === 1 ? \"This is currently a private list.\" +\n                \" Enter an email to share this list with a collaborator.\" : \"\"} </div>\n        </div>);\n}\n\nexport default EditorsList;","import './ShareModal.css';\nimport AddEditor from \"./AddEditor\";\nimport EditorsList from \"./EditorsList\";\n\nfunction ShareModal(props) {\n    const isOwner = props.owner === props.user.email;\n\n    return (\n        <div className=\"share-backdrop\">\n            <div className=\"share-modal\">\n                {props.children}\n                <div className=\"share-buttons\">\n                    <div id=\"share-message\">\n                        Share Settings\n                        <button tabIndex=\"0\"\n                                className=\"cancel-share-button\"\n                                id=\"cancel-share\"\n                                onClick={() => props.onClose()}\n                                onKeyDown={e => {\n                                    if(e.keyCode === 9) {\n                                        e.preventDefault();\n                                        if (document.getElementById(\"add-editors\")) {\n                                            document.getElementById(\"add-editors\").focus();\n                                        }\n                                    }\n                                }}\n                        >\n                            X\n                        </button>\n                    </div>\n                    <div id=\"owner-message\">\n                        Owner: {props.owner}\n                    </div>\n                    <AddEditor\n                        id=\"add-editors\"\n                        currListID={props.currListID}\n                        onAddEditor={props.onAddEditor}\n                        onDeleteEditor={props.onDeleteEditor}\n                    >\n                    </AddEditor>\n                    <div id=\"share-message\">\n                        Editors\n                    </div>\n                    <EditorsList\n                        id=\"editors-list\"\n                        owner={props.owner}\n                        editors={props.editors}\n                        onDeleteEditor={props.onDeleteEditor}\n                        isOwner={isOwner}\n                    >\n                    </EditorsList>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ShareModal;","import \"./ShareListItem.css\"\nimport SelectionMaintainingInput from \"../SelectionMaintainingInput\";\n\nfunction SharedListItem(props) {\n    console.log(\"list item is\", props.listID, props.listName)\n    return (\n        <div className=\"shared-list-item-container\">\n            <SelectionMaintainingInput\n                id=\"list-item-label\"\n                value={props.listName}\n                onChange={(e) => {\n                    props.onListFieldChanged(props.listID, \"listName\", e.target.value)\n                }}\n                onKeyPress={e => {\n                    if (e.key === \"Enter\") {\n                        e.preventDefault();\n                        if(document.getElementById('list-item-label')){\n                            document.getElementById('list-item-label').blur();\n                        }\n                    }\n                }}\n            />\n            <div className=\"collab-icon\">\n                <i className={props.editors.length > 1 ? \"las la-user-friends\" : null }></i>\n            </div>\n            <div className=\"button-container\">\n                <button className=\"shared-view-list-button\"\n                        onClick={() => {\n                            props.onListSelected(props.listID);\n                            props.showHomepage(false);\n                            if(document.getElementById(\"home-button\")){\n                                document.getElementById(\"home-button\").focus();\n                            }\n\n                        }}>\n                    View\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default SharedListItem;","import React from 'react';\nimport './ListMenu.css';\nimport SharedListItem from \"./SharedListItem\";\n\nfunction SharedLists(props) {\n    const currentListName = props.listName;\n\n    return (\n        <div id=\"list-container\">\n            <div className=\"checklist\">\n                {props.sharedListData.length === 0 ? \"No lists have been shared with you.\" : null}\n                {props.verified ?\n                props.sharedListData.map(list =>\n                    <SharedListItem\n                        listID={list.id}\n                        listName={list.listName}\n                        editors={list.editors}\n                        currListID={props.currListID}\n                        currListName={currentListName}\n                        onListSelected={props.onListSelected}\n                        homepage={props.homepage}\n                        showHomepage={props.showHomepage}\n                        onDeleteList={props.onDeleteList}\n                        onListFieldChanged={props.onListFieldChanged}\n                    />)\n                    :\n                    <div>\n                        <p>You must verify your email in order to see lists that have been shared with you.</p>\n                        <button\n                            id=\"verify-email-button-2\"\n                            type=\"button\"\n                            onClick={props.handleVerifyEmail}>\n                            Send Verification Email\n                        </button>\n                    </div>\n\n                }\n            </div>\n        </div>);\n}\n\nexport default SharedLists;","import './Tab.css';\n\nfunction Tab(props) {\n    const classNames = [\"tab-list-item\"];\n    if (props.activeTab === props.label) {\n        classNames.push(\"tab-list-active\");\n    }\n    return <li className={classNames.join(\" \")}\n               onClick={() => props.onClickTab(props.label)}>\n        {props.label}\n    </li>\n}\n\nexport default Tab;","import React, {useState} from 'react';\nimport Tab from './Tab.js'\nimport \"./TabList.css\"\n\nfunction TabList(props) {\n    const [activeTab, setActiveTab] = useState(props.children[0].key);\n    return (\n        <div className=\"tabs\">\n            <div className=\"tab-list\">\n                {props.children.map(child =>\n                    <Tab key={child.key}\n                         label={child.key}\n                         activeTab={activeTab}\n                         onClickTab={(label) => setActiveTab(label)}/>)}\n            </div>\n            {props.children.find((child) => child.key === activeTab)}\n        </div>\n    );\n}\n\nexport default TabList;","import './App.css';\nimport './index.js';\nimport ListMenu from \"./components/ListView/ListMenu\"\nimport ToDoList from \"./components/TaskView/ToDoList\"\nimport AddTask from \"./components/TaskView/AddTask\"\nimport ToolBar from \"./components/TaskView/ToolBar\"\nimport ShareModal from \"./components/TaskView/ShareModal\";\nimport SharedLists from \"./components/ListView/SharedLists\";\nimport TabList from \"./components/TabList\";\nimport React, {useState} from \"react\";\n\nfunction App(props) {\n    const[showCompleted, setShowCompleted] = useState(true);\n    const filteredList = props.taskList.filter(task => showCompleted || !task.isCompleted);\n    const listsIOwn = props.listData.filter(list => list.owner === props.user.email);\n    const listsSharedWithMe = props.listData.filter(list => list.owner !== props.user.email);\n\n    const numCompleted = props.taskList.filter(task => task.isCompleted).length;\n    const[homepage, showHomepage] = useState(true);\n    const [showShareModal, setShowShareModal] = useState(false);\n\n    function toggleShareModal() {\n        setShowShareModal(!showShareModal)\n    }\n\n    return (\n        homepage\n            ?\n            <div className=\"app-container\">\n                <div className=\"heading\">\n                    <h1>\n                        <div\n                            aria-label=\"Task Manager\"\n                            className=\"title\">\n                            Task Manager\n                        </div>\n                    </h1>\n                </div>\n                <TabList classname=\"tabs\">\n                    <ListMenu\n                        key=\"My Lists\"\n                        className=\"taskList\"\n                        isOwner={props.isOwner}\n                        listData={listsIOwn}\n                        editors={props.editors}\n                        currListID={props.currListID}\n                        currListName={props.currListName}\n                        onListSelected={props.handleListSelected}\n                        showHomepage={showHomepage}\n                        onAddList={props.handleAddList}\n                        onDeleteList={props.handleDeleteList}\n                        onListFieldChanged={props.handleListFieldChanged}>\n                    </ListMenu>\n                    <SharedLists\n                        key=\"Shared With Me\"\n                        className=\"taskList\"\n                        verified={props.verified}\n                        handleVerifyEmail={props.handleVerifyEmail}\n                        isOwner={props.isOwner}\n                        sharedListData={listsSharedWithMe}\n                        currListID={props.currListID}\n                        currListName={props.currListName}\n                        onListSelected={props.handleListSelected}\n                        showHomepage={showHomepage}\n                        onDeleteList={props.handleDeleteList}\n                        onListFieldChanged={props.handleListFieldChanged}>\n                    </SharedLists>\n                </TabList>\n\n            </div>\n            :\n            <div className=\"app-container\">\n                <div className=\"heading\">\n                    <h1>\n                        <button id=\"home-button\"\n                                aria-label=\"Home Button\"\n                                onClick={() => {\n                                    showHomepage(true);\n                                }}>\n                            <i className=\"las la-angle-left\">\n                            </i>\n                        </button>\n                        <div className=\"title\">\n                             Task Manager\n                        </div>\n                        <button id=\"share-button\"\n                                aria-label=\"Share Button\"\n                                onClick={toggleShareModal}>\n                            <i className=\"las la-user-plus\">\n                            </i>\n                        </button>\n                        {showShareModal &&\n                        <ShareModal\n                            onClose={toggleShareModal}\n                            currListID={props.currListID}\n                            owner={props.owner}\n                            user={props.user}\n                            editors={props.editors}\n                            onAddEditor={props.handleAddEditor}\n                            onDeleteEditor={props.handleDeleteEditor}\n                        >\n                        </ShareModal>}\n                    </h1>\n                    <div>\n                        <h2>{props.currListName}</h2>\n                    </div>\n                </div>\n                <div className=\"top-button-bar\">\n                    <div className=\"add-task\">\n                        <AddTask\n                            taskList={filteredList}\n                            onSetTaskList={props.setTaskList}\n                            onAddTask={props.handleAddTask}\n                        />\n                    </div>\n                </div>\n                <div className=\"taskList\">\n                    <ToDoList\n                        taskList={filteredList}\n                        onDeleteTask={props.handleDeleteTask}\n                        onChangePriority={props.handleChangePriority}\n                        onDeleteTasks={props.handleDeleteTasks}\n                        onTaskFieldChanged={props.handleTaskFieldChanged}\n                        numCompleted={numCompleted}\n                    />\n                </div>\n                <div className=\"bottomBar\">\n                    <ToolBar\n                        onDeleteTasks={props.handleDeleteTasks}\n                        showCompleted={showCompleted}\n                        onSetShowCompleted={setShowCompleted}\n                        numCompleted={numCompleted}\n                        onSortSelected={props.handleSortSelected}\n                        sortOption={props.sortOption}\n                    />\n                </div>\n            </div>\n        );\n    }\n\nexport default App;\n","import {useState} from \"react\"\nimport {sendPasswordResetEmail} from \"firebase/auth\";\nimport \"./ResetPassword.css\"\n\nfunction ResetPassword(props) {\n    const [resetEmail, setResetEmail] = useState(\"\");\n    const [resetEmailSuccess, setResetEmailSuccess] = useState(false);\n    const [err, setErr] = useState(null);\n\n    function disableMessage() {\n        setResetEmailSuccess(false)\n        setErr(null);\n    }\n    return (\n        <div>\n            <div className=\"reset-backdrop\">\n                <div className=\"reset-modal\">\n                    {props.children}\n                    <div id=\"pass-reset-top\">\n                        <div id=\"pass-reset-title\">Password Reset</div>\n                        <div>\n                            <button tabIndex=\"0\"\n                                    className=\"cancel-reset-button\"\n                                    onClick={() => props.onClose()}\n                            >\n                                X\n                            </button>\n                        </div>\n                    </div>\n                    <div id=\"forgot-msg\">\n                        Forgot your password?\n                        Send a reset email to reset it.\n                    </div>\n                    <div>\n                        <input\n                            className=\"reset-email-input\"\n                            value={resetEmail}\n                            onChange={e => setResetEmail(e.target.value)}\n                            onFocus={() => disableMessage()}\n                            placeholder=\"email\"\n                            type=\"email\"\n                            onKeyPress={e => {\n                                if (resetEmail !== \"\") {\n                                    if (e.key === \"Enter\") {\n                                        sendPasswordResetEmail(props.auth, resetEmail)\n                                            .then(() => {\n                                                setResetEmailSuccess(true);\n                                            })\n                                            .catch((error) => {\n                                                setResetEmailSuccess(false);\n                                                setErr(error);\n                                            })\n                                    }\n                                }\n                            }}\n\n                        />\n                    </div>\n                    <div>\n                        <button\n                            className=\"reset-password-button\"\n                            onClick={() => sendPasswordResetEmail(props.auth, resetEmail)\n                                .then(() => {\n                                setResetEmailSuccess(true);\n                            })\n                                .catch((error) => {\n                                setResetEmailSuccess(false);\n                                setErr(error);\n                            })\n                            }>\n                            Send\n                        </button>\n                    </div>\n                    <br/>\n                    {resetEmailSuccess ?\n                        <div className=\"success-msg\">\n                            Reset email successfully sent.\n                        </div>\n                    : null}\n                    {err ?\n                        <div className=\"success-msg\">\n                            Please enter a valid email.\n                        </div>\n                        : null}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ResetPassword;","import firebase from \"firebase/compat\";\nimport { useState } from \"react\";\nimport { useSignInWithEmailAndPassword } from \"react-firebase-hooks/auth\";\nimport \"./SignIn.css\"\nimport ResetPassword from \"./ResetPassword\";\n\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\nconst githubProvider = new firebase.auth.GithubAuthProvider();\n\nfunction SignIn(props) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const signIn = useSignInWithEmailAndPassword(props.auth);\n    const [signInWithEmailAndPassword, loading, error] = [signIn[0], signIn[2], signIn[3]];\n    const [providerError, setProviderError] = useState(false);\n    const [showResetModal, setShowResetModal] = useState(false);\n\n    function toggleResetModal() {\n        setShowResetModal(!showResetModal)\n    }\n\n    return (\n        <div>\n            <form onSubmit={(e) => e.preventDefault()}>\n                <input\n                    className=\"signin-input\"\n                    type=\"email\"\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                    placeholder=\"email\"\n                />\n                <input\n                    className=\"signin-input\"\n                    type=\"password\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                    placeholder=\"password\"\n                />\n            </form>\n            <button\n                type=\"submit\"\n                onClick={() => signInWithEmailAndPassword(email, password)}\n                className=\"signin-button\">\n                Sign In\n            </button>\n            <div className=\"signin-google\">\n                <button\n                    className=\"sign-in-button\"\n                    onClick={() => props.auth.signInWithPopup(googleProvider)\n                        .then(() => {\n                            setProviderError(false);\n\n                        })\n                        .catch((error) => {\n                            setProviderError(true);\n                        })\n                    }>\n\n                    <img\n                        className=\"google-logo\"\n                        alt=\"google logo\"\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/800px-Google_%22G%22_Logo.svg.png\"\n                    />\n                    Sign In with Google\n                </button>\n            </div>\n            <div className=\"signin-google\">\n                <button\n                    className=\"sign-in-button\"\n                    onClick={() => props.auth.signInWithPopup(githubProvider)\n                        .then(() => {\n                            setProviderError(false);\n                    })\n                        .catch((error) => {\n                            setProviderError(true);\n                        })}>\n                    <img\n                        className=\"google-logo\"\n                        alt=\"github logo\"\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/9/91/Octicons-mark-github.svg\"\n                    />\n                    Sign In with Github\n                </button>\n            </div>\n            <div>\n                <button id=\"forgot-pass-button\"\n                        aria-label=\"Reset Password Button\"\n                        onClick={toggleResetModal}>\n                    Forgot Password?\n                </button>\n                {showResetModal &&\n                    <ResetPassword\n                        key=\"Reset Password\"\n                        auth={props.auth}\n                        onClose={toggleResetModal}\n                    />}\n            </div>\n            {!loading && (error) &&\n            <div className=\"error-signin\">\n                {error.code === 'auth/weak-password'\n                    ? \"Password must be at least 6 characters long.\"\n                    : error.code === 'auth/invalid-email'\n                        ? \"Please provide a valid email address.\"\n                        : error.code === 'auth/email-already-in-use'\n                            ? \"This email already has an account associated with it. Try another sign in method.\"\n                            : error.code === 'auth/internal-error'\n                                ? \"Please enter a valid username and password.\"\n                                    : error.code === 'auth/account-exists-with-different-credential'\n                                        ? \"An account already exists with this email.\"\n                                        : error.code === 'auth/user-not-found'\n                                            ? \"The user was not found. Try signing up with a new account.\"\n                                            : \"An error occurred. Check your credentials and try again.\"\n                }\n            </div>\n            }\n            {!loading && (providerError) &&\n            <div className=\"error-provider\">\n                {\n                    \"An error occurred. You may already have an existing account with this email with another provider.\"\n                }\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default SignIn;","import { useState } from \"react\"\nimport { useCreateUserWithEmailAndPassword } from \"react-firebase-hooks/auth\";\nimport './SignUp.css'\n\nfunction SignUp(props) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [retypePassword, setRetypePassword] = useState(\"\");\n    const [passwordMatchError, setPasswordMatchError] = useState(false);\n    const signIn = useCreateUserWithEmailAndPassword(props.auth);\n    const [createUserWithEmailAndPassword, loading, error] = [signIn[0], signIn[2], signIn[3]];\n\n    const createNewUser = () => {\n        if (password !== retypePassword) {\n            setPasswordMatchError(true);\n            console.log(\"passwords dont match\");\n        }\n        else {\n            setPasswordMatchError(false);\n            createUserWithEmailAndPassword(email, password)\n        }\n    }\n\n    return (\n        <div className=\"signup-page\">\n            <div id=\"signup-form\">\n            <form className=\"signup-form\"\n                onSubmit={(e) => e.preventDefault()}>\n                <input\n                    className=\"signin-input\"\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                    placeholder=\"email\"\n                    type=\"email\"\n                />\n                <input\n                    className=\"signin-input\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                    placeholder=\"password\"\n                    type=\"password\"\n                />\n                <input\n                    value={retypePassword}\n                    onChange={e => setRetypePassword(e.target.value)}\n                    placeholder=\"retype password\"\n                    type=\"password\"\n                    className=\"signin-input\"\n                />\n            </form>\n            <button\n                className=\"signin-button signup-form\"\n                onClick={() => createNewUser()}>\n                Sign Up\n            </button>\n            <br/>\n            </div>\n            {!loading && (error || passwordMatchError) &&\n            <div className=\"error-signup\">\n                {\n                    passwordMatchError\n                        ? \"Passwords do not match.\"\n                        : error.code === 'auth/weak-password'\n                            ? \"Password must be at least 6 characters long.\"\n                            : error.code === 'auth/invalid-email'\n                                ? \"Please provide a valid email address.\"\n                                : error.code === 'auth/email-already-in-use'\n                                    ? \"This email already has an account associated with it. Try another sign in method.\"\n                                    : error.code === 'auth/internal-error'\n                                        ? \"Please enter a valid username and password.\"\n                                        : \"Some error occurred; please try again.\"\n                }\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default SignUp;","import SignIn from \"./SignIn.js\"\nimport SignUp from \"./SignUp\"\nimport \"./SignIn.css\";\nimport TabList from \"./TabList\";\n\nfunction AuthPage(props) {\n    return (\n        <div className=\"app-container\">\n            <div className=\"heading\">\n                <h1>\n                    <div\n                        aria-label=\"Task Manager\"\n                        className=\"title\">\n                        Task Manager\n                    </div>\n                </h1>\n                <div className=\"auth-header\">\n                    <TabList className=\"tabs\">\n                        <SignIn\n                            key=\"Sign In\"\n                            auth={props.auth}\n                            user={props.user}\n                        />\n                        <SignUp\n                            key=\"Sign Up\"\n                            auth={props.auth}\n                        />\n                    </TabList>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default AuthPage;","export default __webpack_public_path__ + \"static/media/LoadingSymbol.e9f28dc7.gif\";","import React, {useState} from \"react\";\nimport App from './App';\nimport AuthPage from \"./components/AuthPage\";\nimport loadingSymbol from '../src/LoadingSymbol.gif'\nimport './InMemoryApp.css';\n\n// Import the functions you need from the SDKs you need\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport {\n    useAuthState\n} from 'react-firebase-hooks/auth';\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDQNFNc9MOCJM7dDkmRmHeJu2-vx_XdZPI\",\n    authDomain: \"em-zhang-cs124-lab.firebaseapp.com\",\n    projectId: \"em-zhang-cs124-lab\",\n    storageBucket: \"em-zhang-cs124-lab.appspot.com\",\n    messagingSenderId: \"791807570724\",\n    appId: \"1:791807570724:web:8c92b693e902d7077ab9b1\",\n    measurementId: \"G-2CLJDP4NEV\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst auth = firebase.auth();\n\nfunction InMemoryApp(props) {\n    const [user, loading, error] = useAuthState(auth);\n    function verifyEmail() {\n        auth.currentUser.sendEmailVerification();\n    }\n\n    if (loading) {\n        return(\n        <div className=\"loading-message\">\n            <img src={loadingSymbol} alt=\"Loading...\"/>\n        </div>)\n    }\n    else if (user) {\n        return <div>\n            <div className=\"profile\">\n                <div id=\"user-id\">\n                    <div>\n                        <i id=\"profile-icon\"\n                           className={user.emailVerified ? \"las la-user-check\" : \"las la-user\"}>\n                        </i>\n                    </div>\n                    <div id=\"email\">{user.email}</div>\n                </div>\n                <div id=\"profile-button\">\n                    <button id=\"logout-button\" type=\"button\" onClick={() => auth.signOut()}>\n                        <i id=\"logout-icon\" className=\"las la-sign-out-alt\"></i>\n                    </button>\n                </div>\n                {!user.emailVerified &&\n                <button\n                    id=\"verify-email-button\"\n                    type=\"button\"\n                    onClick={verifyEmail}>\n                    Verify\n                </button>}\n            </div>\n            <SignedInApp\n                {...props}\n                user={user}\n                email={user.email}\n                verified={user.emailVerified}\n                handleVerifyEmail={verifyEmail}\n            />\n\n        </div>\n    } else {\n        return <>\n            {error && <p>Error App: {error.message}</p>}\n            <AuthPage\n                auth={auth}\n                user={user}\n            />\n        </>\n    }\n}\n\nconst collectionName = \"list-items\"\n\nfunction SignedInApp(props) {\n    let queryAll = db.collection(collectionName).where(\"editors\", \"array-contains\", props.email);\n    const [all_value] = useCollection(queryAll);\n\n    let listIDs = [];\n    if (all_value) {\n        listIDs = all_value.docs.map((doc) => {\n            return {...doc.data()}\n        });\n    }\n\n    // only get data from the current list\n    const [currentList, setCurrentList] = useState(\"default-list\");\n\n    let query = db.collection(collectionName).doc(currentList).collection(\"tasks\");\n\n    // set the sort option to order the query\n    const [sortOption, setSortOption] = useState(\"dateCreated\");\n    query = query.orderBy(sortOption, sortOption === \"priority\" ? \"desc\" : \"asc\")\n\n    // return values of the task list\n    const [value, loading, error] = useCollection(query);\n    let taskList = [];\n    if (value) {\n        taskList = value.docs.map((doc) => {\n            return {...doc.data()}\n        });\n    }\n\n    // determine what list name to display in the header of the app\n    let currentListName = \"\";\n    let listOwner = null;\n    let listEditors = null;\n\n    if (listIDs.length > 0) {\n        // find the information of the current list that we are displaying\n        let currList = listIDs.filter((e) => e.id === currentList);\n        if (currList.length > 0) {\n            currentListName = listIDs.filter((e) => e.id === currentList)[0].listName;\n            listOwner = listIDs.filter((e) => e.id === currentList)[0].owner;\n            listEditors = listIDs.filter((e) => e.id === currentList)[0].editors;\n        }\n    }\n\n    const isOwner = props.user.email === listOwner;\n\n    // delete a task based on taskID\n    function handleDeleteTask(taskID) {\n        db.collection(collectionName).doc(currentList).collection(\"tasks\").doc(taskID).delete()\n            .catch((error) => {\n                console.error(\"Error deleting document: \", error);\n            });\n    }\n\n    // adds a task, generating new id each time\n    function handleAddTask(currTask) {\n        const newId = generateUniqueID();\n        db.collection(collectionName).doc(currentList).collection(\"tasks\").doc(newId).set({\n            taskId: newId,\n            taskLabel: currTask,\n            isCompleted: false,\n            priority: 1,\n            dateCreated: firebase.database.ServerValue.TIMESTAMP,\n        }).catch((error) => {\n            console.error(\"Error writing document: \", error);\n        })\n        return newId;\n    }\n\n    // handles updating any field of a task\n    function handleTaskFieldChanged(taskId, field, value) {\n        const doc = db.collection(collectionName).doc(currentList).collection(\"tasks\").doc(taskId);\n        doc.update({\n            [field]: value,\n        }).catch((error) => {\n            console.error(\"Error updating document: \", error);\n        })\n    }\n\n    // change a task's priority among 1/2/3\n    function handleChangePriority(taskID, taskPriority) {\n        let docRef = db.collection(collectionName).doc(currentList).collection(\"tasks\").doc(taskID);\n        if (taskPriority === 1) {\n            docRef.update({\n                priority: 2\n            })\n        } else if (taskPriority === 2) {\n            docRef.update({\n                priority: 3\n            })\n        } else if (taskPriority === 3) {\n            docRef.update({\n                priority: 1\n            })\n        }\n    }\n\n    // delete completed tasks in a list\n    function handleDeleteTasks() {\n        let delete_query = db.collection(collectionName).doc(currentList).collection(\"tasks\").where('isCompleted', '==', true);\n        delete_query.get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n                doc.ref.delete();\n            });\n        });\n    }\n\n    // select a sort option\n    function handleSortSelected(option) {\n        setSortOption(option);\n    }\n\n    // handles updating any field of a list\n    function handleListFieldChanged(listID, field, value) {\n        const doc = db.collection(collectionName).doc(listID);\n        doc.update({\n            [field]: value,\n        })\n    }\n\n    // add a new list\n    function handleAddList(newList) {\n        const newId = generateUniqueID();\n        db.collection(collectionName).doc(newId).set({\n            id: newId,\n            listName: newList,\n            owner: props.email,\n            editors: [props.email],\n        })\n        return newId;\n    }\n\n    // delete a list\n    function handleDeleteList(listID) {\n        db.collection(collectionName).doc(listID).delete();\n    }\n\n    // select and go into a list\n    function handleListSelected(list) {\n        setCurrentList(list)\n    }\n\n    function handleAddEditor(editorEmail) {\n        console.log(\"In handleAddEditor\")\n        const doc = db.collection(collectionName).doc(currentList);\n        doc.update({\n            editors: firebase.firestore.FieldValue.arrayUnion(editorEmail)\n        });\n    }\n\n    function handleDeleteEditor(editorEmail) {\n        const doc = db.collection(collectionName).doc(currentList);\n        doc.update({\n            editors: firebase.firestore.FieldValue.arrayRemove(editorEmail)\n        });\n    }\n\n    return <div>\n        <App\n            user={props.user}\n            listData={listIDs}\n            currListID={currentList}\n            currListName={currentListName}\n            owner={listOwner}\n            isOwner={isOwner}\n            editors={listEditors}\n            verified={props.verified}\n            handleVerifyEmail={props.handleVerifyEmail}\n\n            handleAddEditor={handleAddEditor}\n            handleDeleteEditor={handleDeleteEditor}\n\n            handleAddList={handleAddList}\n            handleListSelected={handleListSelected}\n            handleDeleteList={handleDeleteList}\n            handleListFieldChanged={handleListFieldChanged}\n\n            taskList={taskList}\n            handleDeleteTask={handleDeleteTask}\n            handleChangePriority={handleChangePriority}\n            handleDeleteTasks={handleDeleteTasks}\n            handleAddTask={handleAddTask}\n            handleTaskFieldChanged={handleTaskFieldChanged}\n            handleSortSelected={handleSortSelected}\n            sortOption={sortOption}\n        />\n    </div>\n}\n\nexport default InMemoryApp;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport InMemoryApp from \"./InMemoryApp\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <InMemoryApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}