{"version":3,"sources":["components/Task.js","components/ToDoList.js","components/AddTask.js","components/Alert.js","components/SortMenu.js","components/ToolBar.js","App.js","FirestoreApp.js","index.js"],"names":["Task","props","className","type","checked","isCompleted","onChange","e","onTaskFieldChanged","taskId","target","value","taskLabel","console","log","onKeyPress","key","disabled","id","priority","onClick","onChangePriority","repeat","onDeleteTask","ToDoList","taskList","length","map","task","AddTask","useState","currTask","setCurrTask","placeholder","onAddTask","Alert","children","onClose","onOK","SortMenu","onSortByName","sortOption","onSortByPriority","onSortByCreationDate","ToolBar","showAlert","setShowAlert","showSortMenu","setSortMenu","toggleModal","toggleSortModal","onSortSelected","sortOptionText","describeSortOption","showCompleted","onSetShowCompleted","numCompleted","onDeleteTasks","App","setShowCompleted","filteredList","filter","onSetTaskList","setTaskList","handleAddTask","handleDeleteTask","handleChangePriority","handleDeleteTasks","handleTaskFieldChanged","handleSortSelected","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","FirestoreApp","collectionName","query","collection","setSortOption","orderBy","useCollection","docs","doc","data","taskID","delete","taskPriority","docRef","update","where","get","then","querySnapshot","forEach","ref","newId","generateUniqueID","set","dateCreated","database","ServerValue","TIMESTAMP","field","option","ReactDOM","render","StrictMode","initialData","document","getElementById"],"mappings":"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","file":"static/js/main.a78a64a0.chunk.js","sourcesContent":["import TextareaAutosize from 'react-textarea-autosize';\nimport './Task.css';\nimport {useState} from \"react\";\n\nfunction Task(props) {\n    return (\n        <div className=\"task-container\">\n            <input type=\"checkbox\"\n                   className=\"checkbox\"\n                   checked={props.isCompleted}\n                   onChange={(e) => {\n                       props.onTaskFieldChanged(props.taskId, \"isCompleted\", e.target.checked)\n                   }}\n            />\n            <input\n                className= {!props.isCompleted ? \"task-label\" : \"task-label-strikethrough\"}\n                value={props.taskLabel}\n                onChange={(e) => {\n                    console.log(\"editing task with taskId \", props.taskId)\n                    props.onTaskFieldChanged(props.taskId, \"taskLabel\", e.target.value)\n                }}\n                onKeyPress={e => {\n                    if (e.key === \"Enter\") {\n                        return\n                    }\n                }}\n                // don't allow user to edit a task if it's been marked completed\n                disabled={props.isCompleted}\n            />\n            <div>\n                <button className=\"priority-button\"\n                        id={props.priority === 3 ? \"high\" : props.priority === 2 ? \"medium\" : \"low\"}\n                        onClick={() => {\n                            console.log(\"Priority is\", props.priority);\n                            props.onChangePriority(props.taskId, props.priority);\n                        }}>\n                    {\"!\".repeat(props.priority)}\n                </button>\n            </div>\n            <div>\n                <button className=\"delete-button\"\n                        onClick={() => {\n                            props.onDeleteTask(props.taskId);\n                        }}>\n                    X\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Task;","import React from 'react';\nimport Task from \"./Task\";\nimport './ToDoList.css';\n\nfunction ToDoList(props) {\n    return (\n        <div id=\"list-container\">\n            {/*<div className=\"my-tasks\">*/}\n            {/*    <h2>My Tasks </h2>*/}\n            {/*</div>*/}\n            <div className=\"no-tasks-message\">\n                <h3>{props.taskList.length ? \"\" : \"No current tasks.\" }</h3>\n            </div>\n            <div className=\"checklist\">\n                {props.taskList.map(task =>\n                    <Task {...task}\n                          key={task.taskId}\n                          onDeleteTask={props.onDeleteTask}\n                          onTaskFieldChanged={props.onTaskFieldChanged}\n                          onChangePriority={props.onChangePriority}\n                    />)}\n            </div>\n        </div>);\n}\n\nexport default ToDoList;","import './AddTask.css';\nimport {useState} from \"react\";\n\nfunction AddTask(props){\n    const [currTask, setCurrTask] = useState(\"\");\n\n    return (\n        <div>\n            <input\n                className=\"todo-input\"\n                id=\"new-todo-text\"\n                placeholder=\"Enter task here\"\n                value={currTask}\n                onChange={e => {\n                    setCurrTask(e.target.value);\n                }}\n                onKeyPress={e => {\n                    if (currTask !== \"\") {\n                        if (e.key === \"Enter\") {\n                            props.onAddTask(currTask);\n                            setCurrTask(\"\");\n                        }\n                    }\n                }}\n            />\n            <button className={currTask !== \"\" ? \"add-button\" : \"add-button-disabled\"}\n                    onClick={() => {\n                        if (currTask !== \"\") {\n                            props.onAddTask(currTask);\n                            setCurrTask(\"\");\n                        }\n                    }}>\n                Add\n            </button>\n        </div>\n    );\n}\n\nexport default AddTask;","import './Alert.css';\n\nfunction Alert(props) {\n    return (\n        <div className={\"backdrop\"}>\n            <div className=\"modal\">\n                {props.children}\n                <div className=\"alert-buttons\">\n                    <button className={\"alert-button\"} id={\"alert-cancel\"} type={\"button\"}\n                            onClick={() => props.onClose()}>\n                        Cancel\n                    </button>\n                    <button className={\"alert-button\"} id={\"alert-ok\"} type={\"button\"}\n                            onClick={() => {\n                                props.onOK();\n                                props.onClose()\n                            }}>\n                        OK\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Alert;","import './SortMenu.css';\n\nfunction SortMenu(props) {\n    return (\n        <div className={\"sort-backdrop\"}>\n            <div className=\"sort-modal\">\n                {props.children}\n                <div className=\"alert-buttons\">\n                    <button className={\"alert-button\"} id={\"alert-sort-name\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByName();\n                                props.onClose()\n                            }}>\n                        {/*onClick={props.sortOption === \"taskLabel\" => {*/}\n                        {props.sortOption === \"taskLabel\" ? \"✓ Name\" : \"Name\"}\n                    </button>\n                    <button className={\"alert-button\"} id={\"alert-sort-priority\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByPriority();\n                                props.onClose()\n                            }}>\n                        {props.sortOption === \"priority\" ? \"✓ Priority\" : \"Priority\"}\n                    </button>\n                    <button className={\"alert-button\"} id={\"alert-sort-date\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByCreationDate();\n                                props.onClose()\n                            }}>\n                        {props.sortOption === \"dateCreated\" ? \"✓ Date Created\" : \"Date Created\"}\n                    </button>\n                    <button className={\"alert-button\"} id={\"alert-sort-cancel\"} type={\"button\"}\n                            onClick={() => props.onClose()}>\n                        Cancel\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SortMenu;","import Alert from \"../components/Alert\"\nimport SortMenu from \"../components/SortMenu\"\nimport React, {useState} from \"react\";\nimport './ToolBar.css';\n\nfunction ToolBar(props) {\n    const [showAlert, setShowAlert] = useState(false);\n    const [showSortMenu, setSortMenu] = useState(false);\n\n    function handleSortByName() {\n        props.onSortSelected(\"taskLabel\");\n    }\n\n    function handleSortByPriority() {\n        props.onSortSelected(\"priority\");\n    }\n\n    function handleSortByCreationDate() {\n        props.onSortSelected(\"dateCreated\");\n    }\n\n    function describeSortOption() {\n        let sortOptionText = \"Date Created\";\n        if (props.sortOption === \"dateCreated\"){\n            sortOptionText = \"Date Created\";\n        }\n        else if (props.sortOption === \"priority\"){\n            sortOptionText = \"Priority\";\n        }\n        else if (props.sortOption === \"taskLabel\"){\n            sortOptionText = \"Name\";\n        }\n        return sortOptionText;\n    }\n\n    function handleAlertOK() {\n        props.onDeleteTasks();\n    }\n\n    function toggleModal() {\n        showAlert ? setShowAlert(false) : setShowAlert(true)\n    }\n\n    function toggleSortModal() {\n        showSortMenu ? setSortMenu(false) : setSortMenu(true)\n    }\n\n    function toggleShowCompleted() {\n        props.showCompleted ? props.onSetShowCompleted(false) : props.onSetShowCompleted(true)\n    }\n\n    return (\n        <div>\n            <div className=\"toolbar\">\n                <button className=\"toolbar-button\"\n                    onClick={toggleSortModal}>\n                    Sort Tasks</button>\n                {showSortMenu &&\n                <SortMenu className=\"toolbar-button\"\n                          sortOption={props.sortOption}\n                          onClose={toggleSortModal}\n                          onSortByName={handleSortByName}\n                          onSortByPriority={handleSortByPriority}\n                          onSortByCreationDate={handleSortByCreationDate}>\n                    <div className=\"sort-modal-message\">\n                        Tasks are currently sorted by <b>{describeSortOption()}</b>.\n                        <br/>\n                        Sort by:\n                    </div>\n                </SortMenu>}\n                <button\n                    className=\"toolbar-button\"\n                    id=\"hide-button\"\n                    onClick={() => {toggleShowCompleted()}}>\n                    {props.showCompleted ? \"Hide Completed\" : \"Show All\"}\n                </button>\n                <button\n                    className=\"toolbar-button\"\n                    // only make button fully visible and support functionality if there are completed tasks\n                    id={props.numCompleted !== 0 ? null : \"delete-completed-button-hidden\"}\n                    onClick={props.numCompleted !== 0 ? toggleModal : null}>\n                    Delete Completed</button>\n            </div>\n            {showAlert && <Alert onClose={toggleModal} onOK={handleAlertOK}>\n                <div>\n                    Are you sure you want to delete all {props.numCompleted} completed tasks?\n                </div>\n            </Alert>}\n        </div>\n    );\n}\n\nexport default ToolBar;","import './App.css';\nimport './index.js';\nimport ToDoList from \"./components/ToDoList\"\nimport AddTask from \"./components/AddTask\"\nimport ToolBar from \"./components/ToolBar\"\nimport React, {useState} from \"react\";\n\nfunction App(props) {\n    const[showCompleted, setShowCompleted] = useState(true);\n    const filteredList = props.taskList.filter(task => showCompleted || !task.isCompleted);\n    const numCompleted = props.taskList.filter(task => task.isCompleted).length;\n\n    return (\n        <div id=\"app-container\">\n            <div className=\"heading\">\n                <h1>Task Manager</h1>\n            </div>\n            <div className=\"topButtonBar\">\n                <div className=\"add-task\">\n                <AddTask\n                    taskList={filteredList}\n                    onSetTaskList={props.setTaskList}\n                    onAddTask={props.handleAddTask}\n                />\n                </div>\n            </div>\n            <div className=\"taskList\">\n                <ToDoList\n                    taskList={filteredList}\n                    onDeleteTask={props.handleDeleteTask}\n                    onChangePriority={props.handleChangePriority}\n                    onDeleteTasks={props.handleDeleteTasks}\n                    onTaskFieldChanged={props.handleTaskFieldChanged}\n                    numCompleted={numCompleted}\n                />\n            </div>\n            <div className=\"bottomBar\">\n                <ToolBar\n                    onDeleteTasks={props.handleDeleteTasks}\n                    showCompleted={showCompleted}\n                    onSetShowCompleted={setShowCompleted}\n                    numCompleted={numCompleted}\n                    onSortSelected={props.handleSortSelected}\n                    sortOption={props.sortOption}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React, {useState} from \"react\";\nimport App from \"./App\"\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n// Firebase initialization config provided from lab docs\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n    authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n    projectId: \"hmc-cs124-fa21-labs\",\n    storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n    messagingSenderId: \"949410042946\",\n    appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\n\nfunction FirestoreApp(props) {\n    // FirestoreApp collection\n    const collectionName = \"em-zhang-tasks-v4\"\n    let query = db.collection(collectionName);\n\n    const [sortOption, setSortOption] = useState(null);\n    if (sortOption){\n        // sort in descending order by priority\n        if (sortOption === \"priority\"){\n            query = query.orderBy(sortOption, \"desc\");\n        } else {\n            query = query.orderBy(sortOption);\n        }\n    }\n    const [value, loading, error] = useCollection(query); // You can change the const used here\n\n    // const taskList = value ? value.docs.map(doc => doc.data()) : [];\n    let taskList = [];\n    if (value) {\n        taskList = value.docs.map((doc) => {\n            return {...doc.data()}\n        });\n    }\n\n    // adds a task, generating new id each time\n    function handleAddTask(currTask) {\n        const newId = generateUniqueID();\n        console.log(\"adding new task, task ID is \", newId);\n        db.collection(collectionName).doc(newId).set({\n            taskId: newId,\n            taskLabel: currTask,\n            isCompleted: false,\n            priority: 1,\n            dateCreated: firebase.database.ServerValue.TIMESTAMP\n        });\n        return newId;\n    }\n\n    // handles updating any field of a task\n    function handleTaskFieldChanged(taskId, field, value) {\n        const doc = db.collection(collectionName).doc(taskId);\n        doc.update({\n            [field]: value,\n        })\n    }\n\n    function handleDeleteTask(taskID) {\n        console.log(\"deleting task, task ID is \", taskID);\n        db.collection(collectionName).doc(taskID).delete();\n    }\n\n    function handleChangePriority(taskID, taskPriority) {\n        let docRef = db.collection(collectionName).doc(taskID);\n        if (taskPriority === 1) {\n            docRef.update({\n                priority: 2\n            })\n        } else if (taskPriority === 2) {\n            docRef.update({\n                priority: 3\n            })\n        } else if (taskPriority === 3) {\n            docRef.update({\n                priority: 1\n            })\n        }\n    }\n\n\n    function handleDeleteTasks() {\n        let delete_query = db.collection(collectionName).where('isCompleted', '==', true);\n        delete_query.get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n                doc.ref.delete();\n            });\n        });\n    }\n\n    function handleSortSelected(option){\n        setSortOption(option);\n    }\n\n    return <div>\n        <App\n            taskList={taskList}\n            handleDeleteTask={handleDeleteTask}\n            handleChangePriority={handleChangePriority}\n            handleDeleteTasks={handleDeleteTasks}\n            handleAddTask={handleAddTask}\n            handleTaskFieldChanged={handleTaskFieldChanged}\n            handleSortSelected={handleSortSelected}\n            sortOption={sortOption}/>\n\n        />\n    </div>\n}\n\nexport default FirestoreApp;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import InMemoryApp from './InMemoryApp';\nimport FirestoreApp from \"./FirestoreApp\";\n\nconst initialData = [\n    {\n        taskId: 0,\n        taskLabel: \"Get lunch at dining hall\",\n        isCompleted: true\n    },\n    {\n        taskId: 1,\n        taskLabel: \"Buy textbooks\",\n        isCompleted: false\n    },\n    {\n        taskId: 2,\n        taskLabel: \"Watch videos about React\",\n        isCompleted: true\n    },\n    {\n        taskId: 3,\n        taskLabel: \"Call Mom\",\n        isCompleted: false\n    },\n    {\n        taskId: 4,\n        taskLabel: \"Meet with Prof. Rhodes\",\n        isCompleted: false\n    },\n];\n\nReactDOM.render(\n  <React.StrictMode>\n      <FirestoreApp initialData={initialData}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}