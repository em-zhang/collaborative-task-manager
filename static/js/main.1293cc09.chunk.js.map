{"version":3,"sources":["components/SelectionMaintainingInput.js","components/ListView/ListItem.js","components/ListView/ListMenu.js","components/ListView/AddList.js","components/TaskView/Task.js","components/TaskView/ToDoList.js","components/TaskView/AddTask.js","components/TaskView/Alert.js","components/TaskView/SortMenu.js","components/TaskView/ToolBar.js","App.js","components/SignIn.js","components/SignUp.js","components/Tab.js","components/TabList.js","components/AuthPage.js","LoadingSymbol.gif","InMemoryApp.js","index.js"],"names":["SelectionMaintainingInput","props","value","onChange","rest","useState","cursor","setCursor","ref","useRef","useEffect","input","current","setSelectionRange","e","target","selectionStart","ListItem","className","id","listName","onListFieldChanged","listID","onKeyPress","key","preventDefault","document","getElementById","blur","onClick","onListSelected","showHomepage","focus","onDeleteList","ListMenu","listData","map","list","currListID","currListName","homepage","AddTask","currList","setCurrList","placeholder","onAddList","tabIndex","Task","taskLabel","itemName","setItemName","type","checked","isCompleted","onTaskFieldChanged","taskId","onBlur","disabled","priority","onChangePriority","repeat","onDeleteTask","ToDoList","taskList","task","AddList","currTask","setCurrTask","onAddTask","hasFocus","console","log","Alert","children","onOK","onClose","onKeyDown","keyCode","SortMenu","onSortByCreationDate","sortOption","onSortByName","onSortByPriority","ToolBar","showAlert","setShowAlert","showSortMenu","setShowSortMenu","toggleModal","toggleSortModal","onSortSelected","showCompleted","onSetShowCompleted","numCompleted","onDeleteTasks","App","setShowCompleted","filteredList","filter","length","handleAddList","handleListSelected","handleDeleteList","handleListFieldChanged","onSetTaskList","setTaskList","handleAddTask","handleDeleteTask","handleChangePriority","handleDeleteTasks","handleTaskFieldChanged","handleSortSelected","googleProvider","firebase","auth","GoogleAuthProvider","githubProvider","GithubAuthProvider","SignIn","email","setEmail","password","setPassword","useSignInWithEmailAndPassword","signInWithEmailAndPassword","loading","error","onSubmit","message","signInWithPopup","src","SignUp","retypePassword","setRetypePassword","passwordMatchError","setPasswordMatchError","useCreateUserWithEmailAndPassword","createUserWithEmailAndPassword","Tab","classNames","activeTab","label","push","join","onClickTab","TabList","setActiveTab","child","find","AuthPage","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","collectionName","SignedInApp","queryAll","collection","where","user","uid","useCollection","all_value","listIDs","docs","doc","data","currentList","setCurrentList","query","setSortOption","orderBy","currentListName","newList","newId","generateUniqueID","set","delete","field","update","taskID","catch","taskPriority","docRef","get","then","querySnapshot","forEach","dateCreated","database","ServerValue","TIMESTAMP","owner","option","loadingSymbol","alt","InMemoryApp","useAuthState","displayName","signOut","emailVerified","currentUser","sendEmailVerification","ReactDOM","render","StrictMode","initialData"],"mappings":"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","file":"static/js/main.1293cc09.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nfunction SelectionMaintainingInput(props) {\n    const { value, onChange, ...rest } = props;\n    const [cursor, setCursor] = useState(null);\n    const ref = useRef(null);\n\n    useEffect(() => {\n        const input = ref.current;\n        if (input) input.setSelectionRange(cursor, cursor);\n    }, [ref, cursor, value]);\n\n    const handleChange = (e) => {\n        setCursor(e.target.selectionStart);\n        onChange && onChange(e);\n    };\n\n    return <TextareaAutosize ref={ref} value={value} onChange={handleChange} {...rest} />;\n}\n\nexport default SelectionMaintainingInput;","import './ListItem.css';\nimport SelectionMaintainingInput from \"../SelectionMaintainingInput\";\n\nfunction ListItem(props) {\n    return (\n        <div className=\"list-item-container\">\n            <SelectionMaintainingInput\n                id=\"list-item-label\"\n                value={props.listName}\n                onChange={(e) => {\n                    props.onListFieldChanged(props.listID, \"listName\", e.target.value)\n                }}\n                onKeyPress={e => {\n                    if (e.key === \"Enter\") {\n                        e.preventDefault();\n                        if(document.getElementById('list-item-label')){\n                            document.getElementById('list-item-label').blur();\n                        }\n                    }\n                }}\n            />\n            <div className=\"button-container\">\n                <button className=\"view-list-button\"\n                        onClick={() => {\n                            props.onListSelected(props.listID);\n                            props.showHomepage(false);\n                            if(document.getElementById(\"home-button\")){\n                                document.getElementById(\"home-button\").focus();\n                            }\n\n                        }}>\n                    View\n                </button>\n            </div>\n            <div>\n            <button\n                aria-label=\"Delete list button\"\n                className=\"delete-list-button\"\n                    onClick={() => {\n                        props.onDeleteList(props.listID);\n                    }}>\n                X\n            </button>\n            </div>\n        </div>\n    )\n}\n\nexport default ListItem;","import React from 'react';\nimport ListItem from './ListItem'\nimport './ListMenu.css';\n\nfunction ListMenu(props) {\n    return (\n        <div id=\"list-container\">\n            <div className=\"checklist\">\n                {props.listData.map(list =>\n                    <ListItem\n                        listID={list.id}\n                        listName={list.listName}\n                        currListID={props.currListID}\n                        currListName={props.currListName}\n                        onListSelected={props.onListSelected}\n                        homepage={props.homepage}\n                        showHomepage={props.showHomepage}\n                        onDeleteList={props.onDeleteList}\n                        onListFieldChanged={props.onListFieldChanged}\n                    />)}\n            </div>\n        </div>);\n}\n\nexport default ListMenu;","import './AddList.css';\nimport {useState} from \"react\";\n\nfunction AddTask(props){\n    const [currList, setCurrList] = useState(\"\");\n\n    return (\n        <div className=\"add-task-container\">\n            <input\n                className=\"todo-input\"\n                id=\"new-todo-text\"\n                placeholder=\"Create a new list\"\n                value={currList}\n                onChange={e => {\n                    setCurrList(e.target.value);\n                }}\n                onKeyPress={e => {\n                    if (currList !== \"\") {\n                        if (e.key === \"Enter\") {\n                            props.onAddList(currList);\n                            setCurrList(\"\");\n                        }\n                    }\n                }}\n            />\n            <button id={currList !== \"\" ? \"list-add-button\" : \"list-add-button-disabled\"}\n                    tabIndex = {currList !== \"\" ? 0 : 1}\n                    onClick={() => {\n                        if (currList !== \"\") {\n                            props.onAddList(currList);\n                            setCurrList(\"\");\n                        }\n                    }}>\n                Add\n            </button>\n        </div>\n    );\n}\n\nexport default AddTask;","import TextareaAutosize from 'react-textarea-autosize';\nimport {useState} from 'react';\nimport './Task.css';\n\nfunction Task(props) {\n    const [itemName, setItemName] = useState(props.taskLabel);\n\n    return (\n        <div className=\"task-container\">\n            <input type=\"checkbox\"\n                   className=\"checkbox\"\n                   checked={props.isCompleted}\n                   onChange={(e) => {\n                       props.onTaskFieldChanged(props.taskId, \"isCompleted\", e.target.checked)\n                   }}\n\n                   onKeyPress={e => {\n                       if (e.key === \"Enter\") {\n                           props.onTaskFieldChanged(props.taskId, \"isCompleted\", !props.isCompleted)\n                       }\n                   }}\n            />\n            <TextareaAutosize\n                id= {!props.isCompleted ? \"task-label\" : \"task-label-strikethrough\"}\n                value={itemName}\n                onChange={(e) => setItemName(e.target.value)}\n                onBlur={(e) =>\n                    props.onTaskFieldChanged(props.taskId, \"taskLabel\", itemName)\n                }\n                onKeyPress={e => {\n                    if (e.key === \"Enter\") {\n                        if (document.getElementById('task-label')){\n                            e.preventDefault();\n                            document.getElementById('task-label').blur();\n                        }\n                    }\n                }}\n                // don't allow user to edit a task if it's been marked completed\n                disabled={props.isCompleted}\n            />\n            <div className=\"button-container\">\n                <button className=\"priority-button\"\n                        id={props.priority === 3 ? \"high\" : props.priority === 2 ? \"medium\" : \"low\"}\n                        aria-label= {(props.priority === 3 ? \"high\" : props.priority === 2 ? \"medium\" : \"low\") + \" priority\"}\n                        onClick={() => {\n                            props.onChangePriority(props.taskId, props.priority);\n                        }}>\n                    {\"!\".repeat(props.priority)}\n                </button>\n            </div>\n            <div>\n                <button\n                    className=\"delete-list-button\"\n                    aria-label=\"delete\"\n                        onClick={() => {\n                            props.onDeleteTask(props.taskId);\n                        }}>\n                    X\n                </button>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Task;","import React from 'react';\nimport Task from \"./Task\";\nimport './ToDoList.css';\n\nfunction ToDoList(props) {\n    return (\n        <div id=\"list-container\">\n            <div className=\"checklist\">\n                {props.taskList.map(task =>\n                    <Task {...task}\n                          key={task.taskId}\n                          onDeleteTask={props.onDeleteTask}\n                          onTaskFieldChanged={props.onTaskFieldChanged}\n                          onChangePriority={props.onChangePriority}\n                    />)}\n            </div>\n        </div>);\n}\n\nexport default ToDoList;","import './AddTask.css';\nimport {useState} from \"react\";\n\nfunction AddList(props){\n    const [currTask, setCurrTask] = useState(\"\");\n\n    return (\n        <div className=\"add-task-container\">\n            <input\n                className=\"todo-input\"\n                id=\"new-todo-text\"\n                placeholder=\"Create a new task\"\n                value={currTask}\n                onChange={e => {\n                    setCurrTask(e.target.value);\n                }}\n                onKeyPress={e => {\n                    if (currTask !== \"\") {\n                        if (e.key === \"Enter\") {\n                            props.onAddTask(currTask);\n                            setCurrTask(\"\");\n                        }\n                    }\n                }}\n            />\n            <button className={currTask !== \"\" ? \"add-button\" : \"add-button-disabled\"}\n                    tabIndex = {currTask !== \"\" ? 0 : 1}\n                    onClick={() => {\n                        if (currTask !== \"\") {\n                            props.onAddTask(currTask);\n                            setCurrTask(\"\");\n                        }\n                    }}>\n                Add\n            </button>\n        </div>\n    );\n}\n\nexport default AddList;","import './Alert.css';\n\nif ((document.getElementById('alert-cancel') && document.getElementById('alert-cancel').hasFocus())) {\n    console.log(\"on cancel\");\n}\n\nfunction Alert(props) {\n    return (\n        <div className={\"backdrop\"}>\n            <div id=\"modal\">\n                {props.children}\n                <div className=\"alert-buttons\">\n                    <button id=\"alert-ok\"\n                            onClick={() => {\n                                props.onOK();\n                                props.onClose();\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-cancel\").focus();\n                                }\n                            }}\n                    >\n                        OK\n                    </button>\n\n                    <button tabIndex=\"0\"\n                            className=\"alert-button\"\n                            id=\"alert-cancel\"\n                            onClick={() => props.onClose()}\n                            onKeyDown={e => {\n                                if(e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-ok\").focus();\n                                }\n                            }}\n                    >\n                        Cancel\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Alert;","import './SortMenu.css';\n\nfunction SortMenu(props) {\n    return (\n        <div className=\"sort-backdrop\">\n            <div className=\"sort-modal\">\n                {props.children}\n                <div className=\"sort-buttons\">\n                    <div id=\"sort-by\">\n                        Sort by:\n                    </div>\n                    <button className={\"alert-button\"} id={\"alert-sort-date\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByCreationDate();\n                                props.onClose()\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-sort-name\").focus();\n                                }\n                            }}\n                    >\n                        {props.sortOption === \"dateCreated\" ? \"✓ Date Created\" : \"Date Created\"}\n                    </button>\n                    <button className={\"alert-button\"} id={\"alert-sort-name\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByName();\n                                props.onClose()\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-sort-priority\").focus();\n                                }\n                            }}\n                    >\n                        {props.sortOption === \"taskLabel\" ? \"✓ Name\" : \"Name\"}\n                    </button>\n                    <button className={\"alert-button\"} id={\"alert-sort-priority\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByPriority();\n                                props.onClose()\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-sort-date\").focus();\n                                }\n                            }}\n                    >\n                        {props.sortOption === \"priority\" ? \"✓ Priority\" : \"Priority\"}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SortMenu;","import Alert from \"./Alert\"\nimport SortMenu from \"./SortMenu\"\nimport React, {useState} from \"react\";\nimport './ToolBar.css';\n\nfunction ToolBar(props) {\n    const [showAlert, setShowAlert] = useState(false);\n    const [showSortMenu, setShowSortMenu] = useState(false);\n\n    function handleSortByName() {\n        props.onSortSelected(\"taskLabel\");\n    }\n\n    function handleSortByPriority() {\n        props.onSortSelected(\"priority\");\n    }\n\n    function handleSortByCreationDate() {\n        props.onSortSelected(\"dateCreated\");\n    }\n\n    function handleAlertOK() {\n        props.onDeleteTasks();\n    }\n\n    function toggleModal() {\n        setShowAlert(!showAlert)\n    }\n\n    function toggleSortModal() {\n        setShowSortMenu(!showSortMenu)\n    }\n\n    function toggleShowCompleted() {\n        props.showCompleted ? props.onSetShowCompleted(false) : props.onSetShowCompleted(true)\n    }\n\n    return (\n        <div>\n            <div className=\"toolbar\">\n                <button\n                    id=\"sort-button\"\n                    className=\"toolbar-button\"\n                    onClick={toggleSortModal}>\n                    <i id=\"sort-icon\" className=\"las la-sort-amount-down\"></i>\n                    <br/>\n                    Sort\n                </button>\n                {showSortMenu &&\n                <SortMenu className=\"toolbar-button\"\n                          sortOption={props.sortOption}\n                          onClose={toggleSortModal}\n                          onSortByName={handleSortByName}\n                          onSortByPriority={handleSortByPriority}\n                          onSortByCreationDate={handleSortByCreationDate}>\n                </SortMenu>}\n                <button\n                    className=\"toolbar-button\"\n                    id=\"hide-button\"\n                    onClick={() => {toggleShowCompleted()}}>\n                    <i id=\"hide-icon\"\n                       className={props.showCompleted ? \"las la-eye-slash\": \"las la-eye\"}>\n                    </i>\n                    <br/>\n                    {props.showCompleted ? \"Hide Completed\" : \"Show All\"}\n                </button>\n                <button\n                    className=\"toolbar-button\"\n                    id={props.numCompleted !== 0 ? \"delete-button\" : \"delete-completed-button-hidden\"}\n                    disabled={props.numCompleted === 0}\n                    onClick={toggleModal}\n                    >\n                    <i id=\"delete-icon\" className=\"las la-trash\">\n                    </i>\n                    <br/>\n                    Delete Completed\n                </button>\n            </div>\n            {showAlert && <Alert onClose={toggleModal} onOK={handleAlertOK}>\n                <div>\n                    Are you sure you want to delete all {props.numCompleted} completed tasks?\n                </div>\n            </Alert>}\n        </div>\n    );\n}\n\nexport default ToolBar;","import './App.css';\nimport './index.js';\nimport ListMenu from \"./components/ListView/ListMenu\"\nimport AddList from \"./components/ListView/AddList\"\n\nimport ToDoList from \"./components/TaskView/ToDoList\"\nimport AddTask from \"./components/TaskView/AddTask\"\nimport ToolBar from \"./components/TaskView/ToolBar\"\nimport React, {useState} from \"react\";\n\nfunction App(props) {\n    const[showCompleted, setShowCompleted] = useState(true);\n    const filteredList = props.taskList.filter(task => showCompleted || !task.isCompleted);\n    const numCompleted = props.taskList.filter(task => task.isCompleted).length;\n    const[homepage, showHomepage] = useState(true);\n\n    return (\n        homepage\n            ?\n            <div className=\"app-container\">\n                <div className=\"heading\">\n                    <h1>\n                        <div\n                            aria-label=\"Task Manager\"\n                            className=\"title\">\n                            Task Manager\n                        </div>\n                    </h1>\n                    <div className=\"header\">\n                        <h2>All Lists</h2>\n                    </div>\n                </div>\n                <div className=\"top-button-bar\">\n                    <div className=\"add-task\">\n                        <AddList\n                            onAddList={props.handleAddList}\n                            onListSelected={props.handleListSelected}\n                        />\n                    </div>\n                </div>\n                <div className=\"taskList\">\n                    <ListMenu\n                        listData={props.listData}\n                        currListID={props.currListID}\n                        currListName={props.currListName}\n                        onListSelected={props.handleListSelected}\n                        showHomepage={showHomepage}\n                        onDeleteList={props.handleDeleteList}\n                        onListFieldChanged={props.handleListFieldChanged}\n                    />\n                </div>\n            </div>\n            :\n            <div className=\"app-container\">\n                <div className=\"heading\">\n                    <h1>\n                        <button id=\"home-button\"\n                                aria-label=\"Home Button\"\n                                onClick={() => {\n                                    showHomepage(true);\n                                }}>\n                            <i className=\"las la-angle-left\">\n                            </i>\n                        </button>\n                        <div className=\"title\">\n                             Task Manager\n                        </div>\n                    </h1>\n                    <div>\n                        <h2>{props.currListName}</h2>\n                    </div>\n                </div>\n                <div className=\"top-button-bar\">\n                    <div className=\"add-task\">\n                        <AddTask\n                            taskList={filteredList}\n                            onSetTaskList={props.setTaskList}\n                            onAddTask={props.handleAddTask}\n                        />\n                    </div>\n                </div>\n                <div className=\"taskList\">\n                    <ToDoList\n                        taskList={filteredList}\n                        onDeleteTask={props.handleDeleteTask}\n                        onChangePriority={props.handleChangePriority}\n                        onDeleteTasks={props.handleDeleteTasks}\n                        onTaskFieldChanged={props.handleTaskFieldChanged}\n                        numCompleted={numCompleted}\n                    />\n                </div>\n                <div className=\"bottomBar\">\n                    <ToolBar\n                        onDeleteTasks={props.handleDeleteTasks}\n                        showCompleted={showCompleted}\n                        onSetShowCompleted={setShowCompleted}\n                        numCompleted={numCompleted}\n                        onSortSelected={props.handleSortSelected}\n                        sortOption={props.sortOption}\n                    />\n                </div>\n            </div>\n        );\n    }\n\nexport default App;\n","import firebase from \"firebase/compat\";\nimport { useState } from \"react\";\nimport { useSignInWithEmailAndPassword } from \"react-firebase-hooks/auth\";\nimport \"./SignIn.css\"\n\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\nconst githubProvider = new firebase.auth.GithubAuthProvider();\n\n\nfunction SignIn(props) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [signInWithEmailAndPassword, loading, error] = useSignInWithEmailAndPassword(props.auth);\n\n    return (\n        <div>\n            <form onSubmit={(e) => e.preventDefault()}>\n                <input\n                    className=\"signin-input\"\n                    type=\"email\"\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                    placeholder=\"email\"\n                />\n                <input\n                    className=\"signin-input\"\n                    type=\"password\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                    placeholder=\"password\"\n                />\n                <button\n                    type=\"submit\"\n                    onClick={() => signInWithEmailAndPassword(email, password)}\n                    className=\"signin-button\">\n                    Sign In\n                </button>\n            </form>\n            {!loading && error && \"An error occurred. Please check your credentials\" && error.message}\n            <div className=\"signin-google\">\n                <button\n                    className=\"google-button\"\n                    onClick={() => props.auth.signInWithPopup(googleProvider)}>\n                    <img\n                        className=\"google-logo\"\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/800px-Google_%22G%22_Logo.svg.png\"\n                    />\n                    Sign In with Google\n                </button>\n            </div>\n            <div className=\"signin-google\">\n                <button\n                    className=\"google-button\"\n                    onClick={() => props.auth.signInWithPopup(githubProvider)}>\n                    <img\n                        className=\"google-logo\"\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/9/91/Octicons-mark-github.svg\"\n                    />\n                    Sign In with Github\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default SignIn;","import { useState } from \"react\"\nimport { useCreateUserWithEmailAndPassword } from \"react-firebase-hooks/auth\";\n\nfunction SignUp(props) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [retypePassword, setRetypePassword] = useState(\"\");\n    const [passwordMatchError, setPasswordMatchError] = useState(false);\n\n    const [createUserWithEmailAndPassword, loading, error] = useCreateUserWithEmailAndPassword(props.auth);\n    const FAKE_EMAIL = 'foo@bar.com';\n    const FAKE_PASSWORD = 'foobar';\n\n    const createNewUser = () => {\n        if (password !== retypePassword) {\n            setPasswordMatchError(true);\n            console.log(\"passwords dont match\");\n        }\n        else {\n            setPasswordMatchError(false);\n            console.log(\"creating user with email/password \", email, password);\n            createUserWithEmailAndPassword(email, password);\n        }\n    }\n\n    return (\n        <div>\n            <form\n                onSubmit={(e) => e.preventDefault()}>\n                <input\n                    className=\"signin-input\"\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                    placeholder=\"email\"\n                    type=\"email\"\n                />\n                <input\n                    className=\"signin-input\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                    placeholder=\"password\"\n                    type=\"password\"\n                />\n                <input\n                    value={retypePassword}\n                    onChange={e => setRetypePassword(e.target.value)}\n                    placeholder=\"retype password\"\n                    type=\"password\"\n                    className=\"signin-input\"\n                />\n                <button\n                    className=\"signin-button\"\n                    onClick={() => createNewUser()}>\n                    Sign Up\n                </button>\n                <button\n                    onClick={() => createUserWithEmailAndPassword(FAKE_EMAIL, FAKE_PASSWORD)}>\n                    Create test user\n                </button>\n            </form>\n            {!loading && (error || passwordMatchError) &&\n            <div className=\"error-message\">\n                {passwordMatchError ? \"Passwords do not match.\"\n                    : password.length < 6 ? \"Password must be at least 6 characters.\"\n                        : email.length === 0 ? \"Please enter a valid email address.\"\n                        : \"An error occurred while signing up. \" +\n                            \"Make sure you have entered a valid email and password.\"}\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default SignUp;","import './Tab.css';\n\nfunction Tab(props) {\n    const classNames = [\"tab-list-item\"];\n    if (props.activeTab === props.label) {\n        classNames.push(\"tab-list-active\");\n    }\n    return <li className={classNames.join(\" \")}\n               onClick={() => props.onClickTab(props.label)}>\n        {props.label}\n    </li>\n}\n\nexport default Tab;","import React, {useState} from 'react';\nimport Tab from './Tab.js'\nimport \"./TabList.css\"\n\nfunction TabList(props) {\n    const [activeTab, setActiveTab] = useState(props.children[0].key);\n    return (\n        <div className=\"tabs\">\n            <ol className=\"tab-list\">\n                {props.children.map(child =>\n                    <Tab key={child.key}\n                         label={child.key}\n                         activeTab={activeTab}\n                         onClickTab={(label) => setActiveTab(label)}/>)}\n            </ol>\n            {props.children.find((child) => child.key === activeTab)}\n        </div>\n    );\n}\n\nexport default TabList;","import { useState } from \"react\";\nimport firebase from \"firebase/compat\";\nimport SignIn from \"./SignIn.js\"\nimport SignUp from \"./SignUp\"\nimport { useSignInWithEmailAndPassword } from \"react-firebase-hooks/auth\";\nimport \"./SignIn.css\";\nimport TabList from \"./TabList\";\n\nfunction AuthPage(props) {\n    return (\n        <div className=\"app-container\">\n            <div className=\"heading\">\n                <h1>\n                    <div\n                        aria-label=\"Task Manager\"\n                        className=\"title\">\n                        Task Manager\n                    </div>\n                </h1>\n                <div className=\"header\">\n                    <TabList className=\"tabs\">\n                        <SignIn\n                            key=\"Sign In\"\n                            auth={props.auth}\n                        />\n                        <SignUp\n                            key=\"Sign Up\"\n                            auth={props.auth}\n                        />\n                    </TabList>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\n//     const [\n//         signInWithEmailAndPassword,\n//         userCredential, loading, error\n//     ] = useSignInWithEmailAndPassword(props.auth);\n//\n//     if (userCredential) {\n//         // Shouldn't happen because App should see that\n//         // we are signed in.\n//         return <div>Unexpectedly signed in already</div>\n//     } else if (loading) {\n//         return <p>Logging in…</p>\n//     }\n//     return <div>\n//         {error && <p>\"Error logging in: \" {error.message}</p>}\n//         <button onClick={() =>\n//             signInWithEmailAndPassword(FAKE_EMAIL, FAKE_PASSWORD)}>Login with test user Email/PW\n//         </button>\n//         <button onClick={() =>\n//             props.auth.signInWithPopup(googleProvider)}>Login with Google\n//         </button>\n//     </div>\n// }\n//\n// function SignUp(props) {\n//     const [\n//         createUserWithEmailAndPassword,\n//         userCredential, loading, error\n//     ] = useCreateUserWithEmailAndPassword(props.auth);\n//\n//     if (userCredential) {\n//         // Shouldn't happen because App should see that\n//         // we are signed in.\n//         return <div>Unexpectedly signed in already</div>\n//     } else if (loading) {\n//         return <p>Signing up…</p>\n//     }\n//     return <div>\n//         {error && <p>\"Error signing up: \" {error.message}</p>}\n//         <button onClick={() =>\n//             createUserWithEmailAndPassword(FAKE_EMAIL, FAKE_PASSWORD)}>\n//             Create test user\n//         </button>\n//     </div>\n// }\n//\nexport default AuthPage;","export default __webpack_public_path__ + \"static/media/LoadingSymbol.e9f28dc7.gif\";","import React, {useState} from \"react\";\nimport App from './App';\nimport AuthPage from \"./components/AuthPage\";\nimport loadingSymbol from '../src/LoadingSymbol.gif'\n\n// Import the functions you need from the SDKs you need\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport {  useCollection } from \"react-firebase-hooks/firestore\";\nimport {\n    useAuthState,\n    useCreateUserWithEmailAndPassword,\n    useSignInWithEmailAndPassword\n} from 'react-firebase-hooks/auth';\nimport AddList from \"./components/ListView/AddList\";\nimport ListMenu from \"./components/ListView/ListMenu\";\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDQNFNc9MOCJM7dDkmRmHeJu2-vx_XdZPI\",\n    authDomain: \"em-zhang-cs124-lab.firebaseapp.com\",\n    projectId: \"em-zhang-cs124-lab\",\n    storageBucket: \"em-zhang-cs124-lab.appspot.com\",\n    messagingSenderId: \"791807570724\",\n    appId: \"1:791807570724:web:8c92b693e902d7077ab9b1\",\n    measurementId: \"G-2CLJDP4NEV\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\nfunction InMemoryApp(props) {\n    const [user, loading, error] = useAuthState(auth);\n\n    function verifyEmail() {\n        auth.currentUser.sendEmailVerification();\n    }\n\n    if (loading) {\n        return <p>Checking...</p>;\n    } else if (user) {\n        return <div>\n            {user.displayName || user.email}\n            <SignedInApp {...props} user={user}/>\n            <button type=\"button\" onClick={() => auth.signOut()}>Logout</button>\n            {!user.emailVerified && <button type=\"button\" onClick={verifyEmail}>Verify email</button>}\n        </div>\n    } else {\n        return <>\n            {error && <p>Error App: {error.message}</p>}\n            <AuthPage auth={auth}/>\n        </>\n    }\n}\n\nconst collectionName = \"TaskManager\"\n\nfunction SignedInApp(props) {\n    let queryAll = db.collection(collectionName).where('owner', \"==\", props.user.uid);\n    const [all_value] = useCollection(queryAll);\n\n    let listIDs = [];\n    if (all_value) {\n        listIDs = all_value.docs.map((doc) => {\n            return {...doc.data()}});\n    }\n\n    // only get data from the current list\n    const [currentList, setCurrentList] = useState(\"default-list\");\n    let query = db.collection(collectionName).doc(currentList).collection(\"list-items\")\n        .where('owner', \"==\", props.user.uid);\n\n    // set the sort option to order the query\n    const [sortOption, setSortOption] = useState(\"dateCreated\");\n    query = query.orderBy(sortOption, sortOption === \"priority\" ? \"desc\" : \"asc\")\n\n    // return values of the task list\n    const [value, loading, error] = useCollection(query);\n    let taskList = [];\n    if (value) {\n        taskList = value.docs.map((doc) => {\n            return {...doc.data()}\n        });\n    }\n\n    // delete a task based on taskID\n    function handleDeleteTask(taskID) {\n        db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(taskID).delete()\n            .catch((error) => {\n                    console.error(\"Error deleting document: \", error);\n                });\n    }\n\n    // adds a task, generating new id each time\n    function handleAddTask(currTask) {\n        const newId = generateUniqueID();\n        db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(newId).set({\n            taskId: newId,\n            taskLabel: currTask,\n            isCompleted: false,\n            priority: 1,\n            dateCreated: firebase.database.ServerValue.TIMESTAMP,\n            owner: props.user.uid\n        }).catch((error) => {\n            console.error(\"Error writing document: \", error);\n        })\n        return newId;\n    }\n\n    // handles updating any field of a task\n    function handleTaskFieldChanged(taskId, field, value) {\n        const doc = db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(taskId);\n        doc.update({\n            [field]: value,\n        }).catch((error) => {\n            console.error(\"Error updating document: \", error);\n        })\n    }\n\n    // change a task's priority among 1/2/3\n    function handleChangePriority(taskID, taskPriority) {\n        let docRef = db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(taskID);\n        if (taskPriority === 1) {\n            docRef.update({\n                priority: 2\n            })\n        } else if (taskPriority === 2) {\n            docRef.update({\n                priority: 3\n            })\n        } else if (taskPriority === 3) {\n            docRef.update({\n                priority: 1\n            })\n        }\n    }\n\n    // delete completed tasks in a list\n    function handleDeleteTasks() {\n        let delete_query = db.collection(collectionName).doc(currentList).collection(\"list-items\").where('isCompleted', '==', true);\n        delete_query.get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n                doc.ref.delete();\n            });\n        });\n    }\n\n    // select a sort option\n    function handleSortSelected(option){\n        setSortOption(option);\n    }\n\n    // handles updating any field of a list\n    function handleListFieldChanged(listID, field, value) {\n        const doc = db.collection(collectionName).doc(listID);\n        doc.update({\n            [field]: value,\n        })\n    }\n\n    // add a new list\n    function handleAddList(newList){\n        const newId = generateUniqueID();\n        db.collection(collectionName).doc(newId).set({\n            id: newId,\n            listName: newList,\n        })\n        return newId;\n    }\n\n    // delete a list\n    function handleDeleteList(listID) {\n        db.collection(collectionName).doc(listID).delete();\n    }\n\n    // select and go into a list\n    function handleListSelected(list){\n        setCurrentList(list)\n    }\n\n    // determine what list name to display in the header of the app\n    let currentListName = \"\";\n    if (listIDs.length > 0){\n        // find the information of the current list that we are displaying\n        let currList = listIDs.filter((e) => e.id === currentList);\n        if (currList.length > 0) {\n            currentListName = listIDs.filter((e) => e.id === currentList)[0].listName;\n        }\n    }\n\n    return <div>\n        <App\n            listData={listIDs}\n            currListID={currentList}\n            currListName={currentListName}\n            handleAddList={handleAddList}\n            handleListSelected={handleListSelected}\n            handleDeleteList={handleDeleteList}\n            handleListFieldChanged={handleListFieldChanged}\n\n            taskList={taskList}\n            handleDeleteTask={handleDeleteTask}\n            handleChangePriority={handleChangePriority}\n            handleDeleteTasks={handleDeleteTasks}\n            handleAddTask={handleAddTask}\n            handleTaskFieldChanged={handleTaskFieldChanged}\n            handleSortSelected={handleSortSelected}\n            sortOption={sortOption}\n        />\n        {loading &&\n        <div className=\"loading-message\">\n            <img src={loadingSymbol} alt=\"Loading...\" />\n        </div>}\n    </div>\n}\n\nexport default InMemoryApp;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import InMemoryApp from './InMemoryApp';\nimport FirestoreApp from \"./InMemoryApp\";\n\nconst initialData = [\n    {\n        taskId: 0,\n        taskLabel: \"Get lunch at dining hall\",\n        isCompleted: true\n    },\n    {\n        taskId: 1,\n        taskLabel: \"Buy textbooks\",\n        isCompleted: false\n    },\n    {\n        taskId: 2,\n        taskLabel: \"Watch videos about React\",\n        isCompleted: true\n    },\n    {\n        taskId: 3,\n        taskLabel: \"Call Mom\",\n        isCompleted: false\n    },\n    {\n        taskId: 4,\n        taskLabel: \"Meet with Prof. Rhodes\",\n        isCompleted: false\n    },\n];\n\nReactDOM.render(\n  <React.StrictMode>\n      <FirestoreApp initialData={initialData}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}