{"version":3,"sources":["components/ListItem.js","components/ListMenu.js","components/AddList.js","components/Task.js","components/ToDoList.js","components/AddTask.js","components/Alert.js","components/SortMenu.js","components/ToolBar.js","App.js","FirestoreApp.js","index.js"],"names":["ListItem","props","className","id","value","listName","onChange","e","onListFieldChanged","listID","target","onKeyPress","key","document","getElementById","blur","onClick","onListSelected","showHomepage","onDeleteList","ListMenu","listData","map","list","currListID","currListName","homepage","AddTask","useState","currList","setCurrList","placeholder","onAddList","console","log","tabIndex","Task","type","checked","isCompleted","onTaskFieldChanged","taskId","taskLabel","disabled","priority","onChangePriority","repeat","onDeleteTask","ToDoList","taskList","task","AddList","currTask","setCurrTask","onAddTask","hasFocus","Alert","children","onOK","onClose","onKeyDown","keyCode","preventDefault","focus","SortMenu","onSortByCreationDate","sortOption","onSortByName","onSortByPriority","ToolBar","showAlert","setShowAlert","showSortMenu","setSortMenu","toggleModal","toggleSortModal","onSortSelected","sortOptionText","describeSortOption","showCompleted","onSetShowCompleted","numCompleted","onDeleteTasks","App","setShowCompleted","filteredList","filter","length","handleAddList","handleListSelected","handleDeleteList","handleListFieldChanged","onSetTaskList","setTaskList","handleAddTask","handleDeleteTask","handleChangePriority","handleDeleteTasks","handleTaskFieldChanged","handleSortSelected","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","FirestoreApp","collectionName","queryAll","collection","useCollection","all_value","listIDs","docs","doc","data","currentList","setCurrentList","query","setSortOption","orderBy","loading","currentListName","newList","newId","generateUniqueID","set","delete","field","update","taskID","taskPriority","docRef","where","get","then","querySnapshot","forEach","ref","dateCreated","database","ServerValue","TIMESTAMP","option","ReactDOM","render","StrictMode","initialData"],"mappings":"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","file":"static/js/main.d5cddd47.chunk.js","sourcesContent":["import TextareaAutosize from 'react-textarea-autosize';\nimport './ListItem.css';\n\nfunction ListItem(props) {\n    return (\n        <div className=\"list-item-container\">\n            <TextareaAutosize\n                id=\"list-item-label\"\n                value={props.listName}\n                onChange={(e) => {\n                    props.onListFieldChanged(props.listID, \"listName\", e.target.value)\n                }}\n                onKeyPress={e => {\n                    if (e.key === \"Enter\") {\n                        document.getElementById('list-item-label').blur();\n                    }\n                }}\n            />\n            <div>\n                <button className=\"view-list-button\"\n                        onClick={() => {\n                            props.onListSelected(props.listID);\n                            props.showHomepage(false);\n                        }}>\n                    View\n                </button>\n            </div>\n            <div>\n            <button\n                aria-label=\"Delete list button\"\n                className=\"delete-list-button\"\n                    onClick={() => {\n                        props.onDeleteList(props.listID);\n                    }}>\n                X\n            </button>\n            </div>\n        </div>\n    )\n}\n\nexport default ListItem;","import React from 'react';\nimport ListItem from './ListItem'\nimport './ListMenu.css';\n\nfunction ListMenu(props) {\n    return (\n        <div id=\"list-container\">\n            <div id=\"list-menu\">\n                {props.listData.map(list =>\n                    <ListItem\n                        listID={list.id}\n                        listName={list.listName}\n                        currListID={props.currListID}\n                        currListName={props.currListName}\n                        onListSelected={props.onListSelected}\n                        homepage={props.homepage}\n                        showHomepage={props.showHomepage}\n                        onDeleteList={props.onDeleteList}\n                        onListFieldChanged={props.onListFieldChanged}\n                    />)}\n            </div>\n        </div>);\n}\n\nexport default ListMenu;","import './AddList.css';\nimport {useState} from \"react\";\n\nfunction AddTask(props){\n    const [currList, setCurrList] = useState(\"\");\n\n    return (\n        <div>\n            <input\n                className=\"list-input\"\n                id=\"new-list-text\"\n                placeholder=\"Create a new list\"\n                value={currList}\n                onChange={e => {\n                    setCurrList(e.target.value);\n                }}\n                onKeyPress={e => {\n                    if (currList !== \"\") {\n                        if (e.key === \"Enter\") {\n                            props.onAddList(currList);\n                            console.log(\"adding new list with name \", currList)\n                            setCurrList(\"\");\n                        }\n                    }\n                }}\n            />\n            <button id={currList !== \"\" ? \"list-add-button\" : \"list-add-button-disabled\"}\n                    tabIndex = {currList != \"\" ? 0 : 1}\n                    onClick={() => {\n                        if (currList !== \"\") {\n                            props.onAddList(currList);\n                            setCurrList(\"\");\n                        }\n                    }}>\n                Add\n            </button>\n        </div>\n    );\n}\n\nexport default AddTask;","import TextareaAutosize from 'react-textarea-autosize';\nimport './Task.css';\nimport {useState} from \"react\";\n\nfunction Task(props) {\n    return (\n        <div className=\"task-container\">\n            <input type=\"checkbox\"\n                   className=\"checkbox\"\n                   checked={props.isCompleted}\n                   onChange={(e) => {\n                       props.onTaskFieldChanged(props.taskId, \"isCompleted\", e.target.checked)\n                   }}\n\n                   onKeyPress={e => {\n                       if (e.key === \"Enter\") {\n                           props.onTaskFieldChanged(props.taskId, \"isCompleted\", !props.isCompleted)\n                       }\n                   }}\n            />\n            <TextareaAutosize\n                id= {!props.isCompleted ? \"task-label\" : \"task-label-strikethrough\"}\n                value={props.taskLabel}\n                onChange={(e) => {\n                    props.onTaskFieldChanged(props.taskId, \"taskLabel\", e.target.value)\n                }}\n                onKeyPress={e => {\n                    if (e.key === \"Enter\") {\n                        document.getElementById('task-label').blur();\n                        document.getElementById('task-label-strikethrough').blur();\n                    }\n                }}\n                // don't allow user to edit a task if it's been marked completed\n                disabled={props.isCompleted}\n            />\n            <div className=\"priority-button-container\">\n                <button className=\"priority-button\"\n                        id={props.priority === 3 ? \"high\" : props.priority === 2 ? \"medium\" : \"low\"}\n                        onClick={() => {\n                            props.onChangePriority(props.taskId, props.priority);\n                        }}>\n                    {\"!\".repeat(props.priority)}\n                </button>\n            </div>\n            <div>\n                <button\n                    className=\"delete-button\"\n                        onClick={() => {\n                            props.onDeleteTask(props.taskId);\n                        }}>\n                    X\n                </button>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Task;","import React from 'react';\nimport Task from \"./Task\";\nimport './ToDoList.css';\n\nfunction ToDoList(props) {\n    return (\n        <div id=\"list-container\">\n            <div id=\"checklist\">\n                {props.taskList.map(task =>\n                    <Task {...task}\n                          key={task.taskId}\n                          onDeleteTask={props.onDeleteTask}\n                          onTaskFieldChanged={props.onTaskFieldChanged}\n                          onChangePriority={props.onChangePriority}\n                    />)}\n            </div>\n        </div>);\n}\n\nexport default ToDoList;","import './AddTask.css';\nimport {useState} from \"react\";\n\nfunction AddList(props){\n    const [currTask, setCurrTask] = useState(\"\");\n\n    return (\n        <div id=\"add-task-container\">\n            <input\n                className=\"todo-input\"\n                id=\"new-todo-text\"\n                placeholder=\"Create a new task\"\n                value={currTask}\n                onChange={e => {\n                    setCurrTask(e.target.value);\n                }}\n                onKeyPress={e => {\n                    if (currTask !== \"\") {\n                        if (e.key === \"Enter\") {\n                            props.onAddTask(currTask);\n                            setCurrTask(\"\");\n                        }\n                    }\n                }}\n            />\n            <button className={currTask !== \"\" ? \"add-button\" : \"add-button-disabled\"}\n                    onClick={() => {\n                        if (currTask !== \"\") {\n                            props.onAddTask(currTask);\n                            setCurrTask(\"\");\n                        }\n                    }}>\n                Add\n            </button>\n        </div>\n    );\n}\n\nexport default AddList;","import './Alert.css';\n\nif ((document.getElementById('alert-cancel') && document.getElementById('alert-cancel').hasFocus())) {\n    console.log(\"on cancel\");\n}\n\nfunction Alert(props) {\n    return (\n        <div className={\"backdrop\"}>\n            <div id=\"modal\">\n                {props.children}\n                <div className=\"alert-buttons\">\n                    <button id=\"alert-ok\"\n                            onClick={() => {\n                                props.onOK();\n                                props.onClose();\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-cancel\").focus();\n                                }\n                            }}\n                    >\n                        OK\n                    </button>\n\n                    <button tabIndex=\"0\"\n                            className=\"alert-button\"\n                            id=\"alert-cancel\"\n                            onClick={() => props.onClose()}\n                            onKeyDown={e => {\n                                if(e.keyCode == 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-ok\").focus();\n                                }\n                            }}\n                    >\n                        Cancel\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Alert;","import './SortMenu.css';\n\nfunction SortMenu(props) {\n    return (\n        <div className=\"sort-backdrop\">\n            <div className=\"sort-modal\">\n                {props.children}\n                <div className=\"alert-buttons\">\n                    <button className={\"alert-button\"} id={\"alert-sort-date\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByCreationDate();\n                                props.onClose()\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-sort-name\").focus();\n                                }\n                            }}\n                    >\n                        {props.sortOption === \"dateCreated\" ? \"✓ Date Created\" : \"Date Created\"}\n                    </button>\n                    <button className={\"alert-button\"} id={\"alert-sort-name\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByName();\n                                props.onClose()\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-sort-priority\").focus();\n                                }\n                            }}\n                    >\n                        {props.sortOption === \"taskLabel\" ? \"✓ Name\" : \"Name\"}\n                    </button>\n                    <button className={\"alert-button\"} id={\"alert-sort-priority\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByPriority();\n                                props.onClose()\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-sort-date\").focus();\n                                }\n                            }}\n                    >\n                        {props.sortOption === \"priority\" ? \"✓ Priority\" : \"Priority\"}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SortMenu;","import Alert from \"../components/Alert\"\nimport SortMenu from \"../components/SortMenu\"\nimport React, {useState} from \"react\";\nimport './ToolBar.css';\n\nfunction ToolBar(props) {\n    const [showAlert, setShowAlert] = useState(false);\n    const [showSortMenu, setSortMenu] = useState(false);\n\n    function handleSortByName() {\n        props.onSortSelected(\"taskLabel\");\n    }\n\n    function handleSortByPriority() {\n        props.onSortSelected(\"priority\");\n    }\n\n    function handleSortByCreationDate() {\n        props.onSortSelected(\"dateCreated\");\n    }\n\n    function describeSortOption() {\n        let sortOptionText = \"Date Created\";\n        if (props.sortOption === \"dateCreated\"){\n            sortOptionText = \"Date Created\";\n        }\n        else if (props.sortOption === \"priority\"){\n            sortOptionText = \"Priority\";\n        }\n        else if (props.sortOption === \"taskLabel\"){\n            sortOptionText = \"Name\";\n        }\n        return sortOptionText;\n    }\n\n    function handleAlertOK() {\n        props.onDeleteTasks();\n    }\n\n    function toggleModal() {\n        showAlert ? setShowAlert(false) : setShowAlert(true)\n    }\n\n    function toggleSortModal() {\n        showSortMenu ? setSortMenu(false) : setSortMenu(true)\n    }\n\n    function toggleShowCompleted() {\n        props.showCompleted ? props.onSetShowCompleted(false) : props.onSetShowCompleted(true)\n    }\n\n    return (\n        <div>\n            <div className=\"toolbar\">\n                <button\n                    id=\"sort-button\"\n                    className=\"toolbar-button\"\n                    onClick={toggleSortModal}>\n                    <i id=\"sort-icon\" className=\"las la-sort-amount-down\"></i>\n                    <br/>\n                    Sort\n                </button>\n                {showSortMenu &&\n                <SortMenu className=\"toolbar-button\"\n                          sortOption={props.sortOption}\n                          onClose={toggleSortModal}\n                          onSortByName={handleSortByName}\n                          onSortByPriority={handleSortByPriority}\n                          onSortByCreationDate={handleSortByCreationDate}>\n                    <div className=\"sort-modal-message\">\n                        Tasks are currently sorted by <b>{describeSortOption()}</b>.\n                        <br/>\n                        <br/>\n                        Sort by:\n                    </div>\n                </SortMenu>}\n                <button\n                    className=\"toolbar-button\"\n                    id=\"hide-button\"\n                    onClick={() => {toggleShowCompleted()}}>\n                    <i id=\"hide-icon\"\n                       className={props.showCompleted ? \"las la-eye-slash\": \"las la-eye\"}>\n                    </i>\n                    <br/>\n                    {props.showCompleted ? \"Hide Completed\" : \"Show All\"}\n                </button>\n                <button\n                    className=\"toolbar-button\"\n                    id={props.numCompleted !== 0 ? \"delete-button\" : \"delete-completed-button-hidden\"}\n                    disabled={props.numCompleted === 0}\n                    onClick={toggleModal}\n                    >\n                    <i id=\"delete-icon\" className=\"las la-trash\">\n                    </i>\n                    <br/>\n                    Delete Completed\n                </button>\n            </div>\n            {showAlert && <Alert onClose={toggleModal} onOK={handleAlertOK}>\n                <div>\n                    Are you sure you want to delete all {props.numCompleted} completed tasks?\n                </div>\n            </Alert>}\n        </div>\n    );\n}\n\nexport default ToolBar;","import './App.css';\nimport './index.js';\nimport ListMenu from \"./components/ListMenu\"\nimport AddList from \"./components/AddList\"\n\nimport ToDoList from \"./components/ToDoList\"\nimport AddTask from \"./components/AddTask\"\nimport ToolBar from \"./components/ToolBar\"\nimport React, {useState} from \"react\";\n\nfunction App(props) {\n    const[showCompleted, setShowCompleted] = useState(true);\n    const filteredList = props.taskList.filter(task => showCompleted || !task.isCompleted);\n    const numCompleted = props.taskList.filter(task => task.isCompleted).length;\n    const[homepage, showHomepage] = useState(true);\n\n\n    return (\n        homepage\n            ?\n            <div id=\"homepage\">\n                <div className=\"heading\">\n                    <h1>\n                        <div\n                            aria-label=\"Task Manager\"\n                            className=\"title\">\n                            Task Manager\n                        </div>\n                    </h1>\n                    <div className=\"header\">\n                        <h2>All Lists</h2>\n                    </div>\n                </div>\n                <div className=\"home-top-bar\">\n                    <div className=\"add-list\">\n                        <AddList\n                            onAddList={props.handleAddList}\n                            onListSelected={props.handleListSelected}\n                        />\n                    </div>\n                </div>\n                <div className=\"list-container\">\n                    <ListMenu\n                        listData={props.listData}\n                        currListID={props.currListID}\n                        currListName={props.currListName}\n                        onListSelected={props.handleListSelected}\n                        showHomepage={showHomepage}\n                        onDeleteList={props.handleDeleteList}\n                        onListFieldChanged={props.handleListFieldChanged}\n                    />\n                </div>\n            </div>\n            :\n            <div className=\"app-container\">\n                <div className=\"heading\">\n                    <h1>\n                        <button id=\"home-button\"\n                                aria-label=\"Home Button\"\n                                onClick={() => {\n                                    showHomepage(true);\n                                }}>\n                            <i className=\"las la-angle-left\">\n                            </i>\n                        </button>\n                        <div className=\"title\">\n                             Task Manager\n                        </div>\n                    </h1>\n                    <div>\n                        <h2>{props.currListName}</h2>\n                    </div>\n                </div>\n                <div className=\"topButtonBar\">\n                    <div className=\"add-task\">\n                        <AddTask\n                            taskList={filteredList}\n                            onSetTaskList={props.setTaskList}\n                            onAddTask={props.handleAddTask}\n                        />\n                    </div>\n                </div>\n                <div className=\"taskList\">\n                    <ToDoList\n                        taskList={filteredList}\n                        onDeleteTask={props.handleDeleteTask}\n                        onChangePriority={props.handleChangePriority}\n                        onDeleteTasks={props.handleDeleteTasks}\n                        onTaskFieldChanged={props.handleTaskFieldChanged}\n                        numCompleted={numCompleted}\n                    />\n                </div>\n                <div className=\"bottomBar\">\n                    <ToolBar\n                        onDeleteTasks={props.handleDeleteTasks}\n                        showCompleted={showCompleted}\n                        onSetShowCompleted={setShowCompleted}\n                        numCompleted={numCompleted}\n                        onSortSelected={props.handleSortSelected}\n                        sortOption={props.sortOption}\n                    />\n                </div>\n            </div>\n        );\n    }\n\nexport default App;\n","import React, {useState} from \"react\";\nimport App from \"./App\"\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n// Firebase initialization config provided from lab docs\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n    authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n    projectId: \"hmc-cs124-fa21-labs\",\n    storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n    messagingSenderId: \"949410042946\",\n    appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction FirestoreApp(props) {\n    const collectionName = \"em-zhang-tasks-v6\"\n    let queryAll = db.collection(collectionName);\n\n    const [all_value, all_loading, all_error] = useCollection(queryAll);\n\n    let listIDs = [];\n    if (all_value) {\n        listIDs = all_value.docs.map((doc) => {\n            return {...doc.data()}});\n    }\n    const [currentList, setCurrentList] = useState(\"default-list\");\n\n    let query = db.collection(collectionName).doc(currentList).collection(\"list-items\");\n\n    const [sortOption, setSortOption] = useState(\"dateCreated\");\n    if (sortOption){\n        // sort in descending order by priority\n        if (sortOption === \"priority\"){\n            query = query.orderBy(sortOption, \"desc\");\n        } else {\n            query = query.orderBy(sortOption);\n        }\n    }\n    const [value, loading, error] = useCollection(query); // You can change the const used here\n    let taskList = [];\n    if (value) {\n        taskList = value.docs.map((doc) => {\n            return {...doc.data()}\n        });\n    }\n\n    // adds a task, generating new id each time\n    function handleAddTask(currTask) {\n        const newId = generateUniqueID();\n        db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(newId).set({\n            taskId: newId,\n            taskLabel: currTask,\n            isCompleted: false,\n            priority: 1,\n            dateCreated: firebase.database.ServerValue.TIMESTAMP\n        });\n        return newId;\n    }\n\n    // handles updating any field of a task\n    function handleTaskFieldChanged(taskId, field, value) {\n        const doc = db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(taskId);\n        doc.update({\n            [field]: value,\n        })\n    }\n\n    // delete a task based on taskID\n    function handleDeleteTask(taskID) {\n        db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(taskID).delete();\n    }\n\n    // change a task's priority among 1/2/3\n    function handleChangePriority(taskID, taskPriority) {\n        let docRef = db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(taskID);\n        if (taskPriority === 1) {\n            docRef.update({\n                priority: 2\n            })\n        } else if (taskPriority === 2) {\n            docRef.update({\n                priority: 3\n            })\n        } else if (taskPriority === 3) {\n            docRef.update({\n                priority: 1\n            })\n        }\n    }\n\n    // delete completed tasks in a list\n    function handleDeleteTasks() {\n        let delete_query = db.collection(collectionName).doc(currentList).collection(\"list-items\").where('isCompleted', '==', true);\n        delete_query.get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n                doc.ref.delete();\n            });\n        });\n    }\n\n    // select a sort option\n    function handleSortSelected(option){\n        setSortOption(option);\n    }\n\n    // handles updating any field of a list\n    function handleListFieldChanged(listID, field, value) {\n        const doc = db.collection(collectionName).doc(listID);\n        doc.update({\n            [field]: value,\n        })\n    }\n\n    // add a new list\n    function handleAddList(newList){\n        const newId = generateUniqueID();\n        db.collection(collectionName).doc(newId).set({\n            id: newId,\n            listName: newList,\n        })\n        return newId;\n    }\n\n    // delete a list\n    function handleDeleteList(listID) {\n        db.collection(collectionName).doc(listID).delete();\n    }\n\n\n    // select and go into a list\n    function handleListSelected(list){\n        setCurrentList(list)\n    }\n\n    // determine what list name to display in the header of the app\n    let currentListName = \"\";\n    if (listIDs.length > 0){\n        // find the information of the current list that we are displaying\n        let currList = listIDs.filter((e) => e.id === currentList);\n        if (currList.length > 0) {\n            currentListName = listIDs.filter((e) => e.id === currentList)[0].listName;\n        }\n    }\n\n    return <div>\n        <App\n            listData={listIDs}\n            currListID={currentList}\n            currListName={currentListName}\n            handleAddList={handleAddList}\n            handleListSelected={handleListSelected}\n            handleDeleteList={handleDeleteList}\n            handleListFieldChanged={handleListFieldChanged}\n\n            taskList={taskList}\n            handleDeleteTask={handleDeleteTask}\n            handleChangePriority={handleChangePriority}\n            handleDeleteTasks={handleDeleteTasks}\n            handleAddTask={handleAddTask}\n            handleTaskFieldChanged={handleTaskFieldChanged}\n            handleSortSelected={handleSortSelected}\n            sortOption={sortOption}\n        />\n        {loading &&\n        <div className=\"loading-message\">\n            Loading...\n        </div>}\n    </div>\n}\n\nexport default FirestoreApp;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import InMemoryApp from './InMemoryApp';\nimport FirestoreApp from \"./FirestoreApp\";\n\nconst initialData = [\n    {\n        taskId: 0,\n        taskLabel: \"Get lunch at dining hall\",\n        isCompleted: true\n    },\n    {\n        taskId: 1,\n        taskLabel: \"Buy textbooks\",\n        isCompleted: false\n    },\n    {\n        taskId: 2,\n        taskLabel: \"Watch videos about React\",\n        isCompleted: true\n    },\n    {\n        taskId: 3,\n        taskLabel: \"Call Mom\",\n        isCompleted: false\n    },\n    {\n        taskId: 4,\n        taskLabel: \"Meet with Prof. Rhodes\",\n        isCompleted: false\n    },\n];\n\nReactDOM.render(\n  <React.StrictMode>\n      <FirestoreApp initialData={initialData}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}