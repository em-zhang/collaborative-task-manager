{"version":3,"sources":["components/SelectionMaintainingInput.js","components/ListItem.js","components/ListMenu.js","components/AddList.js","components/Task.js","components/ToDoList.js","components/AddTask.js","components/Alert.js","components/SortMenu.js","components/ToolBar.js","App.js","LoadingSymbol.gif","FirestoreApp.js","index.js"],"names":["SelectionMaintainingInput","props","value","onChange","rest","useState","cursor","setCursor","ref","useRef","useEffect","input","current","setSelectionRange","e","target","selectionStart","ListItem","className","id","listName","onListFieldChanged","listID","onKeyPress","key","preventDefault","document","getElementById","blur","onClick","onListSelected","showHomepage","focus","onDeleteList","ListMenu","listData","map","list","currListID","currListName","homepage","AddTask","currList","setCurrList","placeholder","onAddList","tabIndex","Task","taskLabel","itemName","setItemName","type","checked","isCompleted","onTaskFieldChanged","taskId","onBlur","disabled","priority","onChangePriority","repeat","onDeleteTask","ToDoList","taskList","task","AddList","currTask","setCurrTask","onAddTask","hasFocus","console","log","Alert","children","onOK","onClose","onKeyDown","keyCode","SortMenu","onSortByCreationDate","sortOption","onSortByName","onSortByPriority","ToolBar","showAlert","setShowAlert","showSortMenu","setShowSortMenu","toggleModal","toggleSortModal","onSortSelected","showCompleted","onSetShowCompleted","numCompleted","onDeleteTasks","App","setShowCompleted","filteredList","filter","length","handleAddList","handleListSelected","handleDeleteList","handleListFieldChanged","onSetTaskList","setTaskList","handleAddTask","handleDeleteTask","handleChangePriority","handleDeleteTasks","handleTaskFieldChanged","handleSortSelected","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","FirestoreApp","collectionName","queryAll","collection","useCollection","all_value","listIDs","docs","doc","data","currentList","setCurrentList","query","setSortOption","orderBy","loading","currentListName","newList","newId","generateUniqueID","set","delete","field","update","taskID","taskPriority","docRef","where","get","then","querySnapshot","forEach","dateCreated","database","ServerValue","TIMESTAMP","option","src","loadingSymbol","alt","ReactDOM","render","StrictMode","initialData"],"mappings":"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","file":"static/js/main.ec052b94.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nfunction SelectionMaintainingInput(props) {\n    const { value, onChange, ...rest } = props;\n    const [cursor, setCursor] = useState(null);\n    const ref = useRef(null);\n\n    useEffect(() => {\n        const input = ref.current;\n        if (input) input.setSelectionRange(cursor, cursor);\n    }, [ref, cursor, value]);\n\n    const handleChange = (e) => {\n        setCursor(e.target.selectionStart);\n        onChange && onChange(e);\n    };\n\n    return <TextareaAutosize ref={ref} value={value} onChange={handleChange} {...rest} />;\n}\n\nexport default SelectionMaintainingInput;","import './ListItem.css';\nimport SelectionMaintainingInput from \"./SelectionMaintainingInput\";\n\nfunction ListItem(props) {\n    return (\n        <div className=\"list-item-container\">\n            <SelectionMaintainingInput\n                id=\"list-item-label\"\n                value={props.listName}\n                onChange={(e) => {\n                    props.onListFieldChanged(props.listID, \"listName\", e.target.value)\n                }}\n                onKeyPress={e => {\n                    if (e.key === \"Enter\") {\n                        e.preventDefault();\n                        if(document.getElementById('list-item-label')){\n                            document.getElementById('list-item-label').blur();\n                        }\n                    }\n                }}\n            />\n            <div className=\"button-container\">\n                <button className=\"view-list-button\"\n                        onClick={() => {\n                            props.onListSelected(props.listID);\n                            props.showHomepage(false);\n                            if(document.getElementById(\"home-button\")){\n                                document.getElementById(\"home-button\").focus();\n                            }\n\n                        }}>\n                    View\n                </button>\n            </div>\n            <div>\n            <button\n                aria-label=\"Delete list button\"\n                className=\"delete-list-button\"\n                    onClick={() => {\n                        props.onDeleteList(props.listID);\n                    }}>\n                X\n            </button>\n            </div>\n        </div>\n    )\n}\n\nexport default ListItem;","import React from 'react';\nimport ListItem from './ListItem'\nimport './ListMenu.css';\n\nfunction ListMenu(props) {\n    return (\n        <div id=\"list-container\">\n            <div className=\"checklist\">\n                {props.listData.map(list =>\n                    <ListItem\n                        listID={list.id}\n                        listName={list.listName}\n                        currListID={props.currListID}\n                        currListName={props.currListName}\n                        onListSelected={props.onListSelected}\n                        homepage={props.homepage}\n                        showHomepage={props.showHomepage}\n                        onDeleteList={props.onDeleteList}\n                        onListFieldChanged={props.onListFieldChanged}\n                    />)}\n            </div>\n        </div>);\n}\n\nexport default ListMenu;","import './AddList.css';\nimport {useState} from \"react\";\n\nfunction AddTask(props){\n    const [currList, setCurrList] = useState(\"\");\n\n    return (\n        <div className=\"add-task-container\">\n            <input\n                className=\"todo-input\"\n                id=\"new-todo-text\"\n                placeholder=\"Create a new list\"\n                value={currList}\n                onChange={e => {\n                    setCurrList(e.target.value);\n                }}\n                onKeyPress={e => {\n                    if (currList !== \"\") {\n                        if (e.key === \"Enter\") {\n                            props.onAddList(currList);\n                            setCurrList(\"\");\n                        }\n                    }\n                }}\n            />\n            <button id={currList !== \"\" ? \"list-add-button\" : \"list-add-button-disabled\"}\n                    tabIndex = {currList !== \"\" ? 0 : 1}\n                    onClick={() => {\n                        if (currList !== \"\") {\n                            props.onAddList(currList);\n                            setCurrList(\"\");\n                        }\n                    }}>\n                Add\n            </button>\n        </div>\n    );\n}\n\nexport default AddTask;","import TextareaAutosize from 'react-textarea-autosize';\nimport {useState} from 'react';\nimport './Task.css';\n\nfunction Task(props) {\n    const [itemName, setItemName] = useState(props.taskLabel);\n\n    return (\n        <div className=\"task-container\">\n            <input type=\"checkbox\"\n                   className=\"checkbox\"\n                   checked={props.isCompleted}\n                   onChange={(e) => {\n                       props.onTaskFieldChanged(props.taskId, \"isCompleted\", e.target.checked)\n                   }}\n\n                   onKeyPress={e => {\n                       if (e.key === \"Enter\") {\n                           props.onTaskFieldChanged(props.taskId, \"isCompleted\", !props.isCompleted)\n                       }\n                   }}\n            />\n            <TextareaAutosize\n                id= {!props.isCompleted ? \"task-label\" : \"task-label-strikethrough\"}\n                value={itemName}\n                onChange={(e) => setItemName(e.target.value)}\n                onBlur={(e) =>\n                    props.onTaskFieldChanged(props.taskId, \"taskLabel\", itemName)\n                }\n                onKeyPress={e => {\n                    if (e.key === \"Enter\") {\n                        if (document.getElementById('task-label')){\n                            e.preventDefault();\n                            document.getElementById('task-label').blur();\n                        }\n                    }\n                }}\n                // don't allow user to edit a task if it's been marked completed\n                disabled={props.isCompleted}\n            />\n            <div className=\"button-container\">\n                <button className=\"priority-button\"\n                        id={props.priority === 3 ? \"high\" : props.priority === 2 ? \"medium\" : \"low\"}\n                        aria-label= {(props.priority === 3 ? \"high\" : props.priority === 2 ? \"medium\" : \"low\") + \" priority\"}\n                        onClick={() => {\n                            props.onChangePriority(props.taskId, props.priority);\n                        }}>\n                    {\"!\".repeat(props.priority)}\n                </button>\n            </div>\n            <div>\n                <button\n                    className=\"delete-list-button\"\n                    aria-label=\"delete\"\n                        onClick={() => {\n                            props.onDeleteTask(props.taskId);\n                        }}>\n                    X\n                </button>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Task;","import React from 'react';\nimport Task from \"./Task\";\nimport './ToDoList.css';\n\nfunction ToDoList(props) {\n    return (\n        <div id=\"list-container\">\n            <div className=\"checklist\">\n                {props.taskList.map(task =>\n                    <Task {...task}\n                          key={task.taskId}\n                          onDeleteTask={props.onDeleteTask}\n                          onTaskFieldChanged={props.onTaskFieldChanged}\n                          onChangePriority={props.onChangePriority}\n                    />)}\n            </div>\n        </div>);\n}\n\nexport default ToDoList;","import './AddTask.css';\nimport {useState} from \"react\";\n\nfunction AddList(props){\n    const [currTask, setCurrTask] = useState(\"\");\n\n    return (\n        <div className=\"add-task-container\">\n            <input\n                className=\"todo-input\"\n                id=\"new-todo-text\"\n                placeholder=\"Create a new task\"\n                value={currTask}\n                onChange={e => {\n                    setCurrTask(e.target.value);\n                }}\n                onKeyPress={e => {\n                    if (currTask !== \"\") {\n                        if (e.key === \"Enter\") {\n                            props.onAddTask(currTask);\n                            setCurrTask(\"\");\n                        }\n                    }\n                }}\n            />\n            <button className={currTask !== \"\" ? \"add-button\" : \"add-button-disabled\"}\n                    tabIndex = {currTask !== \"\" ? 0 : 1}\n                    onClick={() => {\n                        if (currTask !== \"\") {\n                            props.onAddTask(currTask);\n                            setCurrTask(\"\");\n                        }\n                    }}>\n                Add\n            </button>\n        </div>\n    );\n}\n\nexport default AddList;","import './Alert.css';\n\nif ((document.getElementById('alert-cancel') && document.getElementById('alert-cancel').hasFocus())) {\n    console.log(\"on cancel\");\n}\n\nfunction Alert(props) {\n    return (\n        <div className={\"backdrop\"}>\n            <div id=\"modal\">\n                {props.children}\n                <div className=\"alert-buttons\">\n                    <button id=\"alert-ok\"\n                            onClick={() => {\n                                props.onOK();\n                                props.onClose();\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-cancel\").focus();\n                                }\n                            }}\n                    >\n                        OK\n                    </button>\n\n                    <button tabIndex=\"0\"\n                            className=\"alert-button\"\n                            id=\"alert-cancel\"\n                            onClick={() => props.onClose()}\n                            onKeyDown={e => {\n                                if(e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-ok\").focus();\n                                }\n                            }}\n                    >\n                        Cancel\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Alert;","import './SortMenu.css';\n\nfunction SortMenu(props) {\n    return (\n        <div className=\"sort-backdrop\">\n            <div className=\"sort-modal\">\n                {props.children}\n                <div className=\"sort-buttons\">\n                    <div id=\"sort-by\">\n                        Sort by:\n                    </div>\n                    <button className={\"alert-button\"} id={\"alert-sort-date\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByCreationDate();\n                                props.onClose()\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-sort-name\").focus();\n                                }\n                            }}\n                    >\n                        {props.sortOption === \"dateCreated\" ? \"✓ Date Created\" : \"Date Created\"}\n                    </button>\n                    <button className={\"alert-button\"} id={\"alert-sort-name\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByName();\n                                props.onClose()\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-sort-priority\").focus();\n                                }\n                            }}\n                    >\n                        {props.sortOption === \"taskLabel\" ? \"✓ Name\" : \"Name\"}\n                    </button>\n                    <button className={\"alert-button\"} id={\"alert-sort-priority\"} type={\"button\"}\n                            onClick={() => {\n                                props.onSortByPriority();\n                                props.onClose()\n                            }}\n                            onKeyDown={e => {\n                                if (e.keyCode === 9) {\n                                    e.preventDefault();\n                                    document.getElementById(\"alert-sort-date\").focus();\n                                }\n                            }}\n                    >\n                        {props.sortOption === \"priority\" ? \"✓ Priority\" : \"Priority\"}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SortMenu;","import Alert from \"../components/Alert\"\nimport SortMenu from \"../components/SortMenu\"\nimport React, {useState} from \"react\";\nimport './ToolBar.css';\n\nfunction ToolBar(props) {\n    const [showAlert, setShowAlert] = useState(false);\n    const [showSortMenu, setShowSortMenu] = useState(false);\n\n    function handleSortByName() {\n        props.onSortSelected(\"taskLabel\");\n    }\n\n    function handleSortByPriority() {\n        props.onSortSelected(\"priority\");\n    }\n\n    function handleSortByCreationDate() {\n        props.onSortSelected(\"dateCreated\");\n    }\n\n    function handleAlertOK() {\n        props.onDeleteTasks();\n    }\n\n    function toggleModal() {\n        setShowAlert(!showAlert)\n    }\n\n    function toggleSortModal() {\n        setShowSortMenu(!showSortMenu)\n    }\n\n    function toggleShowCompleted() {\n        props.showCompleted ? props.onSetShowCompleted(false) : props.onSetShowCompleted(true)\n    }\n\n    return (\n        <div>\n            <div className=\"toolbar\">\n                <button\n                    id=\"sort-button\"\n                    className=\"toolbar-button\"\n                    onClick={toggleSortModal}>\n                    <i id=\"sort-icon\" className=\"las la-sort-amount-down\"></i>\n                    <br/>\n                    Sort\n                </button>\n                {showSortMenu &&\n                <SortMenu className=\"toolbar-button\"\n                          sortOption={props.sortOption}\n                          onClose={toggleSortModal}\n                          onSortByName={handleSortByName}\n                          onSortByPriority={handleSortByPriority}\n                          onSortByCreationDate={handleSortByCreationDate}>\n                </SortMenu>}\n                <button\n                    className=\"toolbar-button\"\n                    id=\"hide-button\"\n                    onClick={() => {toggleShowCompleted()}}>\n                    <i id=\"hide-icon\"\n                       className={props.showCompleted ? \"las la-eye-slash\": \"las la-eye\"}>\n                    </i>\n                    <br/>\n                    {props.showCompleted ? \"Hide Completed\" : \"Show All\"}\n                </button>\n                <button\n                    className=\"toolbar-button\"\n                    id={props.numCompleted !== 0 ? \"delete-button\" : \"delete-completed-button-hidden\"}\n                    disabled={props.numCompleted === 0}\n                    onClick={toggleModal}\n                    >\n                    <i id=\"delete-icon\" className=\"las la-trash\">\n                    </i>\n                    <br/>\n                    Delete Completed\n                </button>\n            </div>\n            {showAlert && <Alert onClose={toggleModal} onOK={handleAlertOK}>\n                <div>\n                    Are you sure you want to delete all {props.numCompleted} completed tasks?\n                </div>\n            </Alert>}\n        </div>\n    );\n}\n\nexport default ToolBar;","import './App.css';\nimport './index.js';\nimport ListMenu from \"./components/ListMenu\"\nimport AddList from \"./components/AddList\"\n\nimport ToDoList from \"./components/ToDoList\"\nimport AddTask from \"./components/AddTask\"\nimport ToolBar from \"./components/ToolBar\"\nimport React, {useState} from \"react\";\n\nfunction App(props) {\n    const[showCompleted, setShowCompleted] = useState(true);\n    const filteredList = props.taskList.filter(task => showCompleted || !task.isCompleted);\n    const numCompleted = props.taskList.filter(task => task.isCompleted).length;\n    const[homepage, showHomepage] = useState(true);\n\n    return (\n        homepage\n            ?\n            <div className=\"app-container\">\n                <div className=\"heading\">\n                    <h1>\n                        <div\n                            aria-label=\"Task Manager\"\n                            className=\"title\">\n                            Task Manager\n                        </div>\n                    </h1>\n                    <div className=\"header\">\n                        <h2>All Lists</h2>\n                    </div>\n                </div>\n                <div className=\"top-button-bar\">\n                    <div className=\"add-task\">\n                        <AddList\n                            onAddList={props.handleAddList}\n                            onListSelected={props.handleListSelected}\n                        />\n                    </div>\n                </div>\n                <div className=\"taskList\">\n                    <ListMenu\n                        listData={props.listData}\n                        currListID={props.currListID}\n                        currListName={props.currListName}\n                        onListSelected={props.handleListSelected}\n                        showHomepage={showHomepage}\n                        onDeleteList={props.handleDeleteList}\n                        onListFieldChanged={props.handleListFieldChanged}\n                    />\n                </div>\n            </div>\n            :\n            <div className=\"app-container\">\n                <div className=\"heading\">\n                    <h1>\n                        <button id=\"home-button\"\n                                aria-label=\"Home Button\"\n                                onClick={() => {\n                                    showHomepage(true);\n                                }}>\n                            <i className=\"las la-angle-left\">\n                            </i>\n                        </button>\n                        <div className=\"title\">\n                             Task Manager\n                        </div>\n                    </h1>\n                    <div>\n                        <h2>{props.currListName}</h2>\n                    </div>\n                </div>\n                <div className=\"top-button-bar\">\n                    <div className=\"add-task\">\n                        <AddTask\n                            taskList={filteredList}\n                            onSetTaskList={props.setTaskList}\n                            onAddTask={props.handleAddTask}\n                        />\n                    </div>\n                </div>\n                <div className=\"taskList\">\n                    <ToDoList\n                        taskList={filteredList}\n                        onDeleteTask={props.handleDeleteTask}\n                        onChangePriority={props.handleChangePriority}\n                        onDeleteTasks={props.handleDeleteTasks}\n                        onTaskFieldChanged={props.handleTaskFieldChanged}\n                        numCompleted={numCompleted}\n                    />\n                </div>\n                <div className=\"bottomBar\">\n                    <ToolBar\n                        onDeleteTasks={props.handleDeleteTasks}\n                        showCompleted={showCompleted}\n                        onSetShowCompleted={setShowCompleted}\n                        numCompleted={numCompleted}\n                        onSortSelected={props.handleSortSelected}\n                        sortOption={props.sortOption}\n                    />\n                </div>\n            </div>\n        );\n    }\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/LoadingSymbol.e9f28dc7.gif\";","import React, {useState} from \"react\";\nimport App from \"./App\"\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport loadingSymbol from '../src/LoadingSymbol.gif'\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n// Firebase initialization config provided from lab docs\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n    authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n    projectId: \"hmc-cs124-fa21-labs\",\n    storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n    messagingSenderId: \"949410042946\",\n    appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction FirestoreApp(props) {\n    const collectionName = \"em-zhang-tasks-v6\"\n    let queryAll = db.collection(collectionName);\n    const [all_value] = useCollection(queryAll);\n\n    let listIDs = [];\n    if (all_value) {\n        listIDs = all_value.docs.map((doc) => {\n            return {...doc.data()}});\n    }\n\n    // only get data from the current list\n    const [currentList, setCurrentList] = useState(\"default-list\");\n    let query = db.collection(collectionName).doc(currentList).collection(\"list-items\");\n\n    // set the sort option to order the query\n    const [sortOption, setSortOption] = useState(\"dateCreated\");\n    query = query.orderBy(sortOption, sortOption === \"priority\" ? \"desc\" : \"asc\")\n\n    // return values of the task list\n    const [value, loading, error] = useCollection(query);\n    let taskList = [];\n    if (value) {\n        taskList = value.docs.map((doc) => {\n            return {...doc.data()}\n        });\n    }\n\n    // adds a task, generating new id each time\n    function handleAddTask(currTask) {\n        const newId = generateUniqueID();\n        db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(newId).set({\n            taskId: newId,\n            taskLabel: currTask,\n            isCompleted: false,\n            priority: 1,\n            dateCreated: firebase.database.ServerValue.TIMESTAMP\n        });\n        return newId;\n    }\n\n    // handles updating any field of a task\n    function handleTaskFieldChanged(taskId, field, value) {\n        const doc = db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(taskId);\n        doc.update({\n            [field]: value,\n        })\n    }\n\n    // delete a task based on taskID\n    function handleDeleteTask(taskID) {\n        db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(taskID).delete();\n    }\n\n    // change a task's priority among 1/2/3\n    function handleChangePriority(taskID, taskPriority) {\n        let docRef = db.collection(collectionName).doc(currentList).collection(\"list-items\").doc(taskID);\n        if (taskPriority === 1) {\n            docRef.update({\n                priority: 2\n            })\n        } else if (taskPriority === 2) {\n            docRef.update({\n                priority: 3\n            })\n        } else if (taskPriority === 3) {\n            docRef.update({\n                priority: 1\n            })\n        }\n    }\n\n    // delete completed tasks in a list\n    function handleDeleteTasks() {\n        let delete_query = db.collection(collectionName).doc(currentList).collection(\"list-items\").where('isCompleted', '==', true);\n        delete_query.get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n                doc.ref.delete();\n            });\n        });\n    }\n\n    // select a sort option\n    function handleSortSelected(option){\n        setSortOption(option);\n    }\n\n    // handles updating any field of a list\n    function handleListFieldChanged(listID, field, value) {\n        const doc = db.collection(collectionName).doc(listID);\n        doc.update({\n            [field]: value,\n        })\n    }\n\n    // add a new list\n    function handleAddList(newList){\n        const newId = generateUniqueID();\n        db.collection(collectionName).doc(newId).set({\n            id: newId,\n            listName: newList,\n        })\n        return newId;\n    }\n\n    // delete a list\n    function handleDeleteList(listID) {\n        db.collection(collectionName).doc(listID).delete();\n    }\n\n\n    // select and go into a list\n    function handleListSelected(list){\n        setCurrentList(list)\n    }\n\n    // determine what list name to display in the header of the app\n    let currentListName = \"\";\n    if (listIDs.length > 0){\n        // find the information of the current list that we are displaying\n        let currList = listIDs.filter((e) => e.id === currentList);\n        if (currList.length > 0) {\n            currentListName = listIDs.filter((e) => e.id === currentList)[0].listName;\n        }\n    }\n\n    return <div>\n        <App\n            listData={listIDs}\n            currListID={currentList}\n            currListName={currentListName}\n            handleAddList={handleAddList}\n            handleListSelected={handleListSelected}\n            handleDeleteList={handleDeleteList}\n            handleListFieldChanged={handleListFieldChanged}\n\n            taskList={taskList}\n            handleDeleteTask={handleDeleteTask}\n            handleChangePriority={handleChangePriority}\n            handleDeleteTasks={handleDeleteTasks}\n            handleAddTask={handleAddTask}\n            handleTaskFieldChanged={handleTaskFieldChanged}\n            handleSortSelected={handleSortSelected}\n            sortOption={sortOption}\n        />\n        {loading &&\n        <div className=\"loading-message\">\n            <img src={loadingSymbol} alt=\"Loading...\" />\n        </div>}\n    </div>\n}\n\nexport default FirestoreApp;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import InMemoryApp from './InMemoryApp';\nimport FirestoreApp from \"./FirestoreApp\";\n\nconst initialData = [\n    {\n        taskId: 0,\n        taskLabel: \"Get lunch at dining hall\",\n        isCompleted: true\n    },\n    {\n        taskId: 1,\n        taskLabel: \"Buy textbooks\",\n        isCompleted: false\n    },\n    {\n        taskId: 2,\n        taskLabel: \"Watch videos about React\",\n        isCompleted: true\n    },\n    {\n        taskId: 3,\n        taskLabel: \"Call Mom\",\n        isCompleted: false\n    },\n    {\n        taskId: 4,\n        taskLabel: \"Meet with Prof. Rhodes\",\n        isCompleted: false\n    },\n];\n\nReactDOM.render(\n  <React.StrictMode>\n      <FirestoreApp initialData={initialData}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}